USE [Bodega]
GO
/****** Object:  Table [dbo].[SCHEMATA]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SCHEMATA](
	[CATALOG_NAME] [nvarchar](128) NOT NULL,
	[SCHEMA_NAME] [nvarchar](128) NULL,
	[SCHEMA_OWNER] [nvarchar](128) NULL,
	[DEFAULT_CHARACTER_SET_CATALOG] [varchar](6) NOT NULL,
	[DEFAULT_CHARACTER_SET_SCHEMA] [varchar](3) NOT NULL,
	[DEFAULT_CHARACTER_SET_NAME] [nvarchar](128) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[REFERENTIAL_CONSTRAINTS]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[REFERENTIAL_CONSTRAINTS](
	[CONSTRAINT_CATALOG] [nvarchar](128) NULL,
	[CONSTRAINT_SCHEMA] [nvarchar](128) NULL,
	[CONSTRAINT_NAME] [nvarchar](128) NOT NULL,
	[UNIQUE_CONSTRAINT_CATALOG] [nvarchar](128) NULL,
	[UNIQUE_CONSTRAINT_SCHEMA] [nvarchar](128) NULL,
	[UNIQUE_CONSTRAINT_NAME] [nvarchar](128) NOT NULL,
	[MATCH_OPTION] [varchar](7) NOT NULL,
	[UPDATE_RULE] [varchar](9) NOT NULL,
	[DELETE_RULE] [varchar](9) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Proveedor]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Proveedor](
	[strCodigo] [char](5) NOT NULL
) ON [PRIMARY]
SET ANSI_PADDING ON
ALTER TABLE [dbo].[Proveedor] ADD [strRut] [char](11) NULL
ALTER TABLE [dbo].[Proveedor] ADD [strCI] [varchar](9) NULL
SET ANSI_PADDING OFF
ALTER TABLE [dbo].[Proveedor] ADD [strNombre] [varchar](100) NOT NULL
ALTER TABLE [dbo].[Proveedor] ADD [strDireccion] [varchar](50) NULL
ALTER TABLE [dbo].[Proveedor] ADD [strComuna] [char](5) NULL
ALTER TABLE [dbo].[Proveedor] ADD [strTelefono] [varchar](50) NULL
ALTER TABLE [dbo].[Proveedor] ADD [strFax] [varchar](50) NULL
ALTER TABLE [dbo].[Proveedor] ADD [strContacto] [varchar](50) NULL
ALTER TABLE [dbo].[Proveedor] ADD [intFormaPago] [char](5) NULL
ALTER TABLE [dbo].[Proveedor] ADD [intVigente] [int] NULL
ALTER TABLE [dbo].[Proveedor] ADD [strCorreo] [varchar](100) NULL
ALTER TABLE [dbo].[Proveedor] ADD [strBodega] [char](5) NULL
ALTER TABLE [dbo].[Proveedor] ADD [dtmFecha] [datetime] NULL
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PasoVC]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[PasoVC](
	[strCodigo] [char](10) NOT NULL,
	[strDescripcion] [varchar](100) NULL,
	[strUnidad] [char](10) NULL,
	[Consumo] [decimal](38, 2) NULL,
	[Compra] [int] NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PasoStMv]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PasoStMv](
	[strMovil] [char](10) NOT NULL,
	[strCodigo] [char](6) NULL,
	[Cantidad] [numeric](38, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PasoSM]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[PasoSM](
	[strMovil] [char](10) NOT NULL,
	[strCodigo] [char](10) NOT NULL,
	[dblCantidad] [decimal](18, 2) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PasoResumenBodega]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PasoResumenBodega](
	[strCodigo] [varchar](25) NULL,
	[dblIngresos] [numeric](15, 5) NULL,
	[dblDespachos] [numeric](15, 5) NULL,
	[dblInformes] [numeric](15, 5) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PasoLM]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[PasoLM](
	[strCodigo] [char](10) NULL,
	[strDescripcion] [varchar](100) NULL,
	[strUnidad] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 0) NULL,
	[dblvalor] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PasoCargo]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[PasoCargo](
	[dtmFecha] [datetime] NULL,
	[strRut] [char](15) NULL,
	[strNombre] [varchar](100) NULL,
	[strCodigo] [char](10) NULL,
	[strDescripcion] [varchar](100) NULL,
	[strUnidad] [char](10) NULL,
	[dblCantidad] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Observaciones]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Observaciones](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[strTipoDoc] [char](5) NOT NULL,
	[dtmFecha] [datetime] NOT NULL,
	[strObservacion] [varchar](200) NOT NULL,
	[strUsuario] [varchar](20) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MaterialCasa]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[MaterialCasa](
	[CODROSS] [decimal](18, 0) NULL,
	[strCodigo] [varchar](50) NOT NULL,
	[strFamilia] [char](10) NULL,
	[strDescripcion] [varchar](100) NULL,
	[strUnidad] [char](10) NULL,
	[dblValorP] [decimal](18, 0) NULL,
	[dblValorUC] [decimal](18, 0) NULL,
	[dtmUC] [datetime] NULL,
	[strAgrupacion] [char](3) NULL,
	[strCodigoSAR] [char](5) NULL,
	[dblSalida] [decimal](18, 0) NULL,
	[dblInicial] [decimal](18, 2) NULL,
	[strUnidadCompra] [char](10) NULL,
	[dtmStock] [datetime] NULL,
	[strTipoUnidad] [varchar](1) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[KEY_COLUMN_USAGE]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[KEY_COLUMN_USAGE](
	[CONSTRAINT_CATALOG] [nvarchar](128) NULL,
	[CONSTRAINT_SCHEMA] [nvarchar](128) NULL,
	[CONSTRAINT_NAME] [nvarchar](128) NOT NULL,
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[COLUMN_NAME] [nvarchar](128) NOT NULL,
	[ORDINAL_POSITION] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Ingreso]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Ingreso](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dblNum] [decimal](18, 0) NULL,
	[dtmFecha] [datetime] NULL,
	[strReferencia] [varchar](50) NULL,
	[dblOrdenC] [decimal](18, 0) NULL,
	[strBodega] [char](5) NULL,
	[strCargo] [char](10) NULL,
	[intCC] [decimal](18, 0) NULL,
	[intTipoDoc] [decimal](18, 0) NULL,
	[dblEstado] [decimal](18, 0) NULL,
	[intVigente] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Impuesto]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Impuesto](
	[id] [bigint] IDENTITY(1,1) NOT NULL,
	[strDescripcion] [varchar](50) NOT NULL,
	[dblFactor] [decimal](18, 8) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[HistoricoPrecio]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[HistoricoPrecio](
	[strCodigo] [char](6) NOT NULL,
	[strBodega] [char](5) NOT NULL,
	[Fecha] [decimal](18, 0) NOT NULL,
	[dblPrecio] [decimal](10, 2) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[HistoricoDevolucion]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[HistoricoDevolucion](
	[dblNumero] [decimal](18, 0) NULL,
	[strRut] [varchar](10) NULL,
	[strCodigo] [varchar](10) NULL,
	[dblRetiro] [decimal](18, 2) NULL,
	[dblDevuelto] [int] NOT NULL,
	[dtmFecha] [datetime] NULL,
	[strBodega] [char](5) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Familia]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Familia](
	[strCentroCosto] [char](5) NULL,
	[strCodigo] [char](10) NOT NULL,
	[strDetalle] [varchar](60) NOT NULL,
	[dblTipoFamilia] [char](1) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Facturas]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Facturas](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dtmFecha] [datetime] NULL,
	[dblNumOC] [decimal](18, 0) NULL,
	[dblTipoDoc] [decimal](18, 0) NULL,
	[dblNumDoc] [decimal](18, 0) NULL,
	[dblMonto] [decimal](18, 0) NULL,
	[strUsuario] [varchar](100) NULL,
	[strProveedor] [varchar](100) NULL,
	[dblEstado] [decimal](18, 0) NULL,
	[strArchivo] [varchar](255) NULL,
	[dblEPago] [decimal](18, 0) NULL,
	[strModulo] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[equipos]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[equipos](
	[CODIGO] [varchar](6) NULL,
	[DESCRIPCION] [varchar](120) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EncargadoCajaChica]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[EncargadoCajaChica](
	[dblId] [decimal](18, 0) NULL,
	[strRut] [varchar](10) NULL,
	[strBodega] [varchar](50) NULL,
	[dblMonto] [decimal](18, 0) NULL,
	[dblCorrelativo] [decimal](18, 0) NULL,
	[dblVigente] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOMAINS]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOMAINS](
	[DOMAIN_CATALOG] [nvarchar](128) NULL,
	[DOMAIN_SCHEMA] [nvarchar](128) NULL,
	[DOMAIN_NAME] [nvarchar](128) NOT NULL,
	[DATA_TYPE] [nvarchar](128) NULL,
	[CHARACTER_MAXIMUM_LENGTH] [smallint] NULL,
	[CHARACTER_OCTET_LENGTH] [smallint] NULL,
	[COLLATION_CATALOG] [varchar](6) NULL,
	[COLLATION_SCHEMA] [varchar](3) NULL,
	[COLLATION_NAME] [nvarchar](128) NULL,
	[CHARACTER_SET_CATALOG] [varchar](6) NULL,
	[CHARACTER_SET_SCHEMA] [varchar](3) NULL,
	[CHARACTER_SET_NAME] [nvarchar](128) NULL,
	[NUMERIC_PRECISION] [tinyint] NULL,
	[NUMERIC_PRECISION_RADIX] [smallint] NULL,
	[NUMERIC_SCALE] [tinyint] NULL,
	[DATETIME_PRECISION] [smallint] NULL,
	[DOMAIN_DEFAULT] [nvarchar](4000) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOMAIN_CONSTRAINTS]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOMAIN_CONSTRAINTS](
	[CONSTRAINT_CATALOG] [nvarchar](128) NULL,
	[CONSTRAINT_SCHEMA] [nvarchar](128) NULL,
	[CONSTRAINT_NAME] [nvarchar](128) NOT NULL,
	[DOMAIN_CATALOG] [nvarchar](128) NULL,
	[DOMAIN_SCHEMA] [nvarchar](128) NULL,
	[DOMAIN_NAME] [nvarchar](128) NOT NULL,
	[IS_DEFERRABLE] [varchar](2) NOT NULL,
	[INITIALLY_DEFERRED] [varchar](2) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Devolucion]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Devolucion](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dblNum] [decimal](18, 0) NULL,
	[dtmFecha] [datetime] NOT NULL,
	[strMovil] [char](10) NOT NULL,
	[strBodega] [char](5) NOT NULL,
	[intVigente] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleVC]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleVC](
	[dblInterno] [decimal](18, 0) NOT NULL,
	[strCodigo] [char](10) NOT NULL,
	[dblCantidad] [decimal](18, 2) NOT NULL,
	[strPartida] [varchar](20) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleTerminoBodega]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleTerminoBodega](
	[dblNumero] [decimal](18, 0) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblStock] [decimal](18, 2) NULL,
	[dblDevolucion] [decimal](18, 2) NULL,
	[dblPrecio] [decimal](18, 0) NULL,
	[strObservacion] [varchar](1000) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleSM]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleSM](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[strCodigo] [char](10) NOT NULL,
	[dblCantidad] [decimal](18, 2) NOT NULL,
	[dblCantidadAut] [decimal](18, 2) NULL,
	[dblOC] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleOrdenC]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleOrdenC](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[strCodigo] [char](6) NOT NULL,
	[dblCantidad] [decimal](18, 2) NOT NULL,
	[dblValor] [decimal](18, 2) NOT NULL,
	[dtmInicio] [datetime] NULL,
	[dtmTermino] [datetime] NULL,
	[dblNumSol] [decimal](18, 0) NULL,
	[strCCosto] [varchar](50) NULL,
	[dblFactura] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleIngreso]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleIngreso](
	[dblNumero] [decimal](18, 0) NULL,
	[strCodigo] [char](6) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[dblValor] [decimal](18, 2) NULL,
	[dblNumOC] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleGuiaCargos]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleGuiaCargos](
	[dblNumero] [decimal](18, 0) NULL,
	[strCodigo] [varchar](10) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[strCargo] [varchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleFacturaInterna]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleFacturaInterna](
	[dblNumero] [decimal](18, 0) NULL,
	[strCodigo] [varchar](50) NULL,
	[dtmFInicio] [datetime] NULL,
	[dtmFTermino] [datetime] NULL,
	[strCCosto] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[dblPrecio] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleDevolucionCargos]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleDevolucionCargos](
	[dblNumero] [decimal](18, 0) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[strCargo] [varchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleDevolucion]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleDevolucion](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[strCodigo] [char](6) NOT NULL,
	[dblCantidad] [decimal](18, 2) NOT NULL,
	[strRut] [char](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleDespacho]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleDespacho](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[strCodigo] [char](6) NOT NULL,
	[dblCantidad] [decimal](18, 2) NOT NULL,
	[strRut] [char](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DetalleCajaC]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[DetalleCajaC](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[strCodigo] [char](6) NOT NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[dblValor] [decimal](18, 0) NULL,
	[dblTipoDoc] [decimal](18, 0) NULL,
	[dblNumDoc] [decimal](18, 0) NULL,
	[dblNumOC] [decimal](18, 0) NULL,
	[dblRechazo] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Detalle_TMP]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Detalle_TMP](
	[strUsuario] [varchar](50) NULL,
	[strTipoDoc] [varchar](5) NULL,
	[strCodigo] [varchar](50) NULL,
	[strPartida] [varchar](20) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[dblValor] [decimal](18, 0) NULL,
	[dblNumFil] [decimal](18, 0) NULL,
	[dtmFchIni] [datetime] NULL,
	[dtmFchTer] [datetime] NULL,
	[dblNumSol] [decimal](18, 0) NULL,
	[dblNumOC] [decimal](18, 0) NULL,
	[strCCosto] [varchar](50) NULL,
	[dblFactura] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Despacho]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Despacho](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dtmDespacho] [datetime] NOT NULL,
	[strMovil] [char](10) NOT NULL,
	[intMaterialEmos] [smallint] NULL,
	[strMR] [char](10) NULL,
	[strBodega] [char](5) NULL,
	[intVigente] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[crosstab]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[crosstab] 
@select varchar(8000),
@sumfunc varchar(100), 
@pivot varchar(100), 
@table varchar(100) 
AS
DECLARE @sql varchar(8000), @delim varchar(1)
SET NOCOUNT ON
SET ANSI_WARNINGS OFF
EXEC ('SELECT ' + @pivot + ' AS pivot INTO ##pivot FROM ' + @table + ' WHERE 1=2')
EXEC ('INSERT INTO ##pivot SELECT DISTINCT ' + @pivot + ' FROM ' + @table + ' WHERE ' 
+ @pivot + ' Is Not Null')
SELECT @sql='',  @sumfunc=stuff(@sumfunc, len(@sumfunc), 1, ' END)' )
SELECT @delim=CASE Sign( CharIndex('char', data_type)+CharIndex('date', data_type) ) 
WHEN 0 THEN '' ELSE '''' END 
FROM tempdb.information_schema.columns 
WHERE table_name='##pivot' AND column_name='pivot'
SELECT @sql=@sql + '''' + convert(varchar(100), pivot) + ''' = ' + 
stuff(@sumfunc,charindex( '(', @sumfunc )+1, 0, ' CASE ' + @pivot + ' WHEN ' 
+ @delim + convert(varchar(100), pivot) + @delim + ' THEN ' ) + ', ' FROM ##pivot
DROP TABLE ##pivot
SELECT @sql=left(@sql, len(@sql)-1)
SELECT @select=stuff(@select, charindex(' FROM ', @select)+1, 0, ', ' + @sql + ' ')
EXEC (@select)
SET ANSI_WARNINGS ON
GO
/****** Object:  Table [dbo].[CorrelativoDoc]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CorrelativoDoc](
	[dblNumero] [bigint] IDENTITY(203377,1) NOT NULL,
	[strUsuario] [varchar](150) NOT NULL,
	[strTipoDoc] [char](10) NOT NULL,
	[dblCorrelativoUsu] [decimal](18, 0) NULL,
	[dtmFecha] [datetime] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[dblNumero] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 90) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Correlativo]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Correlativo](
	[strCodigo] [varchar](5) NULL,
	[dblNumero] [decimal](18, 0) NULL,
	[strDetalle] [varchar](100) NULL,
	[strBodega] [char](5) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CONSTRAINT_TABLE_USAGE]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CONSTRAINT_TABLE_USAGE](
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[CONSTRAINT_CATALOG] [nvarchar](128) NULL,
	[CONSTRAINT_SCHEMA] [nvarchar](128) NULL,
	[CONSTRAINT_NAME] [nvarchar](128) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CONSTRAINT_COLUMN_USAGE]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CONSTRAINT_COLUMN_USAGE](
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[COLUMN_NAME] [nvarchar](128) NOT NULL,
	[CONSTRAINT_CATALOG] [nvarchar](128) NULL,
	[CONSTRAINT_SCHEMA] [nvarchar](128) NULL,
	[CONSTRAINT_NAME] [nvarchar](128) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Comprobantes]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Comprobantes](
	[CodAux] [varchar](10) NOT NULL,
	[CpbAno] [varchar](4) NOT NULL,
	[cpbNum] [varchar](8) NOT NULL,
	[CpbFec] [datetime] NULL,
	[NumFactura] [float] NULL,
	[MovDebe] [float] NULL,
	[MovHaber] [float] NULL,
	[MovGlosa] [varchar](60) NULL,
	[FecPag] [datetime] NULL,
	[MtoTotal] [float] NULL,
	[TtdCod] [varchar](2) NOT NULL,
	[NumCheque] [float] NULL,
	[Estado] [varchar](9) NOT NULL,
	[Tipo] [varchar](8) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[COLUMNS]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[COLUMNS](
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[COLUMN_NAME] [nvarchar](128) NOT NULL,
	[ORDINAL_POSITION] [smallint] NOT NULL,
	[COLUMN_DEFAULT] [nvarchar](4000) NULL,
	[IS_NULLABLE] [varchar](3) NOT NULL,
	[DATA_TYPE] [nvarchar](128) NULL,
	[CHARACTER_MAXIMUM_LENGTH] [smallint] NULL,
	[CHARACTER_OCTET_LENGTH] [smallint] NULL,
	[NUMERIC_PRECISION] [tinyint] NULL,
	[NUMERIC_PRECISION_RADIX] [smallint] NULL,
	[NUMERIC_SCALE] [int] NULL,
	[DATETIME_PRECISION] [smallint] NULL,
	[CHARACTER_SET_CATALOG] [varchar](6) NULL,
	[CHARACTER_SET_SCHEMA] [varchar](3) NULL,
	[CHARACTER_SET_NAME] [nvarchar](128) NULL,
	[COLLATION_CATALOG] [varchar](6) NULL,
	[COLLATION_SCHEMA] [varchar](3) NULL,
	[COLLATION_NAME] [nvarchar](128) NULL,
	[DOMAIN_CATALOG] [nvarchar](128) NULL,
	[DOMAIN_SCHEMA] [nvarchar](128) NULL,
	[DOMAIN_NAME] [nvarchar](128) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[COLUMN_PRIVILEGES]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[COLUMN_PRIVILEGES](
	[GRANTOR] [nvarchar](128) NULL,
	[GRANTEE] [nvarchar](128) NULL,
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[COLUMN_NAME] [nvarchar](128) NOT NULL,
	[PRIVILEGE_TYPE] [varchar](10) NOT NULL,
	[IS_GRANTABLE] [varchar](3) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[COLUMN_DOMAIN_USAGE]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[COLUMN_DOMAIN_USAGE](
	[DOMAIN_CATALOG] [nvarchar](128) NULL,
	[DOMAIN_SCHEMA] [nvarchar](128) NULL,
	[DOMAIN_NAME] [nvarchar](128) NOT NULL,
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[COLUMN_NAME] [nvarchar](128) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CHECK_CONSTRAINTS]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CHECK_CONSTRAINTS](
	[CONSTRAINT_CATALOG] [nvarchar](128) NULL,
	[CONSTRAINT_SCHEMA] [nvarchar](128) NULL,
	[CONSTRAINT_NAME] [nvarchar](128) NOT NULL,
	[CHECK_CLAUSE] [nvarchar](4000) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CaratulaVC]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CaratulaVC](
	[dblInterno] [decimal](18, 0) NOT NULL,
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dtmVC] [datetime] NOT NULL,
	[strSolicita] [varchar](50) NOT NULL,
	[strBodega] [char](5) NOT NULL,
	[dblNum] [varchar](25) NULL,
PRIMARY KEY CLUSTERED 
(
	[dblInterno] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 90) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CaratulaTerminoBodega]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CaratulaTerminoBodega](
	[dblNumero] [bigint] IDENTITY(1,1) NOT NULL,
	[strBodega] [varchar](50) NULL,
	[dtmFecha] [datetime] NULL,
	[strUsuario] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CaratulaSM]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CaratulaSM](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dblNum] [decimal](18, 0) NOT NULL,
	[dtmSolicitud] [datetime] NOT NULL,
	[strObservacion] [varchar](200) NULL,
	[strCargo] [char](10) NOT NULL,
	[strBodega] [char](5) NOT NULL,
	[strEstado] [decimal](18, 0) NOT NULL,
	[dblGuia] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CaratulaOC]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CaratulaOC](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dtmFecha] [datetime] NOT NULL,
	[strProveedor] [char](5) NOT NULL,
	[strCargo] [char](10) NULL,
	[strCentroC] [char](5) NOT NULL,
	[strEstado] [char](2) NOT NULL,
	[strBodega] [char](5) NULL,
	[strObservacion] [varchar](400) NULL,
	[dblUltima] [decimal](18, 0) NOT NULL,
	[strObra] [char](5) NOT NULL,
	[dblContador] [decimal](18, 0) NULL,
	[strMotivoAnul] [varchar](200) NULL,
	[dblSolicitud] [decimal](18, 0) NULL,
	[dblIva] [decimal](18, 8) NULL,
	[intFPago] [decimal](18, 0) NULL,
	[strTipoDoc] [char](1) NULL,
	[dblDocPago] [decimal](18, 0) NULL,
	[strBDestino] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CaratulaGuiaCargo]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CaratulaGuiaCargo](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dtmFecha] [datetime] NULL,
	[strCargo] [varchar](10) NULL,
	[strBodega] [char](5) NULL,
PRIMARY KEY CLUSTERED 
(
	[dblNumero] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 90) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CaratulaFacturaInterna]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CaratulaFacturaInterna](
	[dblNumero] [bigint] IDENTITY(1,1) NOT NULL,
	[dtmFecha] [datetime] NULL,
	[strProveedor] [varchar](50) NULL,
	[strCargo] [varchar](50) NULL,
	[dblEstado] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CaratulaDevolucionCargos]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CaratulaDevolucionCargos](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dblNum] [decimal](18, 0) NULL,
	[dtmFecha] [datetime] NULL,
	[strCargo] [varchar](50) NULL,
	[strBodega] [varchar](50) NULL,
	[intVigente] [decimal](18, 0) NULL,
PRIMARY KEY CLUSTERED 
(
	[dblNumero] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 90) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CaratulaCC]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[CaratulaCC](
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dblNum] [decimal](18, 0) NULL,
	[dtmFecha] [datetime] NOT NULL,
	[strCargo] [varchar](50) NOT NULL,
	[strBodega] [char](5) NOT NULL,
	[strNota] [varchar](50) NULL,
	[dblEstado] [decimal](18, 0) NULL,
	[dblFactor] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BodegaP]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[BodegaP](
	[strCodigo] [char](10) NULL,
	[strBodega] [char](5) NULL,
	[dblCantidad] [numeric](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Bodega]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Bodega](
	[strCodigo] [char](10) NULL,
	[strBodega] [char](5) NULL,
	[dblStock] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Autorizaciones]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[Autorizaciones](
	[strTipoDocto] [char](5) NOT NULL,
	[dblNumero] [decimal](18, 0) NOT NULL,
	[dtmFecha] [datetime] NOT NULL,
	[strAutoriza] [varchar](20) NOT NULL,
	[strAccion] [char](2) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ActividadBodega]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[ActividadBodega](
	[dblCorrelativo] [decimal](18, 0) NULL,
	[dtmFecha] [datetime] NULL,
	[strUsuario] [varchar](50) NULL,
	[strModulo] [varchar](50) NULL,
	[strRegistro] [varchar](4000) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleCajaChica]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 24/08/2007
VER.: 1.2
*/
CREATE     PROC [dbo].[sp_getTMPDetalleCajaChica]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@dblNumDoc NUMERIC = NULL
AS
DECLARE @strSQL VARCHAR(2000)
IF @dblModulo = 0 OR @dblModulo = 2
BEGIN
   	SET @strSQL = 'SELECT TMPDetalleCajaChica.strCodigo, MaterialCasa.strDescripcion, TMPDetalleCajaChica.dblTipoDoc, CASE TMPDetalleCajaChica.dblTipoDoc WHEN 0 THEN ''Factura'' WHEN 1 THEN ''Boleta'' WHEN 3 THEN ''B.Honorario'' WHEN 2 THEN ''Vale por'' END AS strTipoDoc, 
   	TMPDetalleCajaChica.dblNumDoc, TMPDetalleCajaChica.dblNumOC, CaratulaOC.dblUltima, TMPDetalleCajaChica.dblCantidad, TMPDetalleCajaChica.dblPrecio, TMPDetalleCajaChica.dblTotal, TMPDetalleCajaChica.dblRechazo, Estados.strDetalle AS strDescEstado
   	FROM TMPDetalleCajaChica INNER JOIN MaterialCasa ON (TMPDetalleCajaChica.strCodigo = MaterialCasa.strCodigo)
   	LEFT JOIN CaratulaOC ON (TMPDetalleCajaChica.dblNumOC = CaratulaOC.dblNumero)
   	LEFT JOIN General..Tablon AS Estados ON (TMPDetalleCajaChica.dblRechazo = Estados.strCodigo AND Estados.strTabla = ''rech'')
   	WHERE TMPDetalleCajaChica.strBodega = ''' + @strBodega + ''' AND TMPDetalleCajaChica.strUsuario = ''' + @strUsuario + ''''
   	IF @dblModulo = 0 
      	SET @strSQL = @strSQL + ' AND TMPDetalleCajaChica.dblModulo = 0' 
   	ELSE IF @dblModulo = 2
      	SET @strSQL = @strSQL + ' AND TMPDetalleCajaChica.dblModulo = 1'
END
ELSE IF @dblModulo = 1
	SET @strSQL = 'SELECT TOP 1 TMPDetalleCajaChica.dblNumOC, CaratulaOC.dblUltima 
	FROM TMPDetalleCajaChica INNER JOIN CaratulaOC ON (TMPDetalleCajaChica.dblNumOC = CaratulaOC.dblNumero)
	WHERE TMPDetalleCajaChica.strBodega = ''' + @strBodega + ''' AND TMPDetalleCajaChica.strUsuario = ''' + @strUsuario + ''' AND TMPDetalleCajaChica.dblNumDoc = ' + @dblNumDoc
EXEC(@strSQL)
GO
/****** Object:  StoredProcedure [dbo].[sp_getFacturaInterna]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 22/01/2008
VER: 1.1
*/
CREATE  PROC [dbo].[sp_getFacturaInterna]
@dblModulo NUMERIC,
@dblNumero NUMERIC = NULL,
@strCargo VARCHAR(50) = NULL,
@strEstado VARCHAR(10) = NULL
AS
DECLARE @strSQL VARCHAR(2000)
IF @dblModulo = 0
BEGIN
	SET @strSQL = 'SELECT CaratulaFacturaInterna.dblNumero, CONVERT(VARCHAR, CaratulaFacturaInterna.dtmFecha, 103) AS dtmFecha, CaratulaFacturaInterna.strCargo, Cargos.strDetalle AS strDescCargo, CaratulaFacturaInterna.dblEstado, Estados.strDetalle AS strDescEstado, SUM(DetalleFacturaInterna.dblCantidad *  DetalleFacturaInterna.dblPrecio) AS dblTotal
	FROM CaratulaFacturaInterna INNER JOIN General..Contrato AS Cargos ON (CaratulaFacturaInterna.strCargo = Cargos.strCodigo)
	INNER JOIN General..Tablon AS Estados ON (CaratulaFacturaInterna.dblEstado = Estados.strCodigo AND Estados.strTabla = ''estfi'')
	INNER JOIN DetalleFacturaInterna ON (CaratulaFacturaInterna.dblNumero = DetalleFacturaInterna.dblNumero)
	WHERE CaratulaFacturaInterna.strCargo = ''' + @strCargo + ''''
	IF @strEstado <> 'all' SET @strSQL = @strSQL + ' AND CaratulaFacturaInterna.dblEstado = ' + @strEstado
	SET @strSQL = @strSQL + ' GROUP BY CaratulaFacturaInterna.dblNumero, CaratulaFacturaInterna.dtmFecha, CaratulaFacturaInterna.strCargo, Cargos.strDetalle, CaratulaFacturaInterna.dblEstado, Estados.strDetalle ORDER BY CaratulaFacturaInterna.dblNumero'
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 1
BEGIN
	SET @strSQL = 'SELECT DISTINCT CaratulaFacturaInterna.dblNumero, CONVERT(VARCHAR, CaratulaFacturaInterna.dtmFecha, 103) AS dtmFecha, Cargos.strDetalle AS strCargo, CaratulaFacturaInterna.dblEstado, Estados.strDetalle AS strDescEstado,
	(SELECT TOP 1 strAutoriza FROM Autorizaciones WHERE Autorizaciones.strTipoDocto = ''FI'' AND Autorizaciones.dblNumero = CaratulaFacturaInterna.dblNumero ORDER BY dtmFecha DESC) AS strUsuario,
	(SELECT TOP 1 Usuarios.nombre FROM Autorizaciones INNER JOIN General..Usuarios AS Usuarios ON (Autorizaciones.strAutoriza = Usuarios.usuario) WHERE Autorizaciones.strTipoDocto = ''FI'' AND Autorizaciones.dblNumero = CaratulaFacturaInterna.dblNumero ORDER BY dtmFecha DESC) AS strNombUsuario
	FROM CaratulaFacturaInterna INNER JOIN General..Contrato AS Cargos ON (CaratulaFacturaInterna.strCargo = Cargos.strCodigo)
	INNER JOIN General..Tablon AS Estados ON (CaratulaFacturaInterna.dblEstado = Estados.strCodigo AND Estados.strTabla = ''estfi'')
	WHERE CaratulaFacturaInterna.dblNumero = ' + CONVERT(VARCHAR, @dblNumero)
	IF @strCargo <> '' SET @strSQL = @strSQL + ' AND CaratulaFacturaInterna.strCargo = ''' + @strCargo + ''''
	EXEC(@strSQL)
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getCargos]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 20-11-2006
MODIF: 0
*/
CREATE    PROCEDURE [dbo].[sp_getCargos]
@strModulo VARCHAR(5) = 'GNR',
@strCodigo VARCHAR(100) = NULL
AS
IF @strModulo='GNR'
   SELECT * FROM General..Contrato 
   WHERE strCodigo=@strCodigo
ELSE IF @strModulo='ALL'
   SELECT strCodigo, strDetalle, strDireccion FROM General..Contrato 
   ORDER BY strDetalle
GO
/****** Object:  StoredProcedure [dbo].[sp_getCajaChica]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 31/10/2007
VER.: 1.3
*/
CREATE   PROC [dbo].[sp_getCajaChica]
@dblModulo NUMERIC,
@dblNumero NUMERIC = NULL,
@strBodega VARCHAR(10) = NULL,
@strResponsable VARCHAR(10) = NULL,
@strEstado VARCHAR(10) = NULL,
@strMes VARCHAR(10) = NULL,
@dblAno NUMERIC(18) = NULL,
@dblPeriodo NUMERIC(18) = NULL
AS
DECLARE @strSQL VARCHAR(3000)
IF @dblModulo = 0
	SET @strSQL = 'SELECT CaratulaCC.dblNumero, CaratulaCC.dblNum, CONVERT(VARCHAR, CaratulaCC.dtmFecha, 103) AS dtmFch, 
	CaratulaCC.strCargo, Personal.strNombre, Personal.strRut, CaratulaCC.strBodega, Bodegas.strDetalle AS strDescBodega, 
	CaratulaCC.strNota, CaratulaCC.dblEstado, Estados.strDetalle AS strDescEstado, CaratulaCC.dblFactor 
	FROM CaratulaCC LEFT JOIN General..EncargadoFondoFijo AS Personal ON (CaratulaCC.strCargo = Personal.strUsuario)
	INNER JOIN General..Tablon AS Bodegas ON (CaratulaCC.strBodega = Bodegas.strCodigo AND Bodegas.strTabla=''bodeg'')
	INNER JOIN General..Tablon AS Estados ON (CaratulaCC.dblEstado = Estados.strCodigo AND Estados.strTabla=''estcc'')
	WHERE CaratulaCC.dblNumero = ' + CONVERT(VARCHAR, @dblNumero)
ELSE IF @dblModulo = 1
BEGIN
	DECLARE @strFchDsd VARCHAR(10), @strFchHst VARCHAR(10)

   	SET @strSQL = 'SELECT CaratulaCC.dblNumero, CaratulaCC.dblNum, CONVERT(VARCHAR, CaratulaCC.dtmFecha, 103) AS dtmFch, CaratulaCC.strCargo, Personal.strNombre, CaratulaCC.strBodega, Bodegas.strDetalle AS strDescBodega, CaratulaCC.strNota, 
	CaratulaCC.dblEstado, Estados.strDetalle AS strDescEstado, (SELECT SUM(CASE DCaja.dblTipoDoc WHEN 0 THEN CONVERT(NUMERIC(18, 2), (DCaja.dblCantidad * DCaja.dblValor) * CCaja.dblFactor) ELSE CONVERT(NUMERIC(18, 2), (DCaja.dblCantidad * DCaja.dblValor)) END)
	FROM CaratulaCC AS CCaja INNER JOIN DetalleCajaC AS DCaja ON (CCaja.dblNumero = DCaja.dblNumero) WHERE CCaja.strCargo = CaratulaCC.strCargo AND CCaja.dblNumero = CaratulaCC.dblNumero GROUP BY CCaja.dblNumero) AS dblTotal
   	FROM CaratulaCC LEFT JOIN General..EncargadoFondoFijo AS Personal ON (CaratulaCC.strCargo = Personal.strUsuario)
   	INNER JOIN General..Tablon AS Bodegas ON (CaratulaCC.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = ''bodeg'')
   	INNER JOIN General..Tablon AS Estados ON (CaratulaCC.dblEstado = Estados.strCodigo AND Estados.strTabla = ''estcc'')
   	WHERE strCargo = ''' + @strResponsable + ''''
   	IF @strEstado <> 'all' SET @strSQL = @strSQL + ' AND dblEstado = ' + @strEstado
   	
   	IF @dblPeriodo > 0
   	BEGIN
      	IF @strMes = '02' AND (CONVERT(INT, @dblAno) % 4) = 0
         		SET @strFchHst = @strMes + '/' + '29/' + CONVERT(VARCHAR, @dblAno)
      	ELSE IF @strMes = '02' AND (CONVERT(INT, @dblAno) % 4) <> 0
         		SET @strFchHst = @strMes + '/' + '28/' + CONVERT(VARCHAR, @dblAno)
      	ELSE IF @strMes = '01' OR @strMes = '03' OR @strMes = '05' OR @strMes = '07' OR @strMes = '08' OR @strMes = '10' OR @strMes = '12'
         		SET @strFchHst = @strMes + '/' + '31/' + CONVERT(VARCHAR, @dblAno)
      	ELSE IF @strMes = '04' or @strMes = '06' or @strMes = '09' or @strMes = '11'
         		SET @strFchHst = @strMes + '/' + '30/' + CONVERT(VARCHAR, @dblAno)
      
      	SET @strMes = CONVERT(NUMERIC, @strMes) - @dblPeriodo
      	IF @strMes < 1
      	BEGIN
         		SET @strMes = 12 + CONVERT(NUMERIC, @strMes)
         		SET @dblAno = @dblAno - 1
      	END
		
      	IF CONVERT(NUMERIC, @strMes) < 10 SET @strMes = '0' + @strMes
      	SET @strFchDsd = @strMes + '/' + '01/' + CONVERT(VARCHAR, @dblAno)
      	SET @strSQL = @strSQL + ' AND CONVERT(DATETIME, dtmFecha, 101) BETWEEN CONVERT(DATETIME, ''' + @strFchDsd + ''', 101) AND CONVERT(DATETIME, ''' +  @strFchHst + ''', 101)'
   	END
   	ELSE
   	BEGIN
      	IF @strMes <> 'all' SET @strSQL = @strSQL + ' AND MONTH(dtmFecha) = ' + @strMes
      	SET @strSQL = @strSQL + ' AND YEAR(dtmFecha) = ' + CONVERT(VARCHAR, @dblAno) 
   	END
END
ELSE IF @dblModulo = 2
BEGIN
   	SET @strSQL = 'SELECT CaratulaCC.dblNumero, CaratulaCC.dblNum, CONVERT(VARCHAR, CaratulaCC.dtmFecha, 103) AS dtmFch, CaratulaCC.strCargo, Personal.strNombre, CaratulaCC.strNota, CaratulaCC.dblEstado, Estados.strDetalle AS strDescEstado,
   	(SELECT dblFactor FROM Impuesto WHERE id=1) AS dblFactor
   	FROM CaratulaCC LEFT JOIN EncargadoCajaChica ON (CaratulaCC.strCargo = EncargadoCajaChica.strRut)
   	LEFT JOIN General..PersonalObras AS Personal ON (EncargadoCajaChica.strRut = Personal.strRut)
   	INNER JOIN General..Tablon AS Bodegas ON (CaratulaCC.strBodega = Bodegas.strCodigo AND Bodegas.strTabla=''bodeg'')
   	INNER JOIN General..Tablon AS Estados ON (CaratulaCC.dblEstado = Estados.strCodigo AND Estados.strTabla=''estcc'')
   	WHERE CaratulaCC.strBodega = ''' + @strBodega + '''' 
   	IF @strResponsable<> 'all' SET @strSQL = @strSQL + ' AND CaratulaCC.strCargo = ''' + @strResponsable + ''''
   	SET @strSQL = @strSQL + ' ORDER BY CaratulaCC.dblNum'
END
ELSE IF @dblModulo = 3
BEGIN
   	SET @strSQL = 'SELECT CaratulaCC.dblNumero, CaratulaCC.dblNum, CONVERT(VARCHAR, CaratulaCC.dtmFecha, 103) AS dtmFch, CaratulaCC.strCargo, Personal.strNombre, CaratulaCC.strNota, CaratulaCC.dblEstado, Estados.strDetalle AS strDescEstado,
   	(SELECT dblFactor FROM Impuesto WHERE id=1) AS dblFactor 	FROM CaratulaCC LEFT JOIN EncargadoCajaChica ON (CaratulaCC.strCargo = EncargadoCajaChica.strRut) LEFT JOIN General..PersonalObras AS Personal ON (EncargadoCajaChica.strRut = Personal.strRut)
   	INNER JOIN General..Tablon AS Bodegas ON (CaratulaCC.strBodega = Bodegas.strCodigo AND Bodegas.strTabla=''bodeg'') INNER JOIN General..Tablon AS Estados ON (CaratulaCC.dblEstado = Estados.strCodigo AND Estados.strTabla=''estcc'')
   	WHERE CaratulaCC.strBodega = ''' + @strBodega + ''' AND NOT CaratulaCC.dblEstado IN (4, 5) ORDER BY CaratulaCC.dblNum'
END
ELSE IF @dblModulo = 4
	SET @strSQL = 'SELECT CaratulaCC.dblNumero, CaratulaCC.dblNum, CONVERT(VARCHAR, CaratulaCC.dtmFecha, 103) AS dtmFch, 
   	CaratulaCC.strCargo, Personal.strNombre, Personal.strRut, CaratulaCC.strBodega, Bodegas.strDetalle AS strDescBodega, 
   	CaratulaCC.strNota, CaratulaCC.dblEstado, CaratulaCC.dblEstado, Estados.strDetalle AS strDescEstado, CaratulaCC.dblFactor 
   	FROM CaratulaCC LEFT JOIN General..EncargadoFondoFijo AS Personal ON (CaratulaCC.strCargo = Personal.strUsuario)
   	INNER JOIN General..Tablon AS Bodegas ON (CaratulaCC.strBodega = Bodegas.strCodigo AND Bodegas.strTabla=''bodeg'')
   	INNER JOIN General..Tablon AS Estados ON (CaratulaCC.dblEstado = Estados.strCodigo AND Estados.strTabla=''estcc'')
   	WHERE CaratulaCC.strBodega = ''' + @strBodega + ''' AND CaratulaCC.dblNumero = ' + CONVERT(VARCHAR, @dblNumero)
EXEC(@strSQL)
GO
/****** Object:  StoredProcedure [dbo].[sp_getBuscaDocumento]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 31/03/2008
VER.: 1.21
OBS.
0 - SM
1 - OC
2 - ING
3 - DESP
4 - DEV
5 - VC
6 - FACT/BOL
7 - CC
8 - GUIA DE CARGOS
9 - GUIA DE DEVOLUCION DE CARGOS
10 - TERMINO DE BODEGA
11 - FACTURA INTERNA
*/
CREATE   PROC [dbo].[sp_getBuscaDocumento]
@strBodega VARCHAR(50),
@dblTipoDoc NUMERIC,
@strMes VARCHAR(2) = NULL, 
@strAno VARCHAR(4) = NULL,
@strMaterial VARCHAR(50) = NULL,
@strProveedor VARCHAR(50) = NULL,
@strObservacion VARCHAR(100) = NULL,
@dblNumero NUMERIC = NULL,
@dblTBusqueda NUMERIC = NULL
AS
SET ANSI_NULLS ON 
SET ANSI_WARNINGS ON

DECLARE @strSQL VARCHAR(5000)
IF @dblTipoDoc=0
BEGIN
   SET @strSQL = 'SELECT DISTINCT CaratulaSM.dblNumero, CaratulaSM.dblNum, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) as dtmFch, 
   CaratulaSM.strCargo, Cargos.strDetalle AS strDescCargo, CaratulaSM.strBodega, CaratulaSM.strObservacion, CaratulaSM.strEstado, Estados.strDetalle AS strDescEstado
   FROM CaratulaSM INNER JOIN DetalleSM ON (CaratulaSM.dblNumero = DetalleSM.dblNumero)
   LEFT JOIN DetalleOrdenC ON (CaratulaSM.dblNumero = DetalleOrdenC.dblNumSol)
   INNER JOIN General..Contrato AS Cargos ON (CaratulaSM.strCargo = Cargos.strCodigo)
   INNER JOIN General..Tablon AS Estados ON (CaratulaSM.strEstado = Estados.strCodigo AND Estados.strTabla = ''estoc'')
   WHERE CaratulaSM.strBodega IN ('''+@strBodega+''', ''1200A'')'
   IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(CaratulaSM.dtmSolicitud) = ' + @strMes 
   IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(CaratulaSM.dtmSolicitud) = ' + @strAno
   IF NOT @strProveedor IS NULL  SET @strSQL = @strSQL + ' AND CaratulaSM.strCargo = '''+@strProveedor+''''
   IF NOT @strMaterial IS NULL SET @strSQL = @strSQL + ' AND DetalleSM.strCodigo='''+@strMaterial+''''
   IF NOT @strObservacion IS NULL 
   BEGIN
      IF @dblTBusqueda = 0
         SET @strSQL = @strSQL + ' AND DetalleOrdenC.dblNumero = ' + @strObservacion
      ELSE
         SET @strSQL = @strSQL + ' AND CaratulaSM.strObservacion LIKE ''%' + @strObservacion + '%'''
   END
   SET @strSQL = @strSQL + ' ORDER BY CaratulaSM.dblNum'
END
ELSE IF @dblTipoDoc=1
BEGIN
	SET @strSQL = 'SELECT DISTINCT CaratulaOC.dblNumero, CaratulaOC.dblUltima AS dblNum, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch, CaratulaOC.strProveedor, Proveedor.strNombre, 
	CaratulaOC.strCargo, Cargos.strDetalle AS strDescCargo, CaratulaOC.strEstado, Estados.strDetalle AS strDescEstado, CaratulaOC.strObservacion, CaratulaOC.intFPago, FPagos.strDetalle AS strDescFPago,
	CaratulaOC.strTipoDoc, CASE CaratulaOC.dblDocPago WHEN 2 THEN ''Boleta'' ELSE ''Factura'' END AS strDocPago, Facturas.dblNumDoc, Facturas.dblMonto, Facturas.strArchivo, 
	(SELECT SUM(dblValor * dblCantidad) FROM DetalleOrdenC WHERE dblNumero=CaratulaOC.dblNumero) AS dblNeto,
	(SELECT MAX(Comprobantes.cpbNum) FROM Comprobantes INNER JOIN Facturas ON (Comprobantes.NumFactura = Facturas.dblNumDoc AND Facturas.dblTipoDoc = 0)
	INNER JOIN Proveedor ON (Proveedor.strCI = Comprobantes.CodAux) wHERE Comprobantes.Tipo = ''EGRESO'' AND Facturas.dblNumOC = CaratulaOC.dblNumero AND 
	Proveedor.strCodigo = CaratulaOC.strProveedor GROUP BY Facturas.dblNumOC) AS dblCEgreso
	FROM CaratulaOC INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero)
	INNER JOIN Proveedor ON (CaratulaOC.strProveedor = Proveedor.strCodigo)
	INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo = Cargos.strCodigo)
	INNER JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado = Estados.strCodigo AND Estados.strTabla = ''estoc'')
	LEFT JOIN General..Tablon AS FPagos ON (CaratulaOC.intFPago = FPagos.strCodigo AND FPagos.strTabla = ''tipop'')
	LEFT JOIN Facturas ON (CaratulaOC.dblNumero = Facturas.dblNumOC)
	WHERE CaratulaOC.strBodega IN ('''+@strBodega+''', ''1200A'')'
	IF @dblTBusqueda = 1
		SET @strSQL = @strSQL + ' AND (CaratulaOC.dblNumero NOT IN (SELECT DISTINCT DetalleSM.dblOC FROM CaratulaSM INNER JOIN DetalleSM ON (CaratulaSM.dblNumero = DetalleSM.dblNumero) WHERE NOT DetalleSM.dblOC IS NULL)
		AND CaratulaOC.dblNumero NOT IN (SELECT DISTINCT S.dblNumOC FROM Operaciones..Solicitudes AS S INNER JOIN General..Contrato AS C ON (S.strCargo = C.strCodigo) WHERE NOT S.dblNumOC IS NULL)
		AND DetalleOrdenC.dblNumSol IS NULL AND CaratulaOC.strTipoDoc <> ''I'')'
	IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(CaratulaOC.dtmFecha) = ' + @strMes 

	IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(CaratulaOC.dtmFecha) = ' + @strAno
	IF NOT @strProveedor IS NULL  SET @strSQL = @strSQL + ' AND CaratulaOC.strProveedor = '''+@strProveedor+''''
	IF NOT @strMaterial IS NULL SET @strSQL = @strSQL + ' AND DetalleOrdenC.strCodigo='''+@strMaterial+''''
	IF NOT @strObservacion IS NULL SET @strSQL = @strSQL + ' AND CaratulaOC.strObservacion LIKE ''%'+@strObservacion+'%'''
	SET @strSQL = @strSQL + ' ORDER BY CaratulaOC.dblUltima'
END
ELSE IF @dblTipoDoc=2
BEGIN
   SET @strSQL = 'SELECT DISTINCT Ingreso.dblNumero, Ingreso.dblNum, CONVERT(VARCHAR, Ingreso.dtmFecha, 103) AS dtmFch, Ingreso.strReferencia, Ingreso.dblOrdenC, 
   Ingreso.strBodega, Bodegas.strDetalle AS strDescBodega, CASE Ingreso.intTipoDoc WHEN 1 THEN ''Factura'' ELSE ''Gu&iacute;a de Despacho'' END AS strTDoc, 
   Ingreso.dblEstado AS strEstado, CASE Ingreso.dblEstado WHEN 0 THEN ''Vigente'' ELSE ''Nula'' END AS strDescEstado,  CaratulaOC.dblUltima 
   FROM Ingreso INNER JOIN DetalleIngreso ON (Ingreso.dblNumero = DetalleIngreso.dblNumero)
   LEFT JOIN CaratulaOC ON (Ingreso.dblOrdenC=CaratulaOC.dblNumero)
   LEFT JOIN General..Tablon AS Bodegas ON (Ingreso.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = ''bodeg'')
   WHERE Ingreso.strBodega IN ('''+@strBodega+''', ''1200A'')'
   IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(Ingreso.dtmFecha) = ' + @strMes 
   IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(Ingreso.dtmFecha) = ' + @strAno
   IF NOT @strProveedor IS NULL SET @strSQL = @strSQL + ' AND CaratulaOC.strProveedor = '''+@strProveedor+''''
   IF NOT @strMaterial IS NULL SET @strSQL = @strSQL + ' AND DetalleIngreso.strCodigo='''+@strMaterial+''''
   IF NOT @strObservacion IS NULL 
   BEGIN
      IF @dblTBusqueda = 0
         SET @strSQL = @strSQL + ' AND CaratulaOC.dblUltima = ' + @strObservacion + ' AND CaratulaOC.strBDestino = ''' + @strBodega + ''''
      ELSE
         SET @strSQL = @strSQL + ' AND Ingreso.strReferencia like ''%'+@strObservacion+'%'''
   END
   SET @strSQL = @strSQL + ' ORDER BY Ingreso.dblNum'
END
ELSE IF @dblTipoDoc=3
BEGIN
   SET @strSQL = 'SELECT DISTINCT Despacho.dblNumero, Despacho.dblNumero AS dblNum, CONVERT(VARCHAR, Despacho.dtmDespacho, 103) AS dtmFch, 
   Despacho.strMovil, Personal.strNombre, Despacho.strBodega, Bodegas.strDetalle AS strDescBodega
   FROM Despacho INNER JOIN DetalleDespacho ON (Despacho.dblNumero = DetalleDespacho.dblNumero)
   LEFT JOIN General..Movil AS Moviles ON (Despacho.strMovil = Moviles.strMovil AND Moviles.strBodega IN ('''+@strBodega+''', ''1200A''))
   LEFT JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut AND Personal.strBodega IN ('''+@strBodega+''', ''1200A''))
   INNER JOIN General..Tablon AS Bodegas ON (Despacho.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = ''bodeg'')
   WHERE Despacho.strBodega = '''+@strBodega+''' AND Despacho.intVigente = 1'
   IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(Despacho.dtmDespacho) = ' + @strMes 
   IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(Despacho.dtmDespacho) = ' + @strAno
   IF NOT @strProveedor IS NULL  SET @strSQL = @strSQL + ' AND Despacho.strMovil = '''+@strProveedor+''''
   IF NOT @strMaterial IS NULL SET @strSQL = @strSQL + ' AND DetalleDespacho.strCodigo='''+@strMaterial+''''
   SET @strSQL = @strSQL + ' ORDER BY Despacho.dblNumero'
END
ELSE IF @dblTipoDoc=4
BEGIN
   SET @strSQL = 'SELECT DISTINCT Devolucion.dblNumero, Devolucion.dblNum, CONVERT(VARCHAR, Devolucion.dtmFecha, 103) AS dtmFch, Devolucion.strMovil, 
   Personal.strNombre, Devolucion.strBodega, Bodegas.strDetalle AS strDescBodega
   FROM Devolucion INNER JOIN DetalleDevolucion ON (Devolucion.dblNumero = DetalleDevolucion.dblNumero)
   LEFT JOIN General..Movil AS Moviles ON (Devolucion.strMovil = Moviles.strMovil AND Moviles.strBodega IN ('''+@strBodega+''', ''1200A''))
   LEFT JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut AND Personal.strBodega IN ('''+@strBodega+''', ''1200A''))
   INNER JOIN General..Tablon AS Bodegas ON (Devolucion.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = ''bodeg'')
   WHERE Devolucion.strBodega = ''' + @strBodega + ''''
   IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(Devolucion.dtmFecha) = ' + @strMes 
   IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(Devolucion.dtmFecha) = ' + @strAno 
   IF NOT @strProveedor IS NULL  SET @strSQL = @strSQL + ' AND Devolucion.strMovil = '''+@strProveedor+''''
   IF NOT @strMaterial IS NULL SET @strSQL = @strSQL + ' AND DetalleDevolucion.strCodigo='''+@strMaterial+''''
   SET @strSQL = @strSQL + ' ORDER BY Devolucion.dblNum'
END
ELSE IF @dblTipoDoc=5
BEGIN
   SET @strSQL = 'SELECT DISTINCT CaratulaVC.dblInterno AS dblNumero, CaratulaVC.dblNumero AS dblNum, CONVERT(VARCHAR, CaratulaVC.dtmVC, 103) AS dtmFch, 
   Obras.strDetalle AS strDescObra, CaratulaVC.strSolicita, Personal.strNombre, CaratulaVC.strBodega 
   FROM CaratulaVC INNER JOIN DetalleVC ON (CaratulaVC.dblInterno = DetalleVC.dblInterno)
   INNER JOIN General..Tablon AS Obras ON (CaratulaVC.strBodega = Obras.strCodigo AND Obras.strTabla=''bodeg'')
   INNER JOIN General..PersonalObras AS Personal ON (CaratulaVC.strSolicita = Personal.strRut AND Personal.strBodega = ''' + @strBodega + ''')
   WHERE CaratulaVC.strBodega IN ('''+@strBodega+''', ''1200A'')'
   IF NOT @dblNumero IS NULL SET @strSQL = @strSQL + ' AND CaratulaVC.dblNumero = ' + CONVERT(VARCHAR, @dblNumero)
   IF NOT @strObservacion IS NULL SET @strSQL = @strSQL + ' AND CaratulaVC.dblNum = ' + CONVERT(VARCHAR, @strObservacion)
   IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(CaratulaVC.dtmVC) = ' + @strMes 
   IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(CaratulaVC.dtmVC)= ' + @strAno 
   IF NOT @strProveedor IS NULL  SET @strSQL = @strSQL + ' AND CaratulaVC.strSolicita = '''+@strProveedor+''''
   IF NOT @strMaterial IS NULL SET @strSQL = @strSQL + ' AND DetalleVC.strCodigo='''+@strMaterial+''''
   SET @strSQL = @strSQL + ' ORDER BY CaratulaVC.dblNumero'
END
ELSE IF 	@dblTipoDoc = 6
BEGIN
   	SET @strSQL = 'SELECT DISTINCT Facturas.dblNumDoc AS dblNum, Facturas.dblNumDoc AS dblNumero, CONVERT(VARCHAR, Facturas.dtmFecha, 103) AS dtmFch, 
   	CASE Facturas.dblTipoDoc WHEN 0 THEN ''Factura'' WHEN 1 THEN ''Boleta'' END AS strTipoDoc, Facturas.dblNumDoc, Facturas.dblMonto, 
   	Facturas.strProveedor, Proveedor.strNombre, CASE WHEN Comprobantes.CpbNum IS NULL THEN 5 ELSE 0 END AS strEstado, Facturas.strArchivo, 
   	CASE WHEN Comprobantes.CpbNum IS NULL THEN ''Sin datos en Softland'' ELSE ''Con datos en Softland'' END AS strDescEstado, CaratulaOC.dblUltima
   	FROM Facturas INNER JOIN Proveedor ON (Facturas.strProveedor = Proveedor.strCodigo)
   	LEFT JOIN Comprobantes ON (Facturas.dblNumDoc=Comprobantes.NumFactura AND Comprobantes.CodAux = Proveedor.strCI)
   	LEFT JOIN CaratulaOC ON (Facturas.dblNumOC=CaratulaOC.dblNumero)
   	LEFT JOIN Ingreso ON (Ingreso.dblOrdenC=CaratulaOC.dblNumero)
   	WHERE Facturas.dblTipoDoc IN (0, 1)'
	IF @strBodega <> 'all' SET @strSQL = @strSQL + ' AND CaratulaOC.strCargo = ''' + @strBodega + ''''
   	IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(Facturas.dtmFecha) = ' + @strMes 
   	IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(Facturas.dtmFecha) = ' + @strAno 
   	IF NOT @strProveedor IS NULL SET @strSQL = @strSQL + ' AND Facturas.strProveedor = '''+ @strProveedor + ''''
   	IF NOT @strObservacion IS NULL 
   	BEGIN
      	IF @dblTBusqueda = 0 
         	SET @strSQL = @strSQL + ' AND Facturas.dblNumOC in (Select dblNumero From CaratulaOC where dblUltima=' + @strObservacion + ' and strCargo=''' + @strBodega + ''')'
      	ELSE
         	SET @strSQL = @strSQL + ' AND Ingreso.dblNumero in (Select dblNumero From Ingreso Where dblNum=' + @strObservacion + ')' 
   	END
   	IF NOT @dblNumero IS NULL SET @strSQL = @strSQL + ' AND Facturas.dblNumDoc= ' + CONVERT(VARCHAR, @dblNumero)
   	SET @strSQL = @strSQL + ' ORDER BY Facturas.dblNumDoc'
END
ELSE IF 	@dblTipoDoc = 7
BEGIN
	SET @strSQL = 'SELECT CaratulaCC.dblNumero, CaratulaCC.dblNum, CONVERT(VARCHAR, CaratulaCC.dtmFecha, 103) AS dtmFch, CaratulaCC.strCargo, Personal.strNombre, CaratulaCC.strNota, SUM(DetalleCajaC.dblValor * DetalleCajaC.dblCantidad) AS dblNeto, CaratulaCC.dblEstado AS strEstado  
	FROM CaratulaCC INNER JOIN DetalleCajaC ON (CaratulaCC.dblNumero = DetalleCajaC.dblNumero)
	INNER JOIN General..EncargadoFondoFijo AS Personal ON (CaratulaCC.strCargo = Personal.strUsuario)
	WHERE CaratulaCC.strBodega IN ('''+@strBodega+''', ''1200A'')'
	IF NOT @dblNumero IS NULL SET @strSQL = @strSQL + ' AND CaratulaCC.dblNum = ' + CONVERT(VARCHAR, @dblNumero)
	IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(CaratulaCC.dtmFecha) = ' + @strMes 
   	IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(CaratulaCC.dtmFecha) = ' + @strAno 
	SET @strSQL = @strSQL + ' GROUP BY CaratulaCC.dblNumero, CaratulaCC.dblNum, CaratulaCC.dtmFecha, CaratulaCC.strCargo, Personal.strNombre, CaratulaCC.strNota, CaratulaCC.dblEstado 
	ORDER BY CaratulaCC.dblNum'
END
ELSE IF 	@dblTipoDoc = 8
BEGIN
	SET @strSQL = 'SELECT DISTINCT CaratulaGuiaCargo.dblNumero, CaratulaGuiaCargo.dblNumero as dblNum, CONVERT(VARCHAR, CaratulaGuiaCargo.dtmFecha, 103) AS dtmFch, 
	DetalleGuiaCargos.strCargo, Cargos.strNombre, CaratulaGuiaCargo.strBodega, Bodegas.strDetalle AS strDescBodega 
	FROM CaratulaGuiaCargo INNER JOIN DetalleGuiaCargos ON (CaratulaGuiaCargo.dblNumero = DetalleGuiaCargos.dblNumero)
	LEFT JOIN General..PersonalObras AS Cargos ON (DetalleGuiaCargos.strCargo = Cargos.strRut AND Cargos.dblVigente = 1)
	LEFT JOIN General..Tablon AS Bodegas ON (CaratulaGuiaCargo.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = ''bodeg'')
	WHERE CaratulaGuiaCargo.strBodega IN ('''+@strBodega+''', ''1200A'')'
	IF NOT @dblNumero IS NULL SET @strSQL = @strSQL + ' AND CaratulaGuiaCargo.dblNumero =  ' + CONVERT(VARCHAR, @dblNumero)
	IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(CaratulaGuiaCargo.dtmFecha) = ' + @strMes 
   	IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(CaratulaGuiaCargo.dtmFecha) = ' + @strAno 
	SET @strSQL = @strSQL + ' ORDER BY CaratulaGuiaCargo.dblNumero'
END
ELSE IF 	@dblTipoDoc = 9
BEGIN
	SET @strSQL = 'SELECT CaratulaDevolucionCargos.dblNumero, CaratulaDevolucionCargos.dblNum, CONVERT(VARCHAR, CaratulaDevolucionCargos.dtmFecha, 103) AS dtmFecha, 
	CaratulaDevolucionCargos.strCargo, 	Personal.strNombre, Bodegas.strDetalle AS strDescBodega, Usuarios.nombre AS strNombUsuario
	FROM CaratulaDevolucionCargos INNER JOIN General..PersonalObras AS Personal ON (CaratulaDevolucionCargos.strCargo = Personal.strRut)
	INNER JOIN General..Tablon AS Bodegas ON (Personal.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = ''bodeg'')
	INNER JOIN CorrelativoDoc ON (CaratulaDevolucionCargos.dblNumero = CorrelativoDoc.dblNumero AND CorrelativoDoc.strTipoDoc = ''DC'')
	INNER JOIN General..Usuarios AS Usuarios ON (CorrelativoDoc.strUsuario = Usuarios.usuario)
	WHERE CaratulaDevolucionCargos.strBodega IN ('''+@strBodega+''', ''1200A'')'
	IF NOT @dblNumero IS NULL SET @strSQL = @strSQL + ' AND CaratulaDevolucionCargos.dblNum =  ' + CONVERT(VARCHAR, @dblNumero)
	IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(CaratulaDevolucionCargos.dtmFecha) = ' + @strMes 
   	IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(CaratulaDevolucionCargos.dtmFecha) = ' + @strAno 
	SET @strSQL = @strSQL + ' ORDER BY CaratulaDevolucionCargos.dblNumero'
END
ELSE IF @dblTipoDoc = 10
BEGIN
	SET @strSQL = 'SELECT CaratulaTerminoBodega.dblNumero, CaratulaTerminoBodega.dblNumero AS dblNum, CONVERT(VARCHAR, CaratulaTerminoBodega.dtmFecha, 103) AS dtmFch, CaratulaTerminoBodega.strUsuario, Usuarios.nombre AS strNombre
	FROM CaratulaTerminoBodega INNER JOIN General..Usuarios AS Usuarios ON (CaratulaTerminoBodega.strUsuario = Usuarios.usuario)
	WHERE CaratulaTerminoBodega.strBodega IN (''' + @strBodega + ''', ''1200A'')'
	IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(CaratulaTerminoBodega.dtmFecha) = ' + @strMes
	IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(CaratulaTerminoBodega.dtmFecha) = ' + @strAno
	SET @strSQL = @strSQL + ' ORDER BY CaratulaTerminoBodega.dblNumero'
END
ELSE IF @dblTipoDoc = 11
BEGIN
	SET @strSQL = 'SELECT CaratulaFacturaInterna.dblNumero, CaratulaFacturaInterna.dblNumero AS dblNum, CONVERT(VARCHAR, CaratulaFacturaInterna.dtmFecha, 103) AS dtmFecha, Cargos.strDetalle, SUM(DetalleFacturaInterna.dblCantidad * DetalleFacturaInterna.dblPrecio) AS dblTotal
	FROM CaratulaFacturaInterna INNER JOIN DetalleFacturaInterna ON (CaratulaFacturaInterna.dblNumero = DetalleFacturaInterna.dblNumero)
	INNER JOIN General..Contrato AS Cargos ON (CaratulaFacturaInterna.strCargo = Cargos.strCodigo)
	WHERE CaratulaFacturaInterna.strCargo = ''' + @strBodega + ''''
	IF NOT @strMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(CaratulaFacturaInterna.dtmFecha) = ' + @strMes
	IF NOT @strAno IS NULL SET @strSQL = @strSQL + ' AND YEAR(CaratulaFacturaInterna.dtmFecha) = ' + @strAno
	SET @strSQL = @strSQL + ' GROUP BY CaratulaFacturaInterna.dblNumero, CaratulaFacturaInterna.dtmFecha, Cargos.strDetalle
	ORDER BY CaratulaFacturaInterna.dblNumero'
END
EXEC(@strSQL)
GO
/****** Object:  StoredProcedure [dbo].[sp_getControlOC]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE    PROC [dbo].[sp_getControlOC]
@strCargo VARCHAR(10),
@strProveedor VARCHAR(50)
AS
DECLARE @strSQL VARCHAR(2000)

CREATE TABLE #PASO_COC (dblEstado NUMERIC, dblNumero NUMERIC, dtmFecha DATETIME, strProveedor VARCHAR(50), strFactura VARCHAR(50) NULL, dblCompra NUMERIC,  dblIngreso NUMERIC, dblInterno NUMERIC)

SET @strSQL = 'INSERT #PASO_COC 
SELECT C.strEstado, C.dblUltima, C.dtmFecha, P.strNombre, CASE WHEN C.dtmFecha < ''01/01/2007'' AND F.dblNumDoc IS NULL  THEN ''no existe info'' ELSE CONVERT(VARCHAR, F.dblNumDoc) END,
ISNULL(SUM(DO.dblCantidad * DO.dblValor), 0), 0, C.dblNumero
FROM CaratulaOC AS C LEFT JOIN DetalleOrdenC AS DO ON (C.dblNumero=DO.dblNumero)
LEFT JOIN Proveedor AS P ON (C.strProveedor=P.strCodigo)
LEFT JOIN Facturas AS F ON (C.dblNumero=F.dblNumOC)
WHERE  strEstado IN (10, 11, 12) AND strcargo = ''' + @strCargo + ''''
IF @strProveedor <> 'all' SET @strSQL = @strSQL + ' AND P.strCodigo = ''' + @strProveedor + ''''
SET @strSQL = @strSQL + ' GROUP BY C.strEstado, C.dblUltima, C.dtmFecha, P.strNombre, F.dblNumDoc, C.dblNumero'
EXEC(@strSQL)

SET @strSQL = 'INSERT #PASO_COC 
SELECT C.strEstado, C.dblUltima, C.dtmFecha, P.strNombre, CASE WHEN C.dtmFecha < ''01/01/2007'' AND F.dblNumDoc IS NULL THEN ''no existe info'' ELSE CONVERT(VARCHAR, F.dblNumDoc) END,
0,  ISNULL(SUM(DI.dblCantidad * DI.dblValor), 0), C.dblNumero
FROM CaratulaOC AS C 
LEFT JOIN Proveedor AS P ON (C.strProveedor=P.strCodigo)
LEFT JOIN Facturas AS F ON (C.dblNumero=F.dblNumOC)
LEFT JOIN DetalleIngreso AS DI ON (C.dblNumero=DI.dblNumOC)
WHERE  strEstado IN (10, 11, 12) AND strcargo = ''' + @strCargo + ''''
IF @strProveedor <> 'all' SET @strSQL = @strSQL + ' AND P.strCodigo = ''' + @strProveedor + ''''
SET @strSQL = @strSQL + ' GROUP BY C.strEstado, C.dblUltima, C.dtmFecha, P.strNombre, F.dblNumDoc, C.dblNumero'
EXEC(@strSQL)

SELECT dblEstado, dblNumero, CONVERT(VARCHAR, dtmFecha, 103) AS dtmFch, strProveedor, CASE WHEN strFactura IS NULL THEN 'no existe info' ELSE strFactura END AS strFactura, SUM(dblCompra) AS dblCompra,  SUM(dblIngreso) AS dblIngreso, dblInterno
FROM #PASO_COC GROUP BY dblEstado, dblNumero, dtmFecha, strProveedor, strFactura, dblInterno 

DROP TABLE #PASO_COC
GO
/****** Object:  StoredProcedure [dbo].[sp_getFechaInicial]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_getFechaInicial]
@strFchFin VARCHAR(10), 
@dblPeriodo NUMERIC = 0
AS
DECLARE @strMes NUMERIC, @dblAno NUMERIC
SET @strMes=SUBSTRING(@strFchFin, 4, 2)
SET @dblAno=CONVERT(NUMERIC, SUBSTRING(@strFchFin, 7, 4))

SET @strMes=CONVERT(NUMERIC, @strMes)-@dblPeriodo
IF CONVERT(NUMERIC, @strMes)<1
BEGIN
   SET @strMes='12'
   set @dblAno=@dblAno-1
END
print @strMes
IF CONVERT(NUMERIC, @strMes)<10 SET @strMes='0'+CONVERT(VARCHAR, @strMes)
print @strMes
--print @strMes+'/'+CONVERT(VARCHAR, @dblAno)
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleOrdenCompra]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 29/01/2008
VER: 1.2
*/
CREATE   PROC [dbo].[sp_getTMPDetalleOrdenCompra]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50) = NULL
AS
DECLARE @strSQL VARCHAR(2000)
IF @dblModulo = 0 OR @dblModulo = 1 OR @dblModulo = 2 OR @dblModulo = 4
BEGIN
	SET @strSQL = 'SELECT TMPDetalleOrdenCompra.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, CONVERT(VARCHAR, TMPDetalleOrdenCompra.dtmFInicio, 103) AS dtmFchIni, 
	CONVERT(VARCHAR, TMPDetalleOrdenCompra.dtmFTermino, 103) AS dtmFchTer, TMPDetalleOrdenCompra.dblSolicitud, TMPDetalleOrdenCompra.dblCSolicitud, 
	TMPDetalleOrdenCompra.dblCAutorizada, TMPDetalleOrdenCompra.dblValor
	FROM TMPDetalleOrdenCompra INNER JOIN MaterialCasa ON (TMPDetalleOrdenCompra.strCodigo = MaterialCasa.strCodigo) 
	WHERE TMPDetalleOrdenCompra.dblModulo = ' + CONVERT(VARCHAR, @dblModulo) + ' AND TMPDetalleOrdenCompra.strUsuario = ''' + @strUsuario + ''''
	IF @dblModulo <> 0 SET @strSQL = @strSQL + ' AND TMPDetalleOrdenCompra.strBodega = ''' + @strBodega + ''''
	SET @strSQL = @strSQL + ' ORDER BY MaterialCasa.strDescripcion'
END
ELSE IF @dblModulo = 3 OR @dblModulo = 5
	SET @strSQL = 'SELECT TMPDetalleOrdenCompra.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, CONVERT(VARCHAR, TMPDetalleOrdenCompra.dtmFInicio, 103) AS dtmFchIni, 
	CONVERT(VARCHAR, TMPDetalleOrdenCompra.dtmFTermino, 103) AS dtmFchTer, TMPDetalleOrdenCompra.dblSolicitud, TMPDetalleOrdenCompra.dblCSolicitud, 
	TMPDetalleOrdenCompra.dblCAutorizada, TMPDetalleOrdenCompra.dblValor
	FROM TMPDetalleOrdenCompra INNER JOIN MaterialCasa ON (TMPDetalleOrdenCompra.strCodigo = MaterialCasa.strCodigo) 
	WHERE TMPDetalleOrdenCompra.dblModulo = ' + CONVERT(VARCHAR, @dblModulo) + ' AND TMPDetalleOrdenCompra.strUsuario = ''' + @strUsuario + '''
	ORDER BY MaterialCasa.strDescripcion'
EXEC(@strSQL)
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleValeConsumo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 18/07/2007
VER: 1.0
*/
CREATE   PROCEDURE [dbo].[sp_getTMPDetalleValeConsumo] 
@dblModulo NUMERIC,
@strUsuario VARCHAR(50)
AS
DECLARE @strSQL VARCHAR(2000)
IF @dblModulo = 0 OR @dblModulo = 1
BEGIN
	SET @strSQL = 'SELECT TMPDetalleValeConsumo.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPDetalleValeConsumo.strPartida, TMPDetalleValeConsumo.dblCantidad
	FROM TMPDetalleValeConsumo INNER JOIN MaterialCasa ON (TMPDetalleValeConsumo.strCodigo = MaterialCasa.strCodigo)
	WHERE strUsuario = ''' + @strUsuario + ''''
	IF @dblModulo = 0
		SET @strSQL = @strSQL + ' AND TMPDetalleValeConsumo.dblModulo = 1'
	ELSE IF @dblModulo = 1
		SET @strSQL = @strSQL + ' AND TMPDetalleValeConsumo.dblModulo = 0'
	SET @strSQL = @strSQL + ' ORDER BY TMPDetalleValeConsumo.strCodigo'
	EXEC(@strSQL)
END
GO
/****** Object:  Table [dbo].[VIEWS]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[VIEWS](
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[VIEW_DEFINITION] [nvarchar](4000) NULL,
	[CHECK_OPTION] [varchar](7) NOT NULL,
	[IS_UPDATABLE] [varchar](2) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[VIEW_TABLE_USAGE]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[VIEW_TABLE_USAGE](
	[VIEW_CATALOG] [nvarchar](128) NULL,
	[VIEW_SCHEMA] [nvarchar](128) NULL,
	[VIEW_NAME] [nvarchar](128) NOT NULL,
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[VIEW_COLUMN_USAGE]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[VIEW_COLUMN_USAGE](
	[VIEW_CATALOG] [nvarchar](128) NULL,
	[VIEW_SCHEMA] [nvarchar](128) NULL,
	[VIEW_NAME] [nvarchar](128) NOT NULL,
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[COLUMN_NAME] [nvarchar](128) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TMPTerminoBodega]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPTerminoBodega](
	[dblModulo] [decimal](18, 0) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblStock] [decimal](18, 2) NULL,
	[dblDevolucion] [decimal](18, 2) NULL,
	[strObservacion] [varchar](1000) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPSolicitudMateriales]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPSolicitudMateriales](
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[strDescripcion] [varchar](50) NULL,
	[strUnidad] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[dblCAutorizada] [decimal](18, 2) NULL,
	[dblPrecio] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPSolicitudDevolucion]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPSolicitudDevolucion](
	[dblModulo] [decimal](18, 0) NULL,
	[strBodega] [varchar](50) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPFacturaInterna]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPFacturaInterna](
	[dblModulo] [decimal](18, 0) NULL,
	[strUsuario] [varchar](50) NULL,
	[dblNumero] [decimal](18, 0) NULL,
	[strCodigo] [varchar](50) NULL,
	[dtmFInicio] [datetime] NULL,
	[dtmFTermino] [datetime] NULL,
	[strCCosto] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[dblPrecio] [decimal](18, 0) NULL,
	[dblSeleccion] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleValeConsumo]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleValeConsumo](
	[dblModulo] [decimal](18, 0) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[strPartida] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleSolicitud]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleSolicitud](
	[dblModulo] [decimal](18, 0) NULL,
	[strBodega] [varchar](50) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleOrdenCompra]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleOrdenCompra](
	[dblModulo] [decimal](18, 0) NULL,
	[strUsuario] [varchar](50) NULL,
	[strBodega] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dtmFInicio] [datetime] NULL,
	[dtmFTermino] [datetime] NULL,
	[dblSolicitud] [decimal](18, 0) NULL,
	[dblCSolicitud] [decimal](18, 2) NULL,
	[dblCAutorizada] [decimal](18, 2) NULL,
	[dblValor] [decimal](18, 0) NULL,
	[strCCosto] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleGuiaIngreso]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleGuiaIngreso](
	[dblModulo] [decimal](18, 0) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblCOCompra] [decimal](18, 2) NULL,
	[dblCIngresada] [decimal](18, 2) NULL,
	[dblValor] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleGuiaDevolucion]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleGuiaDevolucion](
	[dblModulo] [decimal](18, 0) NULL,
	[strBodega] [varchar](50) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleGuiaDespacho]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleGuiaDespacho](
	[dblModulo] [decimal](18, 0) NULL,
	[strBodega] [varchar](50) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblCantidad] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleGuiaCargo]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleGuiaCargo](
	[dblModulo] [decimal](18, 0) NULL,
	[strBodega] [varchar](50) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](10) NULL,
	[dblCantidad] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleDevolucionProveedor]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleDevolucionProveedor](
	[strBodega] [varchar](50) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblStock] [decimal](18, 2) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[dblDevuelve] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TMPDetalleCajaChica]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[TMPDetalleCajaChica](
	[dblModulo] [decimal](18, 0) NULL,
	[strBodega] [varchar](50) NULL,
	[strUsuario] [varchar](50) NULL,
	[strCodigo] [varchar](50) NULL,
	[dblTipoDoc] [decimal](18, 0) NULL,
	[dblNumDoc] [decimal](18, 0) NULL,
	[dblNumOC] [decimal](18, 0) NULL,
	[dblCantidad] [decimal](18, 2) NULL,
	[dblPrecio] [decimal](18, 0) NULL,
	[dblTotal] [decimal](18, 0) NULL,
	[dblRechazo] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[sp_ListarBodega]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE   PROCEDURE [dbo].[sp_ListarBodega]
@strBodega CHAR(5) = '12001'
AS
IF @strBodega='12001' OR @strBodega='12027'
   SELECT * FROM General..Tablon 
   WHERE strTabla='bodeg' AND strVigente>0
   ORDER BY strVigente DESC, strDetalle
ELSE
   SELECT * FROM General..Tablon 
   WHERE strTabla='bodeg' AND strVigente>0 AND strCodigo=@strBodega
   ORDER BY strVigente DESC, strDetalle
GO
/****** Object:  StoredProcedure [dbo].[sp_getFormasPago]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 20-11-2006
MODIF: 0
*/
CREATE PROCEDURE [dbo].[sp_getFormasPago]
@strModulo VARCHAR(5) = 'GNR',
@strCodigo NUMERIC = NULL
AS
IF @strModulo='GNR'
   SELECT strCodigo, strDetalle FROM General..Tablon
   WHERE strTabla='tipop' AND strCodigo=@strCodigo
ELSE IF @strModulo='ALL'
   SELECT strCodigo, strDetalle FROM General..Tablon
   WHERE strTabla='tipop' AND strVigente='1' 
   ORDER BY strDetalle
GO
/****** Object:  StoredProcedure [dbo].[sp_getContrato]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 29/01/2007
MODIF: 1
*/
CREATE  PROCEDURE [dbo].[sp_getContrato]
@strCargo CHAR(5)
AS
SELECT Contratos.strContrato, Descr.strDetalle 
FROM General..Contrato AS Contratos
INNER JOIN General..Tablon AS Descr ON (Contratos.strContrato=Descr.strCodigo)
WHERE Contratos.strCodigo=@strCargo
GO
/****** Object:  StoredProcedure [dbo].[sp_getComunasXBodega]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[sp_getComunasXBodega]
@strBodega as Char(5)
AS
SELECT Com.strCodigo, Com.strDetalle
FROM general..tablon AS Com
LEFT JOIN General..Contrato AS Con
ON Com.strContrato=Con.strContrato
WHERE Com.strTabla='comun'
AND (Con.strBodega=@strBodega or Com.strCodigo in ('00012','00527','00011'))
GO
/****** Object:  StoredProcedure [dbo].[sp_getCentrosCosto]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 20-11-2006
MODIF: 0
*/
CREATE PROCEDURE [dbo].[sp_getCentrosCosto]
@strModulo VARCHAR(5) = 'GNR',
@strCodigo VARCHAR(100) = NULL
AS
IF @strModulo='GNR'
   SELECT strCodigo, strDetalle FROM General..Tablon 
   WHERE strTabla='cenco' AND strCodigo=@strCodigo
ELSE IF @strModulo='ALL'
   SELECT strCodigo, strDetalle FROM General..Tablon 
   WHERE strTabla='cenco' AND strVigente='1' ORDER BY strDetalle
GO
/****** Object:  Table [dbo].[TABLES]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TABLES](
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[TABLE_TYPE] [varchar](10) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TABLE_PRIVILEGES]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TABLE_PRIVILEGES](
	[GRANTOR] [nvarchar](128) NULL,
	[GRANTEE] [nvarchar](128) NULL,
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[PRIVILEGE_TYPE] [varchar](10) NULL,
	[IS_GRANTABLE] [varchar](3) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TABLE_CONSTRAINTS]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TABLE_CONSTRAINTS](
	[CONSTRAINT_CATALOG] [nvarchar](128) NULL,
	[CONSTRAINT_SCHEMA] [nvarchar](128) NULL,
	[CONSTRAINT_NAME] [nvarchar](128) NOT NULL,
	[TABLE_CATALOG] [nvarchar](128) NULL,
	[TABLE_SCHEMA] [nvarchar](128) NULL,
	[TABLE_NAME] [nvarchar](128) NOT NULL,
	[CONSTRAINT_TYPE] [varchar](11) NULL,
	[IS_DEFERRABLE] [varchar](2) NOT NULL,
	[INITIALLY_DEFERRED] [varchar](2) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[sysalternates]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[sysalternates](
	[suid] [smallint] NULL,
	[altsuid] [smallint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[StockMovil]    Script Date: 07/26/2012 16:15:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[StockMovil](
	[strMovil] [char](10) NULL,
	[strCodigo] [char](10) NULL,
	[dblCantidad] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPTerminoBodega]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 05/12/2007
VER: 1.2
*/
CREATE   PROC [dbo].[sp_setTMPTerminoBodega]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(50),
@strValor VARCHAR(1000),
@strObservacion VARCHAR(1000) = NULL
AS
IF @dblModulo = 0
	UPDATE TMPTerminoBodega SET dblDevolucion = CONVERT(NUMERIC(18, 2), @strValor)
	WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 1
	UPDATE TMPTerminoBodega SET strObservacion = @strValor
	WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 2
	UPDATE TMPTerminoBodega SET dblDevolucion = 0, strObservacion = NULL
	WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 3
BEGIN
	DECLARE @strPaso VARCHAR(50), @dblError NUMERIC
	SET @strPaso = '' 
	SET @dblError = 0

	DECLARE tmp_cursor CURSOR FOR
	SELECT @strCodigo FROM TMPTerminoBodega 
	WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
	OPEN tmp_cursor
	FETCH NEXT FROM tmp_cursor INTO @strPaso
	IF @@FETCH_STATUS = 0 SET @dblError = 1
	CLOSE tmp_cursor
	DEALLOCATE tmp_cursor
	
	IF @dblError = 0
		INSERT TMPTerminoBodega
		VALUES(0, @strUsuario, @strCodigo, CONVERT(NUMERIC(18, 2), @strValor), CONVERT(NUMERIC(18, 2), @strValor), @strObservacion)
	
	SELECT @dblError AS dblError
END
ELSE IF @dblModulo = 4
	UPDATE TMPTerminoBodega SET dblDevolucion = CONVERT(NUMERIC(18, 2), @strValor)
	WHERE dblModulo = 1 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPSolicitudDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 05/12/2007
VER: 1.3
*/
CREATE  PROC [dbo].[sp_setTMPSolicitudDevolucion]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50) = NULL,
@strCodigo VARCHAR(50) = NULL,
@dblCantidad NUMERIC(18, 2) = NULL
AS
IF @dblModulo = 0
BEGIN
	IF EXISTS(SELECT strCodigo FROM TMPSolicitudDevolucion WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo)
		UPDATE TMPSolicitudDevolucion SET dblCantidad = dblCantidad + @dblCantidad 
		WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo
	ELSE
		INSERT TMPSolicitudDevolucion
		VALUES(0, @strBodega, @strUsuario, @strCodigo, @dblCantidad)
END
ELSE IF @dblModulo = 1
	DELETE FROM TMPSolicitudDevolucion WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo
ELSE IF @dblModulo = 2
BEGIN
	DELETE FROM TMPSolicitudDevolucion WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strBodega = @strBodega
	
	INSERT TMPSolicitudDevolucion
	SELECT 0, @strBodega, @strUsuario, strCodigo, dblStock FROM Bodega WHERE strBodega = @strBodega AND dblStock > 0
END
ELSE IF @dblModulo = 3
	UPDATE TMPSolicitudDevolucion SET dblCantidad = @dblCantidad WHERE dblModulo = 1 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPFacturaInterna]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 18/01/2008
VER.: 1.0
*/
CREATE  PROC [dbo].[sp_setTMPFacturaInterna]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@dblNumero NUMERIC = NULL,
@strCodigo VARCHAR(50) = NULL,
@dblSw NUMERIC = NULL,
@dblCantidad NUMERIC(18, 2) = NULL,
@dblPrecio NUMERIC(18) = NULL
AS
IF @dblModulo = 0
	UPDATE TMPFacturaInterna SET dblSeleccion = @dblSw WHERE dblModulo = 0 AND strUsuario = @strUsuario
ELSE IF @dblModulo = 1
	UPDATE TMPFacturaInterna SET dblSeleccion = @dblSw WHERE dblModulo = 0 AND strUsuario = @strUsuario AND dblNumero = @dblNumero AND strCodigo = @strCodigo
ELSE IF @dblModulo = 2
	UPDATE TMPFacturaInterna SET dblCantidad = @dblCantidad, dblPrecio = @dblPrecio 
	WHERE dblModulo = 0 AND strUsuario = @strUsuario AND dblNumero = @dblNumero AND strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleValeConsumo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 14/11/2007
VER: 1.4
*/
CREATE         PROC [dbo].[sp_setTMPDetalleValeConsumo]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50) = NULL,
@dblInterno NUMERIC = NULL,
@strCodigo VARCHAR(50) = NULL,
@dblCantidad NUMERIC(18, 2) = NULL,
@strPartida VARCHAR(50) = NULL
AS
DECLARE @dblError NUMERIC, @dblStock NUMERIC(18, 2), @dblCAcum NUMERIC(18, 2), @tmp_cursor  CURSOR
SET @dblError = 0
SET @dblStock = 0
SET @dblCAcum = 0

-- STOCK REAL --
SET @tmp_cursor = CURSOR FOR
SELECT SUM(dblCantidad) + @dblCantidad FROM TMPDetalleValeConsumo WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
OPEN @tmp_cursor
FETCH NEXT FROM @tmp_cursor INTO @dblCAcum
IF @@FETCH_STATUS <> 0 SET @dblCAcum = 0
CLOSE @tmp_cursor

SET @tmp_cursor = CURSOR FOR
SELECT Bodega.dblStock FROM Bodega INNER JOIN MaterialCasa ON (Bodega.strCodigo = MaterialCasa.strCodigo)
WHERE Bodega.strBodega = @strBodega AND MaterialCasa.strCodigo = @strCodigo AND Bodega.dblStock > 0
OPEN @tmp_cursor
FETCH NEXT FROM @tmp_cursor INTO @dblStock
IF @@FETCH_STATUS <> 0 SET @dblError = 1
CLOSE @tmp_cursor
-- STOCK REAL --

IF @dblModulo = 0
BEGIN
	DELETE FROM TMPDetalleValeConsumo WHERE dblModulo = 1 AND strUsuario = @strUsuario

	INSERT TMPDetalleValeConsumo
	SELECT 1, @strUsuario, strCodigo, dblCantidad, strPartida FROM DetalleVC WHERE dblInterno = @dblInterno
END
ELSE IF @dblModulo = 1 AND @dblError = 0
	IF @dblCAcum > @dblStock
		SET @dblError = 1
	ELSE
		UPDATE TMPDetalleValeConsumo SET dblCantidad = @dblCantidad WHERE dblModulo = 1 AND strUsuario = @strUsuario AND strCodigo = @strCodigo AND strPartida = @strPartida
ELSE IF @dblModulo = 2 AND @dblError = 0
BEGIN
	IF EXISTS(SELECT * FROM TMPDetalleValeConsumo WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo AND strPartida = @strPartida)
		SET @dblError = 2
	ELSE
	BEGIN
		IF @dblCAcum > @dblStock
			SET @dblError = 1
		ELSE
			INSERT TMPDetalleValeConsumo VALUES (0, @strUsuario, @strCodigo, @dblCantidad, @strPartida)
	END
END
ELSE IF @dblModulo = 3
	DELETE FROM TMPDetalleValeConsumo WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo AND strPartida = @strPartida
SELECT @dblError AS dblError, @dblStock AS dblStock
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleSolicitud]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 13/11/2007
VER: 1.0
*/
CREATE PROC [dbo].[sp_setTMPDetalleSolicitud]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(50),
@dblCantidad NUMERIC(18, 2) = NULL
AS
IF @dblModulo = 0
BEGIN
	IF EXISTS(SELECT strCodigo FROM TMPDetalleSolicitud WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo)
		UPDATE TMPDetalleSolicitud SET dblCantidad = dblCantidad + @dblCantidad WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
	ELSE
		INSERT TMPDetalleSolicitud VALUES (0, @strBodega, @strUsuario, @strCodigo, @dblCantidad)
END
ELSE IF @dblModulo = 1
	DELETE FROM TMPDetalleSolicitud WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleOrdenCompra]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
FECHA: 30/01/2008
VER: 1.10
*/
CREATE    PROC [dbo].[sp_setTMPDetalleOrdenCompra]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50) = NULL,
@dblNumero NUMERIC = NULL,
@strCodigo VARCHAR(50) = NULL,
@dtmFInicio VARCHAR(10) = NULL,
@dtmFTermino VARCHAR(10) = NULL,
@dblSolicitud NUMERIC = NULL,
@dblCantidad NUMERIC(18, 2) = NULL,
@dblValor NUMERIC = NULL,
@strCCosto VARCHAR(50) = NULL
AS
DECLARE @strSQL VARCHAR(1000), @strPaso VARCHAR(50), @tmp_cursor CURSOR
IF @dblModulo = 0
BEGIN
	DELETE FROM TMPDetalleOrdenCompra WHERE dblModulo = 0 AND strUsuario = @strUsuario
	
	IF EXISTS(SELECT dblNum FROM CaratulaSM WHERE dblNumero = @dblNumero AND strObservacion = '[Traspaso]')
		INSERT TMPDetalleOrdenCompra
	   	SELECT 0, @strUsuario, NULL, DetalleSM.strCodigo, NULL, NULL, NULL, DetalleSM.dblCantidadAut - ISNULL((SELECT SUM(dblCantidad) FROM DetalleOrdenC WHERE dblNumSOL = @dblNumero AND strCodigo=DetalleSM.strCodigo GROUP BY strCodigo), 0), 0,
		ISNULL(ISNULL((SELECT TOP 1 dblValor FROM DetalleOrdenC INNER JOIN CaratulaOC ON (DetalleOrdenC.dblNumero = CaratulaOC.dblNumero) WHERE CaratulaOC.strEstado <> 5 AND CaratulaOC.dtmFecha <= GETDATE() AND DetalleOrdenC.strCodigo = DetalleSM.strCodigo AND CaratulaOC.strBodega = @strBodega ORDER BY CaratulaOC.dtmFecha DESC),
		(SELECT TOP 1 dblValor FROM DetalleOrdenC INNER JOIN CaratulaOC ON (DetalleOrdenC.dblNumero = CaratulaOC.dblNumero) WHERE CaratulaOC.strEstado <> 5 AND CaratulaOC.dtmFecha <= GETDATE() AND DetalleOrdenC.strCodigo = DetalleSM.strCodigo ORDER BY CaratulaOC.dtmFecha DESC)),
		ISNULL((SELECT TOP 1 dblValor FROM DetalleOrdenC INNER JOIN CaratulaOC ON (DetalleOrdenC.dblNumero = CaratulaOC.dblNumero) WHERE CaratulaOC.strEstado <> 5 AND DetalleOrdenC.strCodigo = DetalleSM.strCodigo ORDER BY CaratulaOC.dtmFecha DESC), 0)), NULL
		FROM DetalleSM INNER JOIN MaterialCasa ON (DetalleSM.strCodigo = MaterialCasa.strCodigo) WHERE DetalleSM.dblNumero = @dblNumero AND DetalleSM.dblCantidadAut > 0
	ELSE
		INSERT TMPDetalleOrdenCompra
	   	SELECT 0, @strUsuario, NULL, DetalleSM.strCodigo, NULL, NULL, NULL, DetalleSM.dblCantidadAut - ISNULL((SELECT SUM(dblCantidad) FROM DetalleOrdenC WHERE dblNumSOL = @dblNumero AND strCodigo=DetalleSM.strCodigo GROUP BY strCodigo), 0), 0, NULL, NULL
		FROM DetalleSM INNER JOIN MaterialCasa ON (DetalleSM.strCodigo = MaterialCasa.strCodigo) WHERE DetalleSM.dblNumero = @dblNumero AND DetalleSM.dblCantidadAut > 0
END
ELSE IF @dblModulo = 1
	UPDATE TMPDetalleOrdenCompra SET dblCAutorizada = @dblCantidad WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 2
	UPDATE TMPDetalleOrdenCompra SET dblCAutorizada = 0 WHERE dblModulo = 0 AND strUsuario = @strUsuario 
ELSE IF @dblModulo = 3
	DELETE FROM TMPDetalleOrdenCompra WHERE dblModulo = 0 AND strUsuario = @strUsuario AND dblCAutorizada = 0
ELSE IF @dblModulo = 4
	UPDATE TMPDetalleOrdenCompra SET dblValor = @dblCantidad WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 5
BEGIN
	SET @tmp_cursor = CURSOR FOR
	SELECT strCodigo FROM TMPDetalleOrdenCompra 
	WHERE dblModulo = 1 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @strPaso
	IF @@FETCH_STATUS = 0
		UPDATE TMPDetalleOrdenCompra SET dtmFInicio = CONVERT(DATETIME, @dtmFInicio, 101), dtmFTermino = CONVERT(DATETIME, @dtmFTermino, 101), dblSolicitud = @dblSolicitud, dblCAutorizada = @dblCantidad, dblValor = @dblValor
		WHERE dblModulo = 1 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo
	ELSE
		INSERT TMPDetalleOrdenCompra
		VALUES (1, @strUsuario, @strBodega, @strCodigo, CONVERT(DATETIME, @dtmFInicio, 101), CONVERT(DATETIME, @dtmFTermino, 101), @dblSolicitud, NULL, @dblCantidad, @dblValor, @strCCosto)
	
	CLOSE @tmp_cursor
END
ELSE IF @dblModulo = 6 OR @dblModulo = 8 OR @dblModulo = 13
BEGIN
	SET @strSQL = 'DELETE FROM TMPDetalleOrdenCompra WHERE strUsuario = ''' + @strUsuario + ''' AND strBodega = ''' + @strBodega + ''' AND strCodigo = ''' + @strCodigo + ''''
	IF @dblModulo = 6
		SET @strSQL = @strSQL + ' AND dblModulo = 1'
	ELSE IF @dblModulo = 8
		SET @strSQL = @strSQL + ' AND dblModulo = 2'
	ELSE IF @dblModulo = 13
		SET @strSQL = @strSQL + ' AND dblModulo = 4'
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 7
BEGIN
	SET @tmp_cursor = CURSOR FOR
	SELECT strCodigo FROM TMPDetalleOrdenCompra 
	WHERE dblModulo = 2 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @strPaso
	IF @@FETCH_STATUS = 0
		UPDATE TMPDetalleOrdenCompra SET dblCAutorizada = @dblCantidad, dblValor = @dblValor
		WHERE dblModulo = 2 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo
	ELSE
		INSERT TMPDetalleOrdenCompra
		VALUES (2, @strUsuario, @strBodega, @strCodigo, NULL, NULL, NULL, NULL, @dblCantidad, @dblValor, NULL)
	
	CLOSE @tmp_cursor
END
ELSE IF @dblModulo = 9 OR @dblModulo = 14
BEGIN
	SET @strSQL = 'DELETE FROM TMPDetalleOrdenCompra WHERE dblModulo = '
	IF @dblModulo = 9 
		SET @strSQL = @strSQL + '3'
	ELSE IF @dblModulo = 14
		SET @strSQL = @strSQL + '5'
	SET @strSQL = @strSQL + ' AND strUsuario = ''' + @strUsuario + ''''
	EXEC(@strSQL)
	
	SET @strSQL = 'INSERT TMPDetalleOrdenCompra
   	SELECT '
	IF @dblModulo = 9 
		SET @strSQL = @strSQL + '3'
	ELSE IF @dblModulo = 14
		SET @strSQL = @strSQL + '5'
	SET @strSQL = @strSQL + ' , ''' + @strUsuario + ''', NULL, strCodigo, dtmInicio, dtmTermino, dblNumSol, 0, dblCantidad, dblValor, strCCosto
	FROM DetalleOrdenC WHERE dblNumero = ' + CONVERT(VARCHAR, @dblNumero)
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 10
	UPDATE TMPDetalleOrdenCompra SET dtmFInicio = CONVERT(DATETIME, @dtmFInicio, 101), dtmFTermino = CONVERT(DATETIME, @dtmFTermino, 101)
	WHERE dblModulo = 3 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 11
	UPDATE TMPDetalleOrdenCompra SET dblCAutorizada = dblCSolicitud WHERE dblModulo = 0 AND strUsuario = @strUsuario 
ELSE IF @dblModulo = 12
BEGIN
	SET @tmp_cursor = CURSOR FOR
	SELECT strCodigo FROM TMPDetalleOrdenCompra 
	WHERE dblModulo = 4 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @strPaso
	IF @@FETCH_STATUS = 0
		UPDATE TMPDetalleOrdenCompra SET dblCAutorizada = @dblCantidad, dblValor = @dblValor
		WHERE dblModulo = 4 AND strUsuario = @strUsuario AND strBodega = @strBodega AND strCodigo = @strCodigo
	ELSE
		INSERT TMPDetalleOrdenCompra
		VALUES (4, @strUsuario, @strBodega, @strCodigo, NULL, NULL, NULL, NULL, @dblCantidad, @dblValor, NULL)
	
	CLOSE @tmp_cursor
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleGuiaIngreso]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 15/11/2007
VR: 1.1
*/
CREATE    PROC [dbo].[sp_setTMPDetalleGuiaIngreso]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(50) = NULL,
@dblCantidad NUMERIC(18, 2) = NULL,
@dblValor NUMERIC = NULL,
@strBodega VARCHAR(50) = NULL,
@dblCAnterior NUMERIC(18, 2) = NULL
AS
DECLARE @tmp_cursor CURSOR
IF @dblModulo = 0
	UPDATE TMPDetalleGuiaIngreso SET dblCIngresada = @dblCantidad WHERE dblModulo = 0 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 1
	DELETE FROM TMPDetalleGuiaIngreso WHERE dblModulo = 0 AND strUsuario = @strUsuario AND dblCIngresada = 0
ELSE IF @dblModulo = 2
BEGIN
	IF EXISTS(SELECT ((dblStock - @dblCAnterior) + @dblCantidad) AS dblStock FROM Bodega WHERE strBodega = @strBodega AND strCodigo = @strCodigo AND ((dblStock - @dblCAnterior) + @dblCantidad) >= 0)
		UPDATE TMPDetalleGuiaIngreso SET dblCIngresada = @dblCantidad, dblValor = @dblValor WHERE dblModulo = 1 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
	ELSE
		SELECT 1 AS dblError
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleGuiaDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 07/11/2007
VER: 1.1
*/
CREATE    PROC [dbo].[sp_setTMPDetalleGuiaDevolucion]
@dblModulo NUMERIC,
@strBodega VARCHAR(50) = NULL,
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(50),
@dblCantidad NUMERIC(18, 2) = NULL
AS
IF @dblModulo = 0
BEGIN
	IF EXISTS(SELECT strCodigo FROM TMPDetalleGuiaDevolucion WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo)	
		UPDATE TMPDetalleGuiaDevolucion SET dblCantidad = dblCantidad + @dblCantidad 
		WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
	ELSE
		INSERT TMPDetalleGuiaDevolucion VALUES (0, @strBodega, @strUsuario, @strCodigo, @dblCantidad)
END
ELSE IF @dblModulo = 1
	DELETE FROM TMPDetalleGuiaDevolucion WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 2
	UPDATE TMPDetalleGuiaDevolucion SET dblCantidad = @dblCantidad WHERE dblModulo = 1 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleGuiaDespacho]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/11/2007
VER: 1.2
*/
CREATE  PROC [dbo].[sp_setTMPDetalleGuiaDespacho]
@dblModulo NUMERIC,
@strBodega VARCHAR(50) = NULL,
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(50),
@dblCantidad NUMERIC(18, 2) = NULL
AS
IF @dblModulo = 0
BEGIN
	IF EXISTS(SELECT strCodigo FROM TMPDetalleGuiaDespacho WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo)	
		UPDATE TMPDetalleGuiaDespacho SET dblCantidad = dblCantidad + @dblCantidad 
		WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
	ELSE
		INSERT TMPDetalleGuiaDespacho VALUES (0, @strBodega, @strUsuario, @strCodigo, @dblCantidad)
END
ELSE IF @dblModulo = 1
	DELETE FROM TMPDetalleGuiaDespacho WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 2
	UPDATE TMPDetalleGuiaDespacho SET dblCantidad = @dblCantidad WHERE dblModulo = 1 AND strUsuario = @strUsuario AND strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleGuiaCargo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/11/2007
VER: 1.0
*/
CREATE PROC [dbo].[sp_setTMPDetalleGuiaCargo]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(10),
@dblCantidad NUMERIC(18, 2) = NULL
AS
IF @dblModulo = 0
BEGIN
	IF EXISTS(SELECT strCodigo FROM TMPDetalleGuiaCargo WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo)
		UPDATE TMPDetalleGuiaCargo SET dblCantidad = dblCantidad + @dblCantidad WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
	ELSE
		INSERT TMPDetalleGuiaCargo VALUES(0, @strBodega, @strUsuario, @strCodigo, @dblCantidad)
END
ELSE IF @dblModulo = 1
	DELETE FROM TMPDetalleGuiaCargo WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleDevolucionProveedor]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 23/08/2007
VER: 1.0
*/
CREATE PROC [dbo].[sp_setTMPDetalleDevolucionProveedor]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(50) = NULL,
@dblCantidad NUMERIC(18, 2) = NULL
AS
IF @dblModulo = 0
	UPDATE TMPDetalleDevolucionProveedor SET dblDevuelve = @dblCantidad
	WHERE strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 1
	UPDATE TMPDetalleDevolucionProveedor SET dblDevuelve = dblCantidad
	WHERE strBodega = @strBodega AND strUsuario = @strUsuario
ELSE IF @dblModulo = 2
	UPDATE TMPDetalleDevolucionProveedor SET dblDevuelve = 0
	WHERE strBodega = @strBodega AND strUsuario = @strUsuario
ELSE IF @dblModulo = 3
	DELETE FROM TMPDetalleDevolucionProveedor WHERE strBodega = @strBodega AND strUsuario = @strUsuario
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPDetalleCajaChica]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 28/09/2007
VER.: 1.4
*/
CREATE             PROC [dbo].[sp_setTMPDetalleCajaChica]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(50),
@dblTipoDoc NUMERIC,
@dblNumDoc NUMERIC,
@dblNumOC NUMERIC = NULL,
@dblCantidad NUMERIC(18, 2) = NULL,
@dblPrecio NUMERIC = NULL,
@dblTotal NUMERIC = NULL,
@strRut VARCHAR(50) = NULL,
@dblCantAnt NUMERIC(18, 2) = NULL,
@dblTotAnt NUMERIC(18) = NULL,
@dblEstado NUMERIC = NULL
AS
DECLARE @tmp_cursor CURSOR, @dblMonto NUMERIC, @dblTotDoc NUMERIC, @dblOCompra NUMERIC, @dblError NUMERIC, @strPaso VARCHAR(18), @dblLibre NUMERIC
SET @dblMonto = 0
SET @dblTotDoc = 0
SET @dblOCompra = 0
SET @dblError = 0
SET @dblLibre = 0

IF @dblModulo = 0
BEGIN
	-- MONTO MAX. POR RENDICION --
	SET @tmp_cursor = CURSOR FOR
	SELECT dblFondoFijo FROM General..EncargadoFondoFijo WHERE strUsuario = @strRut and strBodega=@strBodega
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblMonto
	IF @@FETCH_STATUS <> 0 SET @dblMonto = 0
	CLOSE @tmp_cursor
		
	SET @tmp_cursor = CURSOR FOR
	SELECT ISNULL(SUM(dblTotal), 0) + @dblTotal AS dblTotal FROM TMPDetalleCajaChica WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario 
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblTotDoc
	IF @@FETCH_STATUS <> 0 SET @dblTotDoc = 0
	CLOSE @tmp_cursor
	
	IF @dblTotDoc > @dblMonto SET @dblError = 4
	
	-- MONTO MAX. POR DOCUMENTO --
	IF @dblError = 0 AND @strBodega <> '12001'
	BEGIN
		SET @tmp_cursor = CURSOR FOR
		SELECT ISNULL(SUM(dblTotal), 0) + @dblTotal AS dblTotal, ISNULL(MAX(dblNumOC), 0) AS dblNumOC 
		FROM TMPDetalleCajaChica WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario AND dblNumDoc = @dblNumDoc
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblTotDoc, @dblOCompra
		IF @@FETCH_STATUS <> 0 SET @dblTotDoc = 0
		CLOSE @tmp_cursor
	
		IF @dblTipoDoc = 0
		BEGIN
			IF @dblTotDoc > 30000 AND @dblOCompra IS NULL SET @dblError = 1
		END
		ELSE IF @dblTipoDoc = 1
		BEGIN
			IF @strCodigo = '96646' OR @strCodigo = '96647' OR @strCodigo = '96648' OR @strCodigo = '96649'
			BEGIN
				IF @dblTotDoc > 7000 SET @dblError = 2
			END
			ELSE
			BEGIN
				IF @dblTotDoc > 3000 SET @dblError = 3
			END
		END
	END
	
	-- GUARDA --
	IF @dblError = 0
	BEGIN
		SET @tmp_cursor = CURSOR FOR 
		SELECT strCodigo FROM TMPDetalleCajaChica 
		WHERE dblModulo = 0 AND strUsuario=@strUsuario AND strCodigo=@strCodigo AND dblTipoDoc=@dblTipoDoc AND dblNumDoc=@dblNumDoc
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @strCodigo
		IF @@FETCH_STATUS = 0
			UPDATE TMPDetalleCajaChica SET dblCantidad=dblCantidad + @dblCantidad, dblPrecio=@dblPrecio, dblTotal=dblTotal + @dblTotal
			WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario=@strUsuario AND strCodigo=@strCodigo AND dblTipoDoc=@dblTipoDoc AND dblNumDoc=@dblNumDoc
		ELSE
			INSERT TMPDetalleCajaChica
			VALUES (0, @strBodega, @strUsuario, @strCodigo, @dblTipoDoc, @dblNumDoc, @dblNumOC, @dblCantidad, @dblPrecio, @dblTotal, NULL)
		CLOSE @tmp_cursor
	END
	DEALLOCATE @tmp_cursor
	SELECT @dblError AS dblError
END
ELSE IF @dblModulo = 1 OR @dblModulo = 4
BEGIN
   DECLARE @strSQL VARCHAR(2000)
   SET @strSQL = 'DELETE FROM TMPDetalleCajaChica WHERE '
   IF @dblModulo = 1 
      SET @strSQL = @strSQL + 'dblModulo = 0'
   ELSE
      SET @strSQL = @strSQL + 'dblModulo = 1'
   SET @strSQL = @strSQL + ' AND strBodega = ''' + @strBodega + ''' AND strUsuario = ''' + @strUsuario + ''' AND strCodigo = ''' + @strCodigo + ''' AND dblTipoDoc = ' + CONVERT(VARCHAR, @dblTipoDoc) + ' AND dblNumDoc = ' + CONVERT(VARCHAR, @dblNumDoc)
   EXEC(@strSQL)
END
ELSE IF @dblModulo = 2
BEGIN
   	DELETE FROM TMPDetalleCajaChica WHERE dblModulo = 1 AND strBodega = @strBodega AND strUsuario = @strUsuario
	
   	INSERT TMPDetalleCajaChica
   	SELECT DISTINCT 1, @strBodega, @strUsuario, DetalleCajaC.strCodigo, DetalleCajaC.dblTipoDoc, DetalleCajaC.dblNumDoc, DetalleCajaC.dblNumOC, DetalleCajaC.dblCantidad, DetalleCajaC.dblValor, 
   	CASE DetalleCajaC.dblTipoDoc WHEN 0 THEN CONVERT(NUMERIC(18), (DetalleCajaC.dblCantidad * DetalleCajaC.dblValor) * CaratulaCC.dblFactor) ELSE
   	CONVERT(NUMERIC(18), DetalleCajaC.dblCantidad * DetalleCajaC.dblValor) END, DetalleCajaC.dblRechazo
   	FROM CaratulaCC LEFT JOIN DetalleCajaC ON (CaratulaCC.dblNumero = DetalleCajaC.dblNumero)
   	WHERE CaratulaCC.dblNumero = @dblNumOC
END
ELSE IF @dblModulo = 3
BEGIN
   	-- MONTO MAX. POR RENDICION --
   	SET @tmp_cursor = CURSOR FOR
   	SELECT dblFondoFijo FROM General..EncargadoFondoFijo WHERE strUsuario = @strRut
   	OPEN @tmp_cursor
   	FETCH NEXT FROM @tmp_cursor INTO @dblMonto
   	IF @@FETCH_STATUS <> 0 SET @dblMonto = 0
   	CLOSE @tmp_cursor
   	
   	SET @tmp_cursor = CURSOR FOR
   	SELECT (ISNULL(SUM(dblTotal), 0) - @dblTotAnt) + @dblTotal AS dblTotal FROM TMPDetalleCajaChica 
	WHERE dblModulo = 1 AND strBodega = @strBodega AND strUsuario = @strUsuario 
   	OPEN @tmp_cursor
   	FETCH NEXT FROM @tmp_cursor INTO @dblTotDoc
   	IF @@FETCH_STATUS <> 0 SET @dblTotDoc = 0
   	CLOSE @tmp_cursor
   	
   	IF @dblTotDoc > @dblMonto SET @dblError = 4
   
   	-- MONTO MAX. POR DOCUMENTO --
   	IF @dblError = 0 AND @strBodega <> '12001'
   	BEGIN
      	SET @tmp_cursor = CURSOR FOR
      	SELECT (ISNULL(SUM(dblTotal), 0) - @dblTotAnt) + @dblTotal AS dblTotal, ISNULL(MAX(dblNumOC), 0) AS dblNumOC 
      	FROM TMPDetalleCajaChica WHERE dblModulo = 1 AND strUsuario = @strUsuario AND dblNumDoc = @dblNumDoc
      	OPEN @tmp_cursor
      	FETCH NEXT FROM @tmp_cursor INTO @dblTotDoc, @dblOCompra
      	IF @@FETCH_STATUS <> 0 SET @dblTotDoc = 0
      	CLOSE @tmp_cursor
      	
      	IF @dblTipoDoc = 0
      	BEGIN
         	IF @dblTotDoc > 30000 AND @dblOCompra IS NULL SET @dblError = 1
      	END
      	ELSE IF @dblTipoDoc = 1
      	BEGIN
         	IF @strCodigo = '96646' OR @strCodigo = '96647' OR @strCodigo = '96648' OR @strCodigo = '96649'
         	BEGIN
            		IF @dblTotDoc > 7000 SET @dblError = 2
         	END
         	ELSE
         	BEGIN
            		IF @dblTotDoc > 3000 SET @dblError = 3
         	END
      	END
   	END
   	
   	-- GUARDA --
   	IF @dblError = 0
      	UPDATE TMPDetalleCajaChica SET dblCantidad = @dblCantidad, dblPrecio = @dblPrecio, dblTotal = @dblTotal, dblRechazo = @dblEstado
      	WHERE dblModulo = 1 AND strBodega = @strBodega AND strUsuario = @strUsuario AND strCodigo = @strCodigo AND dblTipoDoc = @dblTipoDoc AND dblNumDoc = @dblNumDoc

    DEALLOCATE @tmp_cursor
    SELECT @dblError AS dblError
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setVinculaFactura]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 15/02/2008
VER: 1.0
*/
CREATE PROC [dbo].[sp_setVinculaFactura]
@dblModulo NUMERIC,
@dblNumero NUMERIC,
@strProveedor VARCHAR(50),
@dblEPago NUMERIC = NULL,
@strModulo VARCHAR(50) = NULL
AS
IF @dblModulo = 0
	UPDATE Facturas SET dblEPago = @dblEPago, strModulo = @strModulo WHERE dblNumDoc = @dblNumero AND strProveedor = @strProveedor
GO
/****** Object:  StoredProcedure [dbo].[sp_setModificaDetalleTMP]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 15/11/2006
MODIF: 1
*/
CREATE   PROCEDURE [dbo].[sp_setModificaDetalleTMP]
@strModulo VARCHAR(5),
@strUsuario VARCHAR(100),
@strDetalle VARCHAR(8000)
AS
DECLARE @dblDsd INT, @dblHst INT, @dblCantidad NUMERIC(18,2)
DECLARE @strLn VARCHAR(1000), @strCodigo VARCHAR(50), @strCodElim VARCHAR(1000)
SET @strCodElim = ''
WHILE @strDetalle<>''
BEGIN
   SET @dblHst = PATINDEX('%&&&%', @strDetalle)
   IF @dblHst = 0 SET @dblHst = LEN(@strDetalle) ELSE SET @dblHst = @dblHst -1
   SET @strLn = SUBSTRING(@strDetalle, 1, @dblHst)

   SET @dblDsd = @dblHst + 4
   SET @strDetalle = SUBSTRING(@strDetalle, @dblDsd, LEN(@strDetalle))
   SET @dblHst = PATINDEX('%-%', @strLn)
   SET @strCodigo = SUBSTRING(@strLn, 1, @dblHst-1)
   SET @dblCantidad = SUBSTRING(@strLn, @dblHst+1, LEN(@strLn))

   SET @strCodElim = @strCodElim + @strCodigo + ','
   UPDATE Detalle_TMP SET dblCantidad=@dblCantidad WHERE strUsuario=@strUsuario AND strTipoDoc=@strModulo AND strCodigo=@strCodigo
END

IF LEN(@strCodElim)>0 SET @strCodElim = SUBSTRING(@strCodElim, 1, LEN(@strCodElim)-1)
EXEC('DELETE FROM Detalle_TMP WHERE strUsuario='''+@strUsuario+''' AND strTipoDoc='''+@strModulo+''' AND strCodigo NOT IN ('+@strCodElim+')')
GO
/****** Object:  StoredProcedure [dbo].[sp_MailAvisoNuevaOC]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[sp_MailAvisoNuevaOC]
as
declare @OC as Numeric
declare @TX as varChar(100)

set @OC=(select count(CaratulaOC.dblNumero) from CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo) INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero) where strestado ='1' and strTipoDoc='A')
if @OC>0 begin
set @TX='Hay '+cast(@OC as varchar(2))+' nuevas ordenes de compra pendientes de Autorizacion'
EXEC msdb.dbo.sp_send_dbmail
    @profile_name = 'sistema',
    @recipients = 'lbrescia@atacamasa.cl;agalvan@atacamasa.cl',
    @body = @TX,
    @subject = 'Nueva Orden de Compra para Autorizar';
end
GO
/****** Object:  StoredProcedure [dbo].[sp_setReparaDescMatweriales]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[sp_setReparaDescMatweriales]
as
Update MaterialCasa 
Set strdescripcion=replace(strDescripcion, Char(39), Char(34))
Where strDescripcion Like '%' + Char(39) + '%'
GO
/****** Object:  StoredProcedure [dbo].[sp_setReparaDescMateriales]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[sp_setReparaDescMateriales]
as
Update MaterialCasa 
Set strdescripcion=replace(strDescripcion, Char(39), Char(34))
Where strDescripcion Like '%' + Char(39) + '%'
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleSolicitud]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 03/12/2007
VER: 1.1
*/
CREATE    PROC [dbo].[sp_getTMPDetalleSolicitud]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
	SELECT TMPDetalleSolicitud.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPDetalleSolicitud.dblCantidad
	FROM TMPDetalleSolicitud INNER JOIN MaterialCasa ON (TMPDetalleSolicitud.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleSolicitud.dblModulo = 0 AND TMPDetalleSolicitud.strBodega = @strBodega AND TMPDetalleSolicitud.strUsuario = @strUsuario
ELSE IF @dblModulo = 1
BEGIN
	DELETE FROM TMPDetalleSolicitud WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
	
	INSERT TMPDetalleSolicitud 
	SELECT 0, @strBodega, @strUsuario, DetalleDespacho.strCodigo, DetalleDespacho.dblCantidad
	FROM Despacho INNER JOIN DetalleDespacho ON (Despacho.dblNumero = DetalleDespacho.dblNumero AND Despacho.intVigente = 1)
	WHERE Despacho.dblNumero = @dblNumero
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleOrdenTrabajo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 03/05/2007
VER: 1.0
*/
CREATE PROC [dbo].[sp_getTMPDetalleOrdenTrabajo]
@dblModulo NUMERIC, 
@strUsuario VARCHAR(50),
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
BEGIN
	DELETE FROM TMPDetalleOrdenTrabajo WHERE dblModulo = 0 AND strUsuario = @strUsuario

	INSERT TMPDetalleOrdenTrabajo
	SELECT 0, @strUsuario, strMovil, strCodigo, dblCantidad, strEstado FROM MatInf WHERE dblCorrelativo = @dblNumero
END
ELSE IF @dblModulo = 1
	SELECT TMPDetalleOrdenTrabajo.strMovil, TMPDetalleOrdenTrabajo.strCodigo, Material.strDescripcion, Material.strUnidad, TMPDetalleOrdenTrabajo.dblCantidad, TMPDetalleOrdenTrabajo.strEstado 
	FROM TMPDetalleOrdenTrabajo INNER JOIN Bodega..MaterialCasa AS Material ON (TMPDetalleOrdenTrabajo.strCodigo = Material.strCodigo)
	WHERE dblModulo = 0 AND strUsuario = @strUsuario
GO
/****** Object:  StoredProcedure [dbo].[sp_getFirmaGerencia]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_getFirmaGerencia]
@dblNumero AS NUMERIC
AS
SELECT Usuarios.* FROM General..Usuarios AS Usuarios INNER JOIN Autorizaciones 
ON (Usuarios.usuario = Autorizaciones.strAutoriza) AND (Autorizaciones.strAccion=2)
WHERE Autorizaciones.dblNumero=@dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getFirmaGenerancia]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_getFirmaGenerancia]
@dblNumero AS NUMERIC
AS
SELECT Usuarios.* FROM General..Usuarios AS Usuarios INNER JOIN Autorizaciones 
ON (Usuarios.usuario = Autorizaciones.strAutoriza) AND (Autorizaciones.strAccion=2)
WHERE Autorizaciones.dblNumero=@dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_setFacturas]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 15/02/2008
VER: 2.4
*/
CREATE     PROCEDURE [dbo].[sp_setFacturas]
@dblModulo NUMERIC,
@strFecha VARCHAR(10),
@strOrdenes VARCHAR(1000),
@dblTOrdenes NUMERIC,
@dblTipoDoc NUMERIC,
@dblNumDoc NUMERIC,
@dblMonto NUMERIC,
@strUsuario VARCHAR(100),
@strProveedor VARCHAR(100) = NULL,
@dblNRecepcion NUMERIC = NULL,
@dblEstado NUMERIC = NULL,
@strArchivo VARCHAR(255) = NULL
AS
DECLARE @dblError NUMERIC, @strDocumento VARCHAR(1), @dblTotal NUMERIC, @dblMontoFact NUMERIC, @dblMontoOC NUMERIC, @dblNumero NUMERIC, @dblDiferencia NUMERIC(18, 2), @strOCompra VARCHAR(10), @dblPosIni INT, @strRecepciones VARCHAR(1000)
DECLARE @tmp_cursor CURSOR
SET @dblError = 0
SET @dblNumero = 0
SET @dblMontoFact = 0
SET @dblMontoOC = 0
SET @dblDiferencia = 0
SET @strRecepciones = ''

IF NOT @strOCompra IS NULL
BEGIN
	CREATE TABLE #tmp_montos (strDocumento VARCHAR(1), dblMonto NUMERIC)
	
	EXEC('INSERT #tmp_montos SELECT ''F'', ROUND(ISNULL(SUM(dblMonto), 0),0) + ' + @dblMonto + ' FROM Facturas WHERE dblNumOC IN (' + @strOrdenes + ')')
	EXEC('INSERT #tmp_montos SELECT ''O'', ROUND((SUM(DetalleOrdenC.dblCantidad * DetalleOrdenC.dblValor)) * (1 + CaratulaOC.dblIva), 0) 
	FROM DetalleOrdenC INNER JOIN CaratulaOC ON (DetalleOrdenC.dblNumero = CaratulaOC.dblNumero) WHERE CaratulaOC.dblNumero in (' + @strOrdenes + ') 	GROUP BY CaratulaOC.dblIva)')
	
	SET @tmp_cursor = CURSOR FOR SELECT strDocumento, dblMonto FROM #tmp_montos 
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @strDocumento, @dblTotal
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @strDocumento = 'F' SET @dblMontoFact = @dblTotal  ELSE  SET @dblMontoOC = @dblTotal
	END
	CLOSE @tmp_cursor
	
	IF @dblTOrdenes > 1
	BEGIN
		IF @dblMontoFact < @dblMontoOC SET @dblError = 1 --el monto de la factura no puede ser menor que el monto sugerido
	END
	ELSE
	BEGIN
		IF @dblMontoFact > @dblMontoOC SET @dblError = 2 --el monto de la factura no puede ser mayor que el monto sugerido
	END
	
	IF @dblError = 0 SET @dblDiferencia = @dblMontoFact - @dblMontoOC
END

IF @dblError = 0 AND @dblModulo = 0
BEGIN
	WHILE @strOrdenes <> '' AND @dblError = 0
	BEGIN
		-- PARSE LAS ORDENES DE COMPRA --
		SET @dblPosIni = CHARINDEX(',', @strOrdenes)
		IF @dblPosIni > 0
		BEGIN
			SET @strOCompra = SUBSTRING(@strOrdenes, 1, @dblPosIni - 1)
			SET @strOrdenes = SUBSTRING(@strOrdenes, @dblPosIni + 1, LEN(@strOrdenes))
		END
		ELSE
		BEGIN
			SET @strOCompra = @strOrdenes
			SET @strOrdenes = ''
		END
		
		IF @dblModulo = 0
		BEGIN
			SET @dblNumero = 0
		   	SET @tmp_cursor = CURSOR FOR
		   	SELECT ISNULL(MAX(dblNumero), 0) AS dblNumero FROM Facturas WHERE YEAR(dtmFecha) = YEAR(GETDATE())
		   	OPEN @tmp_cursor
		   	FETCH NEXT FROM @tmp_cursor INTO @dblNumero
		   	IF @@FETCH_STATUS <> 0  SET @dblError = 3 --error al obtener el numero interno
		   	CLOSE @tmp_cursor
			
			IF @dblError = 0
			BEGIN
				SET @dblNumero = @dblNumero + 1 
				SET @strRecepciones = @strRecepciones + ', ' + CONVERT(VARCHAR, @dblNumero)
		   		INSERT Facturas
		   		VALUES(@dblNumero, CONVERT(DATETIME, @strFecha, 101), CONVERT(NUMERIC, @strOCompra), @dblTipoDoc, @dblNumDoc, @dblMonto, @strUsuario, @strProveedor, @dblEstado, @strArchivo, NULL, NULL)
		   	END
		END
	END
END
ELSE IF @dblModulo = 1
BEGIN
	SET @dblNumero = 0
   	SET @tmp_cursor = CURSOR FOR
   	SELECT ISNULL(MAX(dblNumero), 0) AS dblNumero FROM Facturas WHERE YEAR(dtmFecha) = YEAR(GETDATE())
   	OPEN @tmp_cursor
   	FETCH NEXT FROM @tmp_cursor INTO @dblNumero
   	IF @@FETCH_STATUS <> 0  SET @dblError = 3 --error al obtener el numero interno
   	CLOSE @tmp_cursor
	
	IF @dblError = 0
	BEGIN
		SET @dblNumero = @dblNumero + 1 
		SET @strRecepciones = @strRecepciones + ', ' + CONVERT(VARCHAR, @dblNumero)
   		INSERT Facturas
   		VALUES(@dblNumero, CONVERT(DATETIME, @strFecha, 101), NULL, @dblTipoDoc, @dblNumDoc, @dblMonto, @strUsuario, @strProveedor, @dblEstado, @strArchivo, NULL, NULL)
   	END
END
ELSE IF @dblModulo = 2
	UPDATE Facturas SET dblEstado = @dblEstado, strArchivo = @strArchivo WHERE dblNumero = @dblNRecepcion AND dtmFecha = CONVERT(DATETIME, @strFecha, 101)

SET @strRecepciones = LTRIM(SUBSTRING(@strRecepciones, 2, LEN(@strRecepciones)))SELECT @dblError AS dblError, @strRecepciones AS strRecepciones, @dblDiferencia AS dblDiferencia
GO
/****** Object:  StoredProcedure [dbo].[sp_setFacturaInterna]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 21/01/2007
VER.: 1.1
*/
CREATE  PROC [dbo].[sp_setFacturaInterna]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50) = NULL,
@dtmFecha VARCHAR(10) = NULL,
@strProveedor VARCHAR(50) = NULL,
@strCargo VARCHAR(50) = NULL,
@dblNumero NUMERIC = NULL,
@dblEstado NUMERIC = NULL
AS
IF @dblModulo = 0
BEGIN
	INSERT CaratulaFacturaInterna
	VALUES (CONVERT(DATETIME, @dtmFecha, 101), @strProveedor, @strCargo, 0)
	
	DECLARE @tmp_cursor CURSOR, @dblCorrelativo NUMERIC, @dblError NUMERIC
	SET @dblError = 0
	SET @tmp_cursor = CURSOR FOR
	SELECT MAX(dblNumero) FROM CaratulaFacturaInterna
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
	IF @@FETCH_STATUS <> 0 SET @dblError = 1
	CLOSE @tmp_cursor
	
	IF @dblError = 0
	BEGIN
		INSERT DetalleFacturaInterna
		SELECT @dblCorrelativo, strCodigo, dtmFInicio, dtmFTermino, strCCosto, dblCantidad, dblPrecio FROM TMPFacturaInterna WHERE dblModulo = 0 AND strUsuario = @strUsuario
		
		UPDATE DetalleOrdenC SET dblFactura = @dblCorrelativo
      	FROM DetalleOrdenC, TMPFacturaInterna
         	WHERE DetalleOrdenC.dblNumero = TMPFacturaInterna.dblNumero AND DetalleOrdenC.strCodigo = TMPFacturaInterna.strCodigo
		
		DELETE FROM TMPFacturaInterna WHERE dblModulo = 0 AND strUsuario = @strUsuario
	END
	SELECT @dblError AS dblError, @dblCorrelativo AS dblNumero
END
ELSE IF @dblModulo = 1
BEGIN
	UPDATE CaratulaFacturaInterna SET dblEstado = @dblEstado WHERE dblNumero = @dblNumero
	
	INSERT Autorizaciones
	VALUES ('FI', @dblNumero, GETDATE(), @strUsuario, @dblEstado)
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setEditaDetalleTMP]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 12/01/2007
MODIG: 0
*/
CREATE  PROC [dbo].[sp_setEditaDetalleTMP]
@strUsuario VARCHAR(100),
@strTipoDoc VARCHAR(5),
@strCodigo VARCHAR(100),
@dblCantidad NUMERIC(18, 2),
@dblEstado NUMERIC
AS
UPDATE Detalle_TMP SET dblCantidad=@dblCantidad, dblValor=@dblEstado  WHERE strUsuario=@strUsuario AND strTipoDoc=@strTipoDoc AND strCodigo=@strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_getTotalCantSM]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   PROCEDURE [dbo].[sp_getTotalCantSM]
@dblNumero NUMERIC,
@dblComoQuery NUMERIC(1) = 0
AS
DECLARE @dblCant NUMERIC(18, 2)
DECLARE Cant_cursor CURSOR FOR
SELECT SUM(dblCantidadAut) AS TotCant from DetalleSM
WHERE dblNumero = @dblNumero
OPEN Cant_cursor
FETCH NEXT FROM Cant_cursor INTO @dblCant
IF @@FETCH_STATUS<>0 SET @dblCant=0
CLOSE Cant_cursor
DEALLOCATE Cant_cursor
IF @dblComoQuery = 0 RETURN @dblCant ELSE SELECT @dblCant AS dblCant
GO
/****** Object:  StoredProcedure [dbo].[sp_getTotalCantOC]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   PROCEDURE [dbo].[sp_getTotalCantOC]
@dblNumSol NUMERIC,
@dblComoQuery NUMERIC(1)= 0
AS
DECLARE @dblCant NUMERIC(18, 2)
DECLARE Cant_cursor CURSOR FOR
SELECT SUM(dblCantidad) AS TotCant from DetalleOrdenC
WHERE dblNumSol = @dblNumSol
OPEN Cant_cursor
FETCH NEXT FROM Cant_cursor INTO @dblCant
IF @@FETCH_STATUS<>0 SET @dblCant=0
CLOSE Cant_cursor
DEALLOCATE Cant_cursor
IF @dblComoQuery = 0 RETURN @dblCant ELSE SELECT @dblCant AS dblCant
GO
/****** Object:  StoredProcedure [dbo].[sp_getTotalCantidadProducto]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 16-11-2006
MODIF: 0
*/
CREATE    PROCEDURE [dbo].[sp_getTotalCantidadProducto]
@strModulo VARCHAR(5),
@dblNumero NUMERIC,
@dblComoQuery NUMERIC(1) = 0,
@dblCant NUMERIC(18, 2) = NULL OUTPUT
AS
DECLARE @strSQL VARCHAR(1000)
SET @dblCant = 0.00

DECLARE @Cant_cursor CURSOR
IF @strModulo='SM_OC' --SUMA LA CANTIDAD DE PRODUCTOS DE UNA SM EN UNA OC
   SET @Cant_cursor = CURSOR FOR 
   SELECT ISNULL(SUM(DetalleOrdenC.dblCantidad), 0) AS TotCant 
   FROM DetalleOrdenC INNER JOIN CaratulaOC ON (DetalleOrdenC.dblNumero = CaratulaOC.dblNumero)
   WHERE CaratulaOC.strEstado<>'5' AND DetalleOrdenC.dblNumSol=@dblNumero
ELSE IF @strModulo='SM' --SUMA LA CANTIDAD DE PRODUCTOS DE UNA SM
   SET @Cant_cursor = CURSOR FOR
   SELECT ISNULL(SUM(DetalleSM.dblCantidadAut), 0) AS TotCant 
   FROM DetalleSM INNER JOIN CaratulaSM ON (DetalleSM.dblNumero = CaratulaSM.dblNumero)
   WHERE CaratulaSM.strEstado<>'5' AND CaratulaSM.dblNumero=@dblNumero
ELSE IF @strModulo='OC_GI' --SUMA LA CANTIDAD DE PRODUCTOS DE UNA OC EN UNA GI
   SET @Cant_cursor = CURSOR FOR
   SELECT ISNULL(SUM(dblCantidad), 0) AS TotCant from DetalleIngreso WHERE dblNumOC=@dblNumero
ELSE IF @strModulo='OC' --SUMA LA CANTIDAD DE PRODUCTOS DE UNA OC
   SET @Cant_cursor = CURSOR FOR
   SELECT ISNULL(SUM(DetalleOrdenC.dblCantidad), 0) AS TotCant 
   FROM DetalleOrdenC INNER JOIN CaratulaOC ON (DetalleOrdenC.dblNumero = CaratulaOC.dblNumero)
   WHERE CaratulaOC.strEstado<>'5' AND CaratulaOC.dblNumero=@dblNumero
OPEN @Cant_cursor
FETCH NEXT FROM @Cant_cursor INTO @dblCant
IF @@FETCH_STATUS<>0 SET @dblCant=0
CLOSE @Cant_cursor
DEALLOCATE @Cant_cursor
IF @dblComoQuery = 0 RETURN @dblCant ELSE SELECT @dblCant AS dblCant
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPTerminoBodega]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 05/12/2007
VER: 1.1
*/
CREATE    PROC [dbo].[sp_getTMPTerminoBodega]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50) = NULL,
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
BEGIN
	DELETE FROM TMPTerminoBodega WHERE dblModulo = 0 AND strUsuario = @strUsuario
	
	INSERT TMPTerminoBodega
	SELECT DISTINCT 0, @strUsuario, Bodega.strCodigo, Bodega.dblStock, 0, NULL
	FROM Bodega INNER JOIN MaterialCasa ON (Bodega.strCodigo = MaterialCasa.strCodigo AND MaterialCasa.strTipoUnidad = 'M')
	WHERE Bodega.strBodega = @strBodega AND Bodega.dblStock <> 0
END
ELSE IF @dblModulo = 1
	SELECT TMPTerminoBodega.strCodigo, MaterialCasa.strDescripcion, TMPTerminoBodega.dblStock, TMPTerminoBodega.dblDevolucion, TMPTerminoBodega.strObservacion
	FROM TMPTerminoBodega INNER JOIN MaterialCasa ON (TMPTerminoBodega.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPTerminoBodega.dblModulo = 0 AND TMPTerminoBodega.strUsuario = @strUsuario
	ORDER BY MaterialCasa.strDescripcion
ELSE IF @dblModulo = 2
BEGIN
	DELETE FROM TMPTerminoBodega WHERE dblModulo = 1 AND strUsuario = @strUsuario
	
	INSERT TMPTerminoBodega
	SELECT 1, @strUsuario, strCodigo, dblStock, dblDevolucion, strObservacion 
	FROM DetalleTerminoBodega WHERE dblNumero = @dblNumero
END
ELSE IF @dblModulo = 3
	SELECT TMPTerminoBodega.strCodigo, MaterialCasa.strDescripcion, TMPTerminoBodega.dblStock, TMPTerminoBodega.dblDevolucion, TMPTerminoBodega.strObservacion
	FROM TMPTerminoBodega INNER JOIN MaterialCasa ON (TMPTerminoBodega.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPTerminoBodega.dblModulo = 1 AND TMPTerminoBodega.strUsuario = @strUsuario
	ORDER BY MaterialCasa.strDescripcion
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPSolicitudDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 05/12/2007
VER: 1.1
*/
CREATE   PROC [dbo].[sp_getTMPSolicitudDevolucion]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50) = NULL,
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
	SELECT TMPSolicitudDevolucion.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPSolicitudDevolucion.dblCantidad 
	FROM TMPSolicitudDevolucion INNER JOIN MaterialCasa ON (TMPSolicitudDevolucion.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPSolicitudDevolucion.dblModulo = 0 AND TMPSolicitudDevolucion.strUsuario = @strUsuario AND TMPSolicitudDevolucion.strBodega = @strBodega
	ORDER BY TMPSolicitudDevolucion.strCodigo
ELSE IF @dblModulo = 1
BEGIN
	DELETE FROM TMPSolicitudDevolucion WHERE dblModulo = 1 AND strUsuario = @strUsuario
	
	INSERT TMPSolicitudDevolucion
	SELECT 1, @strBodega, @strUsuario, strCodigo, dblCantidad FROM DetalleDespacho WHERE dblNumero = @dblNumero
END
ELSE IF @dblModulo = 2
	SELECT TMPSolicitudDevolucion.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPSolicitudDevolucion.dblCantidad 
	FROM TMPSolicitudDevolucion INNER JOIN MaterialCasa ON (TMPSolicitudDevolucion.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPSolicitudDevolucion.dblModulo = 1 AND TMPSolicitudDevolucion.strUsuario = @strUsuario
	ORDER BY TMPSolicitudDevolucion.strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPFacturaInterna]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 18/01/2008
VER.: 1.0
*/
CREATE  PROC [dbo].[sp_getTMPFacturaInterna]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strCargo VARCHAR(50) = NULL
AS

IF @dblModulo = 0
BEGIN
	DELETE FROM TMPFacturaInterna WHERE dblModulo = 0 AND strUsuario = @strUsuario
	
	INSERT TMPFacturaInterna
	SELECT 0, @strUsuario, DetalleOrdenC.dblNumero, DetalleOrdenC.strCodigo, DetalleOrdenC.dtmInicio, DetalleOrdenC.dtmTermino, DetalleOrdenC.strCCosto, DetalleOrdenC.dblCantidad, DetalleOrdenC.dblValor, 0
	FROM CaratulaOC INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero AND CaratulaOC.strTipoDoc = 'I')
	WHERE CaratulaOC.strCargo = @strCargo AND DetalleOrdenC.dblFactura IS NULL
END
ELSE IF @dblModulo = 1
	SELECT TMPFacturaInterna.dblNumero, CaratulaOC.dblUltima, TMPFacturaInterna.strCodigo, MaterialCasa.strDescripcion, TMPFacturaInterna.strCCosto, CONVERT(VARCHAR, TMPFacturaInterna.dtmFInicio, 103) AS dtmFInicio, CONVERT(VARCHAR, TMPFacturaInterna.dtmFTermino, 103) AS dtmFTermino, TMPFacturaInterna.dblCantidad, TMPFacturaInterna.dblPrecio, (TMPFacturaInterna.dblCantidad * TMPFacturaInterna.dblPrecio) AS dblTotal
	FROM TMPFacturaInterna INNER JOIN CaratulaOC ON (TMPFacturaInterna.dblNumero = CaratulaOC.dblNumero)
	INNER JOIN MaterialCasa ON (TMPFacturaInterna.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPFacturaInterna.dblModulo = 0 AND TMPFacturaInterna.strUsuario = @strUsuario
	ORDER BY CaratulaOC.dblUltima,  TMPFacturaInterna.strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setDetalleValeConsumo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 18/07/2007
VER: 1.0
*/
CREATE     PROC [dbo].[sp_setDetalleValeConsumo]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@dblInterno NUMERIC
AS
IF @dblModulo = 0
BEGIN
	DELETE FROM DetalleVC WHERE dblInterno = @dblInterno

	INSERT DetalleVC
	SELECT @dblInterno, strCodigo, dblCantidad, strPartida FROM TMPDetalleValeConsumo WHERE dblModulo = 1 AND strUsuario = @strUsuario
	
	DELETE FROM TMPDetalleValeConsumo WHERE dblModulo = 1 AND strUsuario = @strUsuario
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setDetalleOrdenTrabajo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 07/05/2007
VER.: 1.0
*/
CREATE PROC [dbo].[sp_setDetalleOrdenTrabajo]
@dblModulo NUMERIC, 
@strUsuario VARCHAR(50), 
@dblNumero NUMERIC
AS
IF @dblModulo = 0
BEGIN
	DELETE FROM MatInf WHERE dblCorrelativo = @dblNumero
	
	INSERT MatInf
	SELECT @dblNumero, strCodigo, dblCantidad, 0, strMovil, GETDATE(), 0, strEstado 
	FROM TMPDetalleOrdenTrabajo WHERE dblModulo = 0 AND strUsuario = @strUsuario
	
	DELETE FROM TMPDetalleOrdenTrabajo WHERE dblModulo = 0 AND strUsuario = @strUsuario
END
ELSE IF @dblModulo = 1
	UPDATE MatInf SET strEstado = '' WHERE dblCorrelativo = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_setCargarStockMoviles]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
P.A.A.T 02/06/2008 
v.1.2
*/
CREATE Proc [dbo].[sp_setCargarStockMoviles]
@strBodega as Char(5)
As
Set NoCount ON
Delete From PasoSM
--Despachos
Insert Into PasoSM Select strCodigo, I.strMovil, Sum(dblcantidad)
From DetalleDespacho as D Left Join Despacho as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strMovil
--Devoluciones
Insert Into PasoSM Select strCodigo, I.strMovil, Sum(dblcantidad)*-1
From DetalleDevolucion as D Left Join Devolucion as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strMovil

--    material Informado
If @strBodega='12022'
Begin
    Insert Into PasoSM Select strCodigo, I.strMovil, Sum(dblCantidad)*-1
    From Orden..MatInf as I Left Join Orden..CaratulaOrden as C
    On I.dblCorrelativo=C.dblCorrelativo
    Where C.strContrato=(Select Top 1 strContrato From General..Contrato Where strBodega=@strBodega)
    Group By I.strCodigo, I.strMovil
end
Delete From StockMovil Where strMovil in (Select strMovil From General..Movil Where strBodega=@strBodega Group by strMovil)

Insert Into StockMovil
Select strCodigo, strMovil, Sum(dblCantidad)
From PasoSM
Group By strCodigo, strMovil
Having Sum(dblCantidad) > 0
Set NoCount OFF
GO
/****** Object:  StoredProcedure [dbo].[sp_setCargarStockMovil]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[sp_setCargarStockMovil]
@strMovil as Char(10)
As
Set NoCount ON
--Despachos
Select I.strMovil, D.strCodigo, Sum(dblcantidad) as dblCantidad into ##PasoSM
From DetalleDespacho as D Left Join Despacho as I
On D.dblNumero=I.dblNumero
Where I.strMovil=@strMovil
Group By strCodigo, I.strMovil
--Devoluciones
Insert Into ##PasoSM Select I.strMovil, D.strCodigo, Sum(dblcantidad)*-1
From DetalleDevolucion as D Left Join Devolucion as I
On D.dblNumero=I.dblNumero
Where I.strMovil=@strMovil
Group By strCodigo, I.strMovil

Delete From StockMovil Where strMovil=@strMovil

Insert Into StockMovil
Select strMovil, strCodigo, Sum(dblCantidad)
From ##PasoSM
Group By strCodigo, strMovil
Having Sum(dblCantidad) > 0
Drop Table ##PasoSM
Set NoCount OFF
GO
/****** Object:  StoredProcedure [dbo].[sp_setCargarBodega]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: PATRICIO
FECHA: 02/07/2010
VER: 8
*/

CREATE   Proc [dbo].[sp_setCargarBodega]
@strBodega as Char(5)
As
--Ingresos
Delete From BodegaP
Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)
From DetalleIngreso as D Left Join Ingreso as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strBodega
--Devoluciones
Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)
From DetalleDevolucion as D Left Join Devolucion as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strBodega
--Devolucion Cargos
Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblCantidad)
From DetalleDevolucionCargos as D Left Join CaratulaDevolucionCargos as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strBodega
IF @strBodega='12001'
BEGIN
Insert Into BodegaP Select D.strCodigo, '12001', Sum(D.dblDevolucion)
From DetalleTerminoBodega as D Left Join CaratulaTerminoBodega as I
On D.dblNumero=I.dblNumero
Group By strCodigo, I.strBodega
END
----------------------
Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)*-1
From DetalleDespacho as D Left Join Despacho as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strBodega

Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)*-1
From DetalleVC as D Left Join CaratulaVC as I
On D.dblInterno=I.dblInterno
Where I.strBodega=@strBodega
Group By strCodigo, I.strBodega

Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)*-1
From DetalleGuiaCargos as D Left Join CaratulaGuiaCargo as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega
Group By strCodigo, I.strBodega

Insert Into BodegaP Select D.strCodigo, I.strBodega, Sum(D.dblStock)*-1
From DetalleTerminoBodega as D Left Join CaratulaTerminoBodega as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega
Group By strCodigo, I.strBodega
----------------

Delete From Bodega Where strBodega = @strBodega
Insert Into Bodega 
select strCodigo, strBodega, sum(dblCantidad)
from BodegaP
group by strCodigo, strBodega
GO
/****** Object:  StoredProcedure [dbo].[sp_setCambiaEstado]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 25/01/2008
VER: 1.1
*/
CREATE  PROC [dbo].[sp_setCambiaEstado]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strEstado VARCHAR(10)
AS
IF @dblModulo = 0
BEGIN
	UPDATE CaratulaOC SET CaratulaOC.strEstado = @strEstado
      FROM CaratulaOC, AutorizaOCompraInterna
	WHERE CaratulaOC.dblNumero = AutorizaOCompraInterna.dblNumero AND dblModulo = 0 AND strUsuario = @strUsuario AND dblSeleccion = 1
	
	INSERT Autorizaciones
	SELECT 'OCI', dblNumero, GETDATE(), strUsuario, @strEstado FROM AutorizaOCompraInterna WHERE dblModulo = 0 AND strUsuario = @strUsuario AND dblSeleccion = 1
	
	DELETE FROM AutorizaOCompraInterna WHERE dblModulo = 0 AND strUsuario = @strUsuario
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getInventario]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 31/03/2008
VER.: 1.5
*/
CREATE PROC [dbo].[sp_getInventario]
@dtmFecha DATETIME,
@strFamilia VARCHAR(2500),
@strBodega VARCHAR(5),
@strTipo VARCHAR(5) = ''
AS
Set NoCount On
--Ingresos
Select DI.strCodigo as strCodigo, Sum(isnull(DI.dblCantidad,0)) as dblcantidad
Into #Paso
From DetalleIngreso as DI Inner Join Ingreso as CI On DI.dblNumero=CI.dblNumero
Where CI.strBodega=@strBodega and CI.dtmFecha <= @dtmFecha and CI.intVigente = 1
Group By Di.strCodigo

--Devoluciones
Insert Into #Paso Select DD.strCodigo as strCodigo, Sum(isNull(DD.dblCantidad,0)) as dblcantidad
From DetalleDevolucion as DD Left Join Devolucion as CD On DD.dblNumero=CD.dblNumero
Where CD.strBodega=@strBodega and CD.dtmFecha <= @dtmFecha and CD.intVigente = 1
Group By DD.strCodigo

--Despachos
Insert Into #Paso Select DE.strCodigo as strCodigo, Sum(isNull(DE.dblCantidad,0))*-1 as dblcantidad
From DetalleDespacho as DE Left Join Despacho as CE On DE.dblNumero=CE.dblNumero
Where CE.strBodega=@strBodega and CE.dtmDespacho <= @dtmFecha and CE.intVigente = 1
Group By DE.strCodigo

--Vale de Consumo
Insert Into #Paso Select DV.strCodigo as strCodigo, Sum(isNull(DV.dblCantidad,0))*-1 as dblcantidad
From DetalleVC as DV Left Join CaratulaVC as CV On DV.dblInterno=CV.dblInterno
Where CV.strBodega=@strBodega and CV.dtmVC <= @dtmFecha
Group By DV.strCodigo

--Guias Cargo
Insert Into #Paso Select DGC.strCodigo as strCodigo, Sum(isNull(DGC.dblCantidad,0))*-1 as dblcantidad
From DetalleGuiaCargos as DGC Left Join CaratulaGuiaCargo as CGC On DGC.dblNumero=CGC.dblNumero
Where CGC.strBodega=@strBodega and CGC.dtmFecha <= @dtmFecha
Group By DGC.strCodigo

-- termino bodega
INSERT INTO #Paso 
SELECT DTB.strCodigo, 	SUM(ISNULL(DTB.dblStock, 0)) * -1 
FROM DetalleTerminoBodega AS DTB LEFT JOIN CaratulaTerminoBodega AS CTB ON (DTB.dblNumero = CTB.dblNumero)
WHERE CTB.strBodega = @strBodega AND CTB.dtmFecha <= @dtmFecha
GROUP BY DTB.strCodigo

--Guias Devolucion Cargo
Insert Into #Paso Select DDC.strCodigo as strCodigo, Sum(isNull(DDC.dblCantidad,0)) as dblcantidad
From DetalleDevolucionCargos as DDC Left Join CaratulaDevolucionCargos as CDC On DDC.dblNumero=CDC.dblNumero
Where CDC.strBodega=@strBodega and CDC.dtmFecha <= @dtmFecha and CDC.intVigente = 1
Group By DDC.strCodigo

-- termino bodega
If @strBodega='12001'
Begin
Insert Into #Paso Select DTB.strCodigo as strCodigo, Sum(isNull(DTB.dblDevolucion, 0)) as dblcantidad
From DetalleTerminoBodega as DTB Left Join CaratulaTerminoBodega as CTB On DTB.dblNumero = CTB.dblNumero
Where CTB.dtmFecha <= @dtmFecha
Group By DTB.strCodigo
End
--Listar
DECLARE @strSQL VARCHAR(8000)
--,isNull((Select top 1 dblValor From DetalleOrdenC as D Inner Join CaratulaOC as C on D.dblNumero=C.dblNumero Where C.dtmFecha < @dtmFecha and C.strEstado<>5 and D.strCodigo = #Paso.strCodigo and C.strBodega=''' + @strBodega + '''  Order by C.dtmFecha Desc),0) as ValorPP
--, isNull(M.dblValorP,0) as dblValor
SET @strSQL = 'Select F.strDetalle as strFamilia, #Paso.strCodigo, M.strDescripcion, Sum(dblCantidad) As dblCantidad, M.strUnidad, 
isNull( isNull((Select top 1 dblValor From DetalleOrdenC as D Inner Join CaratulaOC as C on D.dblNumero=C.dblNumero Where C.strEstado not in (5,10) AND C.dtmFecha <=''' + CONVERT(VARCHAR, @dtmFecha) + ''' AND D.strCodigo = #Paso.strCodigo and C.strBodega=''' + @strBodega + '''  Order by C.dtmFecha Desc),(Select top 1 dblValor From DetalleOrdenC as D Inner Join CaratulaOC as C on D.dblNumero=C.dblNumero Where C.strEstado not in (5,10) AND C.dtmFecha <=''' + CONVERT(VARCHAR, @dtmFecha) + ''' AND D.strCodigo = #Paso.strCodigo Order by C.dtmFecha Desc)), (Select top 1 dblValor From DetalleOrdenC as D Inner Join CaratulaOC as C on D.dblNumero=C.dblNumero Where C.strEstado not in (5) AND D.strCodigo = #Paso.strCodigo Order by C.dtmFecha Desc)) as dblValor
From #Paso Inner Join MaterialCasa as M On #Paso.strCodigo=M.strCodigo 
Inner Join Familia as F'
IF @strBodega = '12000' 
   SET @strSQL = @strSQL + ' On M.strFamilia=F.strCodigo'
ELSE
   SET @strSQL = @strSQL + ' On (M.strFamilia=F.strCodigo AND M.strTipoUnidad = ''M'')'

IF @strFamilia <> 'all' SET @strSQL = @strSQL + ' Where F.strCodigo IN (''' + REPLACE(@strFamilia, '-', ''',''')+''')'
SET @strSQL = @strSQL + ' Group by F.strDetalle, #Paso.strCodigo, M.strDescripcion, M.strUnidad, M.dblValorP 
Having Sum(dblCantidad)<>0 
Order By F.strDetalle'
--select @strsql
EXEC(@strSQL)

--Where F.strCodigo Like ltrim(rTrim(@strFamilia))+"%" --and F.strCentroCosto = @strTipo

Drop Table #Paso
Set NoCount OFF
GO
/****** Object:  StoredProcedure [dbo].[sp_getIngresosAcumulados]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 22/10/2007
VER: 2.2
*/
CREATE      PROC [dbo].[sp_getIngresosAcumulados]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strMes VARCHAR(2),
@dblAno NUMERIC,
@strCodigo VARCHAR(50) = NULL,
@dblCol NUMERIC,
@strOrden VARCHAR(5)
AS
DECLARE @strSQL VARCHAR(8000), @strOrderBy VARCHAR(255)
SET @strSQL=''
SET @strOrderBy=''

IF @strOrden='A' SET @strOrden=' ASC' ELSE SET @strOrden=' DESC'

IF @dblModulo=0
BEGIN
   	CREATE TABLE #Ingresado_Material (strCodigo VARCHAR(50), dblTotal NUMERIC(18, 2))
   	
	INSERT #Ingresado_Material
   	SELECT DetalleIngreso.strCodigo, CONVERT(NUMERIC, DetalleIngreso.dblValor * SUM(DetalleIngreso.dblCantidad))
   	FROM DetalleIngreso INNER JOIN Ingreso ON (DetalleIngreso.dblNumero =Ingreso.dblNumero) 
   	INNER JOIN MaterialCasa ON (DetalleIngreso.strCodigo = MaterialCasa.strCodigo)
   	WHERE (Ingreso.dblEstado<>1 OR Ingreso.dblEstado IS NULL) AND Ingreso.strBodega=@strBodega AND 
   	MONTH(Ingreso.dtmFecha)=@strMes AND YEAR(Ingreso.dtmFecha)=@dblAno and Ingreso.intVigente=1
   	GROUP BY DetalleIngreso.strCodigo, DetalleIngreso.dblValor
   	ORDER BY DetalleIngreso.strCodigo
   	
   	SET @strOrderBy = CASE @dblCol
      	WHEN 1 THEN ' MaterialCasa.strDescripcion' + @strOrden
      	WHEN 2 THEN ' dblTotal' + @strOrden
   	END
   	
   	SET @strSQL='SELECT Materiales.strCodigo, MaterialCasa.strDescripcion, SUM(Materiales.dblTotal) AS dblTotal 
   	FROM #Ingresado_Material AS Materiales INNER JOIN MaterialCasa ON (Materiales.strCodigo = MaterialCasa.strCodigo)
   	GROUP BY Materiales.strCodigo, MaterialCasa.strDescripcion
   	ORDER BY' + @strOrderBy
   	
   	EXEC(@strSQL)
	
   	DROP TABLE #Ingresado_Material
END
ELSE IF @dblModulo=1
BEGIN
   	CREATE TABLE #IngresadoMes (strFecha VARCHAR(7), strCodigo VARCHAR(50), dblTotal NUMERIC(18, 2))
   	
   	INSERT #IngresadoMes
   	SELECT CONVERT(VARCHAR,MONTH(dtmfecha))+'/'+CONVERT(VARCHAR, YEAR(dtmFecha)) AS strMes, DetalleIngreso.strCodigo, DetalleIngreso.dblValor*SUM(DetalleIngreso.dblCantidad)
   	FROM DetalleIngreso INNER JOIN Ingreso ON (DetalleIngreso.dblNumero =Ingreso.dblNumero) 
   	INNER JOIN MaterialCasa ON (DetalleIngreso.strCodigo = MaterialCasa.strCodigo)
   	WHERE (Ingreso.dblEstado<>1 OR Ingreso.dblEstado IS NULL) AND Ingreso.strBodega=@strBodega AND YEAR(Ingreso.dtmFecha)=@dblAno and Ingreso.intVigente=1
   	GROUP BY CONVERT(VARCHAR,MONTH(dtmfecha))+'/'+CONVERT(VARCHAR, YEAR(dtmFecha)), DetalleIngreso.strCodigo, DetalleIngreso.dblValor 
   	ORDER BY  strMes, DetalleIngreso.strCodigo
   	
   	SET @strOrderBy = CASE @dblCol
      	WHEN 1 THEN ' CONVERT(NUMERIC, SUBSTRING(strFecha, 1, LEN(strFecha)-5))' + @strOrden
      	WHEN 2 THEN ' dblTotal' + @strOrden
   	END
   	SET @strSQL='SELECT strFecha, SUM(dblTotal) AS dblTotal FROM #IngresadoMes GROUP BY strFecha 
   	ORDER BY' + @strOrderBy
   	
   	EXEC(@strSQL)
	
	DROP TABLE #IngresadoMes
END
ELSE IF @dblModulo=2
BEGIN
   	SET @strOrderBy = CASE @dblCol
      	WHEN 1 THEN ' Ingreso.dblNum' + @strOrden
      	WHEN 2 THEN ' DetalleIngreso.dblCantidad * DetalleIngreso.dblValor' + @strOrden
   	END
   	
   	SET @strSQL='SELECT Ingreso.dblNum, CONVERT(VARCHAR, Ingreso.dtmfecha, 103) as dtmFecha, Ingreso.strReferencia, Ingreso.dblOrdenC, CaratulaOC.dblUltima,
   	CASE Ingreso.intTipoDoc WHEN 1 THEN ''Factura'' ELSE ''Gu&iacute;a de Despacho'' END AS strTDocumento, DetalleIngreso.dblCantidad, 
   	DetalleIngreso.dblValor, DetalleIngreso.dblCantidad * DetalleIngreso.dblValor AS dblTotal
   	FROM Ingreso INNER JOIN DetalleIngreso ON (Ingreso.dblNumero = DetalleIngreso.dblNumero) 
	LEFT JOIN CaratulaOC ON (Ingreso.dblOrdenC = CaratulaOC.dblNumero)
   	WHERE Ingreso.strBodega='''+@strBodega+''' AND MONTH(Ingreso.dtmFecha)='+ @strMes +' AND YEAR(Ingreso.dtmFecha)='+CONVERT(VARCHAR, @dblAno)+'
   	AND DetalleIngreso.strCodigo='''+@strCodigo+''' ORDER BY' + @strOrderBy
   	
   	EXEC(@strSQL)
END
IF @dblModulo = 3
BEGIN
   	CREATE TABLE #IngresadoMaterial (strCodigo VARCHAR(50), dblTotal NUMERIC(18, 2))
   	
	INSERT #IngresadoMaterial
   	SELECT DetalleIngreso.strCodigo, SUM(DetalleIngreso.dblCantidad)
   	FROM DetalleIngreso INNER JOIN Ingreso ON (DetalleIngreso.dblNumero = Ingreso.dblNumero) 
   	INNER JOIN MaterialCasa ON (DetalleIngreso.strCodigo = MaterialCasa.strCodigo)
   	WHERE (Ingreso.dblEstado <> 1 OR Ingreso.dblEstado IS NULL) AND Ingreso.strBodega = @strBodega AND 
   	YEAR(Ingreso.dtmFecha) = @dblAno AND Ingreso.intVigente = 1
   	GROUP BY DetalleIngreso.strCodigo, DetalleIngreso.dblValor
   	
   	SET @strOrderBy = CASE @dblCol
      	WHEN 1 THEN ' MaterialCasa.strDescripcion' + @strOrden
      	WHEN 2 THEN ' Materiales.dblTotal' + @strOrden
   	END
   	
   	SET @strSQL='SELECT Materiales.strCodigo, MaterialCasa.strDescripcion, SUM(Materiales.dblTotal) AS dblTotal 
   	FROM #IngresadoMaterial AS Materiales INNER JOIN MaterialCasa ON (Materiales.strCodigo = MaterialCasa.strCodigo)
   	GROUP BY Materiales.strCodigo, MaterialCasa.strDescripcion
   	ORDER BY' + @strOrderBy
   	
   	EXEC(@strSQL)
	
   	DROP TABLE #IngresadoMaterial
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getInfRetResumido]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[sp_getInfRetResumido]
@dtmFchIni as varchar(20),
@dtmFchFin as varchar(20),
@strBodega as char(5),
@strContrato as char(5)
as
set nocount on
SELECT  MInformado.strMovil as Movil, MInformado.strCodigo as Codigo, 0 as Retirado, 0 as Devuelto, SUM(MInformado.dblCantidad) as Informado, 0 as Informado2
INTO #tmp_inf
FROM Orden..CaratulaOrden AS COrden 
LEFT JOIN Orden..MatInf AS MInformado ON (COrden.dblCorrelativo = MInformado.dblCorrelativo)
LEFT JOIN MaterialCasa ON (MInformado.strCodigo = MaterialCasa.strCodigo)
WHERE MInformado.dtmInforme BETWEEN CONVERT(DATETIME, @dtmFchIni, 103) AND CONVERT(DATETIME, @dtmFchFin , 103)
AND COrden.strContrato = @strContrato
GROUP BY COrden.strContrato, COrden.strMovil, MInformado.strMovil, MInformado.strCodigo, MInformado.dtmInforme, COrden.dblEP

Insert #tmp_inf
Select MInformado.strMovil, MInformado.strCodigo, 0, 0, 0, SUM(isnull(MInformado.dblCantidad,0))
--FROM Orden..CaratulaOrden AS COrden LEFT JOIN Orden..MatInf AS MInformado ON (COrden.dblCorrelativo = MInformado.dblCorrelativo)
--LEFT JOIN MaterialCasa ON (MInformado.strCodigo = MaterialCasa.strCodigo)
--WHERE COrden.dtmVence BETWEEN CONVERT(DATETIME, @dtmFchIni, 103) AND CONVERT(DATETIME, @dtmFchFin , 103)
--AND COrden.strContrato = @strContrato
--GROUP BY COrden.strContrato, COrden.strMovil, MInformado.strMovil, MInformado.strCodigo, MInformado.dtmInforme, COrden.dblEP
FROM Orden..CaratulaOrden AS COrden 
LEFT JOIN Orden..MatInf AS MInformado ON (COrden.dblCorrelativo = MInformado.dblCorrelativo)
LEFT JOIN MaterialCasa ON (MInformado.strCodigo = MaterialCasa.strCodigo)
WHERE COrden.dtmVence BETWEEN CONVERT(DATETIME, @dtmFchIni, 103) AND CONVERT(DATETIME, @dtmFchFin , 103)
AND COrden.strContrato = @strContrato
GROUP BY COrden.strContrato, COrden.strMovil, MInformado.strMovil, MInformado.strCodigo, MInformado.dtmInforme, COrden.dblEP

INSERT #tmp_inf
SELECT Despacho.strMovil, DetalleDespacho.strCodigo, SUM(DetalleDespacho.dblCantidad), 0, 0, 0
FROM DetalleDespacho LEFT JOIN Despacho ON (DetalleDespacho.dblNumero = Despacho.dblNumero)
LEFT JOIN MaterialCasa ON (DetalleDespacho.strCodigo = MaterialCasa.strCodigo)
WHERE Despacho.dtmDespacho BETWEEN @dtmFchIni AND @dtmFchFin
AND Despacho.strBodega = @strBodega
GROUP BY Despacho.strBodega, Despacho.strMovil, DetalleDespacho.strCodigo, Despacho.dtmDespacho

INSERT #tmp_inf
SELECT Devolucion.strMovil, DetalleDevolucion.strCodigo, 0, SUM(DetalleDevolucion.dblCantidad), 0, 0
FROM DetalleDevolucion 
LEFT JOIN Devolucion ON (DetalleDevolucion.dblNumero = Devolucion.dblNumero)
LEFT JOIN MaterialCasa ON (DetalleDevolucion.strCodigo = MaterialCasa.strCodigo)
WHERE Devolucion.dtmFecha BETWEEN @dtmFchIni AND @dtmFchFin
AND Devolucion.strBodega = @strBodega
GROUP BY Devolucion.strBodega, Devolucion.strMovil, Devolucion.strMovil, DetalleDevolucion.strCodigo, Devolucion.dtmFecha

SELECT #tmp_inf.Movil, #tmp_inf.Codigo, #tmp_inf.Retirado, #tmp_inf.Devuelto, #tmp_inf.Informado AS Informado, #tmp_inf.Informado2 AS Informado2, 
isNull((SELECT TOP 1 dblPrecio FROM HistoricoPrecio WHERE strBodega = @strBodega AND strCodigo = #tmp_inf.Codigo AND Fecha <= SUBSTRING(CONVERT(VARCHAR, @dtmFchIni, 101), 7, 4) + SUBSTRING(CONVERT(VARCHAR, @dtmFchFin, 101), 4, 2) ORDER BY Fecha DESC),0) AS Precio
Into #tmp_inf2
FROM #tmp_inf INNER JOIN MaterialCasa ON (#tmp_inf.Codigo = MaterialCasa.strCodigo)
ORDER BY #tmp_inf.Movil, #tmp_inf.Codigo

DROP TABLE #tmp_inf
set nocount off
Select Movil, Sum(Retirado*Precio) as Retirado, Sum(devuelto*Precio) as Devuelto, sum(Informado*Precio) as Informado, sum(Informado2*Precio) as Informado2
From #tmp_inf2
GROUP BY Movil
ORDER BY Movil
DROP TABLE #tmp_inf2
GO
/****** Object:  StoredProcedure [dbo].[sp_getInformadoRetirado]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 26/01/2011
VER: 1.4
*/
CREATE  PROC [dbo].[sp_getInformadoRetirado]
@dblModulo NUMERIC,
@dtmFchIni VARCHAR(10),
@dtmFchFin VARCHAR(10),
@strBodega VARCHAR(50),
@strMovil VARCHAR(50),
@dblFiltro NUMERIC
AS
DECLARE @dblError NUMERIC, @strSQL VARCHAR(2000), @strContrato VARCHAR(50), @tmp_cursor CURSOR

IF @strMovil <> 'all'
BEGIN  
   SET @tmp_cursor = CURSOR FOR
   SELECT strContrato FROM General..Movil WHERE strBodega = @strBodega AND strMovil = @strMovil
   OPEN @tmp_cursor
   FETCH NEXT FROM @tmp_cursor INTO @strContrato
   IF @@FETCH_STATUS <> 0 SET @dblError = 1
   CLOSE @tmp_cursor
END

CREATE TABLE #tmp_informado (strMovil VARCHAR(15), strCodigo VARCHAR(50), dblRetirado NUMERIC(18, 2), dblDevuelto NUMERIC(18, 2), dblInformado NUMERIC(18, 2), dblPreliminar NUMERIC(18, 2))

SET @strSQL = 'INSERT #tmp_informado
SELECT MInformado.strMovil, MInformado.strCodigo, 0, 0, SUM(MInformado.dblCantidad) * CASE WHEN COrden.dblEP >= 0 THEN 1 ELSE 0 END, SUM(MInformado.dblCantidad)
FROM Orden..CaratulaOrden AS COrden LEFT JOIN Orden..MatInf AS MInformado ON (COrden.dblCorrelativo = MInformado.dblCorrelativo)
LEFT JOIN MaterialCasa ON (MInformado.strCodigo = MaterialCasa.strCodigo)
WHERE MInformado.dtmInforme BETWEEN CONVERT(DATETIME, ''' + @dtmFchIni + ''', 103) AND CONVERT(DATETIME,''' + @dtmFchFin + ''', 103)'
IF @dblFiltro = 1 SET @strSQL = @strSQL + ' AND NOT MaterialCasa.CODROSS IS NULL'
IF @strMovil <> 'all'
   SET @strSQL = @strSQL + ' AND COrden.strContrato = ''' + @strContrato + ''' AND MInformado.strMovil = ''' + @strMovil + ''''
ELSE
   SET @strSQL = @strSQL + ' AND COrden.strContrato IN (SELECT strContrato FROM General..Contrato WHERE strBodega = ''' + @strBodega + ''')'
SET @strSQL = @strSQL + ' GROUP BY MInformado.strMovil, MInformado.strCodigo, MInformado.dtmInforme, COrden.dblEP'
EXEC(@strSQL)

SET @strSQL = 'INSERT #tmp_informado
SELECT Despacho.strMovil, DetalleDespacho.strCodigo, SUM(DetalleDespacho.dblCantidad), 0, 0, 0
FROM DetalleDespacho LEFT JOIN Despacho ON (DetalleDespacho.dblNumero = Despacho.dblNumero)
LEFT JOIN MaterialCasa ON (DetalleDespacho.strCodigo = MaterialCasa.strCodigo)
WHERE Despacho.dtmDespacho BETWEEN CONVERT(DATETIME, ''' + @dtmFchIni + ''', 103) AND CONVERT(DATETIME,''' + @dtmFchFin + ''', 103) AND Despacho.strBodega = ''' + @strBodega + ''''
IF @strMovil <> 'all' SET @strSQL = @strSQL + ' AND Despacho.strMovil = ''' + @strMovil + ''''
IF @dblFiltro = 1 SET @strSQL = @strSQL + ' AND MaterialCasa.CODROSS IS NOT NULL'
SET @strSQL = @strSQL + ' GROUP BY Despacho.strMovil, DetalleDespacho.strCodigo, Despacho.dtmDespacho'
EXEC(@strSQL)

SET @strSQL = 'INSERT #tmp_informado
SELECT Devolucion.strMovil, DetalleDevolucion.strCodigo, 0, SUM(DetalleDevolucion.dblCantidad), 0, 0
FROM DetalleDevolucion LEFT JOIN Devolucion ON (DetalleDevolucion.dblNumero = Devolucion.dblNumero)
LEFT JOIN MaterialCasa ON (DetalleDevolucion.strCodigo = MaterialCasa.strCodigo)
WHERE Devolucion.dtmFecha BETWEEN CONVERT(DATETIME, ''' + @dtmFchIni + ''', 103) AND CONVERT(DATETIME, ''' + @dtmFchFin + ''', 103) AND Devolucion.strBodega = ''' + @strBodega + ''''
IF @strMovil <> 'all' SET @strSQL = @strSQL + ' AND Devolucion.strMovil = ''' + @strMovil + ''''
IF @dblFiltro = 1 SET @strSQL = @strSQL + ' AND MaterialCasa.CODROSS IS NOT NULL'
SET @strSQL = @strSQL + ' GROUP BY Devolucion.strMovil, DetalleDevolucion.strCodigo, Devolucion.dtmFecha'
EXEC(@strSQL)

SELECT #tmp_informado.strMovil, #tmp_informado.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, SUM(#tmp_informado.dblRetirado) AS dblRetirado, SUM(#tmp_informado.dblDevuelto) AS dblDevuelto, SUM(#tmp_informado.dblInformado) AS dblInformado, SUM(#tmp_informado.dblPreliminar) AS dblPreliminar, 
isNull((SELECT TOP 1 dblPrecio FROM HistoricoPrecio WHERE strBodega = @strBodega AND strCodigo = #tmp_informado.strCodigo AND Fecha <= SUBSTRING(CONVERT(VARCHAR, @dtmFchFin, 101), 7, 4) + SUBSTRING(CONVERT(VARCHAR, @dtmFchFin, 101), 4, 2) ORDER BY Fecha DESC),0) AS dblPrecio
FROM #tmp_informado INNER JOIN MaterialCasa ON (#tmp_informado.strCodigo = MaterialCasa.strCodigo)
GROUP BY #tmp_informado.strMovil, #tmp_informado.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad
ORDER BY #tmp_informado.strMovil, MaterialCasa.strDescripcion

DROP TABLE #tmp_informado
GO
/****** Object:  StoredProcedure [dbo].[sp_getGuiaIngreso]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 15-04-2008
VER. 2.2
*/
CREATE PROCEDURE [dbo].[sp_getGuiaIngreso]
@strModulo VARCHAR(5),
@dblNumero NUMERIC,
@strBodega VARCHAR(50) = NULL
AS
IF @strModulo='GI'
   SELECT Ingreso.dblNumero, Ingreso.dblNum, CONVERT(VARCHAR, Ingreso.dtmFecha, 103) AS dtmFecha, Ingreso.strReferencia, Ingreso.dblOrdenC, CaratulaOC.dblUltima, 
   CaratulaOC.strProveedor, Proveedor.strNombre, Proveedor.strDireccion, Proveedor.strComuna, Comunas.strDetalle AS Comuna, Proveedor.strTelefono,
   Proveedor.strFax, Proveedor.strContacto, Ingreso.strBodega, Bodegas.strDetalle As strDescBodega, Ingreso.strCargo, Ingreso.intCC, Ingreso.intTipoDoc, Ingreso.dblEstado,
   CASE Ingreso.dblEstado WHEN 0 THEN 'Vigente' WHEN 5 THEN 'Nula' END AS strDescEstado, CorrelativoDoc.strUsuario, Usuarios.nombre AS strNombUsua,
   CASE Ingreso.intCC WHEN 1 THEN (Select CaratulaCC.dblNum From CaratulaCC Where CaratulaCC.dblNumero=Ingreso.strReferencia) ELSE 0 END as dblCajaChica
   FROM Ingreso LEFT JOIN CaratulaOC ON (Ingreso.dblOrdenC = CaratulaOC.dblNumero)
   LEFT JOIN Proveedor ON (CaratulaOC.strProveedor=Proveedor.strCodigo)
   LEFT JOIN General..Tablon AS Comunas ON (Proveedor.strComuna=Comunas.strCodigo)
   INNER JOIN General..Tablon AS Bodegas ON (Ingreso.strBodega=Bodegas.strCodigo) AND (Bodegas.strTabla='bodeg')
   LEFT JOIN CorrelativoDoc ON (Ingreso.dblNumero=CorrelativoDoc.dblNumero)
   LEFT JOIN General..Usuarios AS Usuarios ON (CorrelativoDoc.strUsuario=Usuarios.usuario)
   WHERE Ingreso.dblNumero=@dblNumero
ELSE IF @strModulo='EGI'
   SELECT Ingreso.dblNumero, Ingreso.dblNum, CONVERT(VARCHAR, Ingreso.dtmFecha, 103) AS dtmFecha, Ingreso.strReferencia, Ingreso.dblOrdenC, CaratulaOC.dblUltima, 
   CaratulaOC.strProveedor, Proveedor.strNombre, Proveedor.strDireccion, Proveedor.strComuna, Comunas.strDetalle AS Comuna, Proveedor.strTelefono,
   Proveedor.strFax, Proveedor.strContacto, Ingreso.strBodega, Ingreso.strCargo, Ingreso.intCC, Ingreso.intTipoDoc 
   FROM Ingreso LEFT JOIN CaratulaOC ON (Ingreso.strBodega = CaratulaOC.strBodega) AND (Ingreso.dblOrdenC = CaratulaOC.dblNumero)
   LEFT JOIN Proveedor ON (CaratulaOC.strProveedor=Proveedor.strCodigo)
   LEFT JOIN General..Tablon AS Comunas ON (Proveedor.strComuna=Comunas.strCodigo)
   WHERE Ingreso.dblNum=@dblNumero AND Ingreso.strBodega=@strBodega
ELSE IF @strModulo='NUM'
   SELECT dblNumero FROM Ingreso WHERE strBodega=@strBodega AND dblNum=@dblNumero
ELSE IF @strModulo='BDOC'
   SELECT dblNumero, dblNum FROM Ingreso WHERE dblOrdenC=@dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getGuiaDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 07/11/2007
VER: 1.3
*/
CREATE         PROC [dbo].[sp_getGuiaDevolucion]
@dblModulo NUMERIC,
@dblNumero NUMERIC,
@strBodega VARCHAR(50) = NULL
AS
IF @dblModulo = 0
	SELECT DISTINCT Devolucion.dblNumero, Devolucion.dblNum, CONVERT(VARCHAR, Devolucion.dtmFecha, 103) AS dtmFecha, Devolucion.strMovil, 
	Personal.strRut, Personal.strNombre, Devolucion.strBodega, Bodegas.strDetalle AS strDescBodega, CorrelativoDoc.strUsuario, Usuarios.nombre AS strNombUsua
	FROM Devolucion INNER JOIN General..Movil AS Moviles ON (Devolucion.strMovil = Moviles.strMovil AND Moviles.strBodega in (Devolucion.strBodega, '1200A'))
	LEFT JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut)
	INNER JOIN General..Tablon AS Bodegas ON (Devolucion.strBodega = Bodegas.strCodigo)
	LEFT JOIN CorrelativoDoc ON (Devolucion.dblNumero=CorrelativoDoc.dblNumero)
	LEFT JOIN General..Usuarios AS Usuarios ON (CorrelativoDoc.strUsuario=Usuarios.usuario)
	WHERE Devolucion.dblNumero=@dblNumero
ELSE IF @dblModulo = 1
	SELECT dblNumero FROM Devolucion WHERE strBodega=@strBodega AND dblNum=@dblNumero
ELSE IF @dblModulo = 2
	SELECT DISTINCT Devolucion.dblNumero, Devolucion.dblNum, CONVERT(VARCHAR, Devolucion.dtmFecha, 103) AS dtmFecha, Devolucion.strMovil, 
	Personal.strNombre, Devolucion.strBodega, Bodegas.strDetalle AS strDescBodega
	FROM Devolucion INNER JOIN General..Movil AS Moviles ON (Devolucion.strMovil = Moviles.strMovil AND Moviles.strBodega = Devolucion.strBodega)
	LEFT JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut)
	INNER JOIN General..Tablon AS Bodegas ON (Devolucion.strBodega = Bodegas.strCodigo)
	LEFT JOIN CorrelativoDoc ON (Devolucion.dblNumero=CorrelativoDoc.dblNumero)
	LEFT JOIN General..Usuarios AS Usuarios ON (CorrelativoDoc.strUsuario=Usuarios.usuario)
	WHERE Devolucion.strBodega = @strBodega AND Devolucion.dblNum = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getGuiaDespacho]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 28/02/2008
VER.: 1.5
*/
CREATE         PROC [dbo].[sp_getGuiaDespacho]
@dblModulo NUMERIC,
@dblNumero NUMERIC,
@strBodega VARCHAR(50) = NULL
AS
DECLARE @strSQL VARCHAR(2000)
IF @dblModulo = 0
BEGIN
	SET @strSQL = 'SELECT DISTINCT Despacho.dblNumero, CONVERT(VARCHAR, Despacho.dtmDespacho, 103) AS dtmFecha, Despacho.strMovil, 
    isNull(Personal.strNombre, (SELECT TOP 1 Proveedor.strNombre From Proveedor Where Proveedor.strCodigo=Despacho.strMovil)) AS strNombre, 
    isNull(Personal.strRut, (SELECT TOP 1 Proveedor.strRut From Proveedor Where Proveedor.strCodigo=Despacho.strMovil)) AS strRut, 
    (SELECT TOP 1 Proveedor.strDireccion From Proveedor Where Proveedor.strCodigo=Despacho.strMovil) AS strDireccion, 
    Despacho.strBodega 
	FROM Despacho LEFT JOIN General..Movil AS Moviles ON (Despacho.strMovil = Moviles.strMovil AND Moviles.strBodega IN (Despacho.strBodega, ''1200A''))
	LEFT JOIN General..PersonalObras AS Personal ON (Moviles.strRut=Personal.strRut)
	WHERE Despacho.dblNumero=' + CONVERT(VARCHAR, @dblNumero)
	IF NOT @strBodega IS NULL SET @strSQL = @strSQL + ' AND Despacho.strBodega=''' + @strBodega + ''''
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 1
	SELECT DISTINCT Despacho.dblNumero, CONVERT(VARCHAR, Despacho.dtmDespacho, 103) AS dtmFecha, Personal.strNombre, Bodegas.strDetalle AS strDescBodega
	FROM Despacho LEFT JOIN General..Movil AS Moviles ON (Despacho.strMovil = Moviles.strMovil AND Moviles.strBodega = Despacho.strBodega)
	LEFT JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut)
	INNER JOIN General..Tablon AS Bodegas ON (Despacho.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	WHERE Despacho.dblNumero = @dblNumero AND Despacho.strBodega = @strBodega
GO
/****** Object:  StoredProcedure [dbo].[sp_getGuiaCargo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/11/2007
VER: 1.1
--------------
P.A.T.
21/02/2008
se elimina la restriccion de vigencia en la tabla personalsoftland, durante la consulta de los datos de la caratula
AND Cargos.dblVigente = 1
*/
CREATE PROCEDURE [dbo].[sp_getGuiaCargo]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
IF @dblModulo = 0
	SELECT DISTINCT CaratulaGuiaCargo.dblNumero, CONVERT(VARCHAR, CaratulaGuiaCargo.dtmFecha, 103) AS dtmFch, DetalleGuiaCargos.strCargo, Cargos.strNombre, CaratulaGuiaCargo.strBodega, Bodegas.strDetalle AS strDescBodega 
	FROM CaratulaGuiaCargo LEFT JOIN DetalleGuiaCargos ON (CaratulaGuiaCargo.dblNumero = DetalleGuiaCargos.dblNumero)
	LEFT JOIN General..PersonalObras AS Cargos ON (DetalleGuiaCargos.strCargo = Cargos.strRut )
	LEFT JOIN General..Tablon AS Bodegas ON (CaratulaGuiaCargo.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	WHERE CaratulaGuiaCargo.dblNumero = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleGuiaIngreso]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 15/11/2007
VER: 1.1
*/
CREATE  PROC [dbo].[sp_getTMPDetalleGuiaIngreso]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
BEGIN
	DELETE FROM TMPDetalleGuiaIngreso WHERE dblModulo = 0 AND strUsuario = @strUsuario
	
	INSERT TMPDetalleGuiaIngreso
	SELECT 0, @strUsuario, strCodigo, dblCantidad - ISNULL((SELECT SUM(dblCantidad) FROM DetalleIngreso WHERE dblNumOC = @dblNumero AND strCodigo = DetalleOrdenC.strCodigo GROUP BY strCodigo),0), 0, dblValor
	FROM DetalleOrdenC WHERE dblNumero = @dblNumero AND dblCantidad > 0
END
ELSE IF @dblModulo = 1
	SELECT TMPDetalleGuiaIngreso.strCodigo, MaterialCasa.strDescripcion, Materialcasa.strUnidad, TMPDetalleGuiaIngreso.dblCOCompra, TMPDetalleGuiaIngreso.dblCIngresada
	FROM TMPDetalleGuiaIngreso INNER JOIN MaterialCasa ON (TMPDetalleGuiaIngreso.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleGuiaIngreso.dblModulo = 0 AND TMPDetalleGuiaIngreso.strUsuario = @strUsuario
ELSE IF @dblModulo = 2
BEGIN
	DELETE FROM TMPDetalleGuiaIngreso WHERE dblModulo = 1 AND strUsuario = @strUsuario

	INSERT TMPDetalleGuiaIngreso
	SELECT 1, @strUsuario, strCodigo, 0, dblCantidad, dblValor FROM DetalleIngreso WHERE dblNumero = @dblNumero
END
ELSE IF @dblModulo = 3
	SELECT TMPDetalleGuiaIngreso.strCodigo, MaterialCasa.strDescripcion, Materialcasa.strUnidad, TMPDetalleGuiaIngreso.dblCIngresada, TMPDetalleGuiaIngreso.dblValor
	FROM TMPDetalleGuiaIngreso INNER JOIN MaterialCasa ON (TMPDetalleGuiaIngreso.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleGuiaIngreso.dblModulo = 1 AND TMPDetalleGuiaIngreso.strUsuario = @strUsuario
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleGuiaDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 07/11/2007
VER: 1.1
*/
CREATE   PROC [dbo].[sp_getTMPDetalleGuiaDevolucion]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
	SELECT TMPDetalleGuiaDevolucion.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPDetalleGuiaDevolucion.dblCantidad 
	FROM TMPDetalleGuiaDevolucion INNER JOIN MaterialCasa ON (TMPDetalleGuiaDevolucion.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleGuiaDevolucion.dblModulo = 0 AND TMPDetalleGuiaDevolucion.strBodega = @strBodega AND TMPDetalleGuiaDevolucion.strUsuario = @strUsuario
ELSE IF @dblModulo = 1
BEGIN
	DELETE FROM TMPDetalleGuiaDevolucion WHERE dblModulo = 1 AND strUsuario = @strUsuario
	
	INSERT TMPDetalleGuiaDevolucion 
	SELECT 1, NULL, @strUsuario, strCodigo, dblCantidad FROM DetalleDevolucion WHERE dblNumero = @dblNumero
END
ELSE IF @dblModulo = 2
	SELECT TMPDetalleGuiaDevolucion.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPDetalleGuiaDevolucion.dblCantidad 
	FROM TMPDetalleGuiaDevolucion INNER JOIN MaterialCasa ON (TMPDetalleGuiaDevolucion.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleGuiaDevolucion.dblModulo = 1 AND TMPDetalleGuiaDevolucion.strUsuario = @strUsuario
	ORDER BY TMPDetalleGuiaDevolucion.strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleGuiaDespacho]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/11/2007
VER: 1.2
*/
CREATE   PROC [dbo].[sp_getTMPDetalleGuiaDespacho]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
	SELECT TMPDetalleGuiaDespacho.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPDetalleGuiaDespacho.dblCantidad 
	FROM TMPDetalleGuiaDespacho INNER JOIN MaterialCasa ON (TMPDetalleGuiaDespacho.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleGuiaDespacho.dblModulo = 0 AND TMPDetalleGuiaDespacho.strBodega = @strBodega AND TMPDetalleGuiaDespacho.strUsuario = @strUsuario
ELSE IF @dblModulo = 1
BEGIN
	DELETE FROM TMPDetalleGuiaDespacho WHERE dblModulo = 1 AND strUsuario = @strUsuario
	
	INSERT TMPDetalleGuiaDespacho 
	SELECT 1, NULL, @strUsuario, strCodigo, dblCantidad FROM DetalleDespacho WHERE dblNumero = @dblNumero
END
ELSE IF @dblModulo = 2
	SELECT TMPDetalleGuiaDespacho.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPDetalleGuiaDespacho.dblCantidad 
	FROM TMPDetalleGuiaDespacho INNER JOIN MaterialCasa ON (TMPDetalleGuiaDespacho.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleGuiaDespacho.dblModulo = 1 AND TMPDetalleGuiaDespacho.strUsuario = @strUsuario
	ORDER BY TMPDetalleGuiaDespacho.strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleGuiaCargo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/11/2007
VER: 1.0
*/
CREATE PROC [dbo].[sp_getTMPDetalleGuiaCargo]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50)
AS
IF @dblModulo = 0
	SELECT TMPDetalleGuiaCargo.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPDetalleGuiaCargo.dblCantidad 
	FROM TMPDetalleGuiaCargo INNER JOIN MaterialCasa ON (TMPDetalleGuiaCargo.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleGuiaCargo.dblModulo = 0 AND TMPDetalleGuiaCargo.strBodega = @strBodega AND TMPDetalleGuiaCargo.strUsuario = @strUsuario
GO
/****** Object:  StoredProcedure [dbo].[sp_getTMPDetalleDevolucionProveedor]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 23/08/2007
VER: 1.0
*/
CREATE PROC [dbo].[sp_getTMPDetalleDevolucionProveedor]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
BEGIN
	DELETE FROM TMPDetalleDevolucionProveedor WHERE strBodega = @strBodega AND strUsuario = @strUsuario
	
	INSERT TMPDetalleDevolucionProveedor
	SELECT @strBodega, @strUsuario, DetalleIngreso.strCodigo, (SELECT SUM(dblStock) FROM Bodega WHERE strCodigo = DetalleIngreso.strCodigo AND strBodega = @strBodega), 	SUM(DetalleIngreso.dblCantidad), 0
	FROM DetalleIngreso INNER JOIN Ingreso ON (DetalleIngreso.dblNumero = Ingreso.dblNumero)
	WHERE DetalleIngreso.dblNumOC = @dblNumero AND Ingreso.strBodega = @strBodega
	GROUP BY DetalleIngreso.strCodigo
END
ELSE IF @dblModulo = 1
	SELECT TMPDetalleDevolucionProveedor.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, TMPDetalleDevolucionProveedor.dblStock, TMPDetalleDevolucionProveedor.dblCantidad, TMPDetalleDevolucionProveedor.dblDevuelve
	FROM TMPDetalleDevolucionProveedor INNER JOIN MaterialCasa ON (TMPDetalleDevolucionProveedor.strCodigo = MaterialCasa.strCodigo)
	WHERE TMPDetalleDevolucionProveedor.strBodega = @strBodega AND TMPDetalleDevolucionProveedor.strUsuario = @strUsuario
GO
/****** Object:  StoredProcedure [dbo].[sp_getFamilia]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 24/01/2008
VER.: 3.0
*/
CREATE    PROC [dbo].[sp_getFamilia]
@dblModulo NUMERIC
AS
IF @dblModulo = 0
	SELECT strCodigo, strDetalle FROM Familia ORDER BY strDetalle
ELSE IF @dblModulo = 1
	SELECT strCodigo, strDetalle FROM Familia WHERE dblTipoFamilia = 0 ORDER BY strDetalle
ELSE IF @dblModulo = 2
	SELECT strCodigo, strDetalle FROM Familia WHERE dblTipoFamilia IN (1, 2) ORDER BY strDetalle
ELSE IF @dblModulo = 3
	SELECT strCodigo, strDetalle FROM Familia WHERE dblTipoFamilia IN (2, 3) ORDER BY strDetalle
ELSE IF @dblModulo = 4
	SELECT strCodigo, strDetalle FROM Familia WHERE dblTipoFamilia = 4  ORDER BY strDetalle
GO
/****** Object:  StoredProcedure [dbo].[sp_getFacturas]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 11/03/2008
VER: 1.15
*/
CREATE PROCEDURE [dbo].[sp_getFacturas]
@dblModulo NUMERIC,
@dblMes NUMERIC = NULL,
@dblAno NUMERIC = NULL,
@dblNumDoc NUMERIC = NULL,
@strProveedor VARCHAR(100) = NULL,
@dblNumOC NUMERIC = NULL,
@dblTipoDoc NUMERIC = NULL,
@dblSIng NUMERIC = NULL,
@strCargo VARCHAR(50) = NULL,
@strFDesde VARCHAR(10) = NULL,
@strFHasta VARCHAR(10) = NULL
AS
DECLARE @strSQL VARCHAR(5000), @dblNum NUMERIC

IF @dblModulo = 0
BEGIN
   	SET @strSQL='SELECT DISTINCT Facturas.dblNumero, CONVERT(VARCHAR, Facturas.dtmFecha, 103) AS dtmFecha, Facturas.dblNumOC, CaratulaOC.dblUltima, Facturas.strProveedor, Proveedor.strNombre AS strNombProv, 
   	CASE Facturas.dblTipoDoc WHEN 0 THEN ''Factura'' WHEN 1 THEN ''Boleta'' WHEN 2 THEN ''Letra'' WHEN 3 THEN ''Nota de Cr&eacute;dito'' WHEN 4 THEN ''Nota de D&eacute;bito'' END AS TipoDoc, 
   	Facturas.dblNumDoc, Facturas.dblMonto, Facturas.strUsuario, Usuarios.nombre, Facturas.dtmFecha AS dtmFch, Facturas.dblEstado, Estados.strDetalle AS strDescEstado, Facturas.strArchivo 
   	FROM Facturas LEFT JOIN CaratulaOC ON (Facturas.dblNumOC = CaratulaOC.dblNumero)
   	LEFT JOIN Proveedor ON (Facturas.strProveedor=Proveedor.strCodigo)
   	INNER JOIN General..Usuarios AS Usuarios ON (Facturas.strUsuario=Usuarios.usuario)
   	LEFT JOIN Comprobantes ON (Facturas.dblNumDoc=Comprobantes.NumFactura AND Comprobantes.CodAux = Proveedor.strCI)
	INNER JOIN General..Tablon AS Estados ON (Facturas.dblEstado = Estados.strCodigo AND Estados.strTabla = ''estfa'')
   	WHERE '
	IF @dblMes = 0
		SET @strSQL = @strSQL + ' YEAR(Facturas.dtmFecha)=' + CONVERT(VARCHAR, @dblAno)
	ELSE
		SET @strSQL = @strSQL + ' MONTH(Facturas.dtmFecha)=' + CONVERT(VARCHAR, @dblMes) + ' AND YEAR(Facturas.dtmFecha)=' + CONVERT(VARCHAR, @dblAno)

   	IF NOT @dblNumDoc IS NULL SET @strSQL = @strSQL + ' AND Facturas.dblNumDoc = ' + CONVERT(VARCHAR, @dblNumDoc)
   	IF @strProveedor <> '' SET @strSQL = @strSQL + ' AND Facturas.strProveedor=''' + @strProveedor + ''''
   	IF NOT @dblNumOC IS NULL 	SET @strSQL = @strSQL + ' AND Facturas.dblNumOC IN (SELECT dblNumero FROM CaratulaOC WHERE dblUltima=' + CONVERT(VARCHAR, @dblNumOC) + ')'
	IF @strCargo <> '' SET @strSQL = @strSQL + ' AND CaratulaOC.strcargo=''' + @strCargo + ''''
   	IF @dblSIng = 1 
		SET @strSQL = @strSQL + ' AND Facturas.dblTipoDoc IN (0, 1) AND Comprobantes.CpbNum IS NULL ORDER BY dtmFch'
   	ELSE
      	SET @strSQL = @strSQL + ' ORDER BY Facturas.dblNumero DESC'
   	EXEC(@strSQL)
END
ELSE IF @dblModulo = 1
   	SELECT DISTINCT Facturas.dblNumero, CONVERT(VARCHAR, Facturas.dtmFecha, 103) AS dtmFecha, Facturas.dblNumOC, CaratulaOC.dblUltima, CaratulaOC.strProveedor, Proveedor.strNombre, Facturas.strProveedor, Proveedor2.strNombre AS NombProv,
   	Facturas.dblTipoDoc, CASE Facturas.dblTipoDoc WHEN 0 THEN 'Factura' WHEN 1 THEN 'Boleta' WHEN 2 THEN 'Letra' END AS TipoDoc, Facturas.dblNumDoc, Facturas.dblMonto, Facturas.strUsuario, Usuarios.nombre, CaratulaOC.strCargo, Facturas.dblEstado, Facturas.strArchivo 
   	FROM Facturas LEFT JOIN CaratulaOC ON (Facturas.dblNumOC = CaratulaOC.dblNumero)
   	LEFT JOIN Proveedor ON (CaratulaOC.strProveedor = Proveedor.strCodigo)
   	LEFT JOIN Proveedor AS Proveedor2 ON (Facturas.strProveedor = Proveedor2.strCodigo)
   	INNER JOIN General..Usuarios AS Usuarios ON (Facturas.strUsuario = Usuarios.usuario)
   	WHERE Facturas.dblNumero = @dblMes AND YEAR(Facturas.dtmFecha) = @dblAno
ELSE IF @dblModulo = 2
BEGIN
	SET @strSQL = 'SELECT Facturas.dblNumero, CONVERT(VARCHAR, Facturas.dtmFecha, 103) AS dtmFecha, Facturas.dblNumOC, CaratulaOC.dblUltima, Facturas.dblTipoDoc, Facturas.dblNumDoc, Facturas.dblMonto, 
	Facturas.strProveedor, Proveedor.strCI, Proveedor.strNombre AS strNombProv, Facturas.strUsuario, Usuarios.nombre AS strNombUsu, Facturas.dblEstado, Estados.strDetalle AS strDescEstado, Facturas.strArchivo
   	FROM Facturas LEFT JOIN Proveedor ON (Facturas.strProveedor = Proveedor.strCodigo)
   	LEFT JOIN CaratulaOC ON (Facturas.dblNumOC = CaratulaOC.dblNumero)
   	INNER JOIN General..Usuarios AS Usuarios ON (Facturas.strUsuario = Usuarios.usuario)
	INNER JOIN General..Tablon AS Estados ON (Facturas.dblEstado = Estados.strCodigo AND Estados.strTabla = ''estfa'')
   	WHERE Facturas.dblNumDoc = ' + CONVERT(VARCHAR, @dblNumDoc) 
	IF NOT @dblMes IS NULL SET @strSQL = @strSQL + ' AND MONTH(Facturas.dtmFecha)=' + CONVERT(VARCHAR, @dblMes)
	SET @strSQL  = @strSQL + ' AND YEAR(Facturas.dtmFecha)=' + CONVERT(VARCHAR, @dblAno)
	IF @strCargo <> '' AND @strCargo <> 'all' SET @strSQL = @strSQL + ' AND CaratulaOC.strCargo = ''' + @strCargo + ''''
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 3
   	SELECT dblNumDoc FROM Facturas WHERE dblTipoDoc = @dblTipoDoc AND strProveedor = @strProveedor AND dblNumDoc = @dblNumDoc
ELSE IF @dblModulo = 4
BEGIN
	IF NOT @dblNumDoc IS NULL
	BEGIN
		SET @strSQL = 'SELECT DISTINCT Facturas.dblNumDoc, Facturas.strProveedor, Proveedor.strNombre, Facturas.dblMonto, Facturas.dblEPago 
		FROM Facturas INNER JOIN Proveedor ON (Facturas.strProveedor = Proveedor.strCodigo)
		WHERE NOT Facturas.dblTipoDoc IN (2, 4) AND Facturas.dblNumDoc = ' + CONVERT(VARCHAR, @dblNumDoc)
		IF @strFDesde <> '' AND @strFHasta <> '' SET @strSQL = @strSQL + ' AND Facturas.dtmFecha BETWEEN ''' + @strFDesde + ''' AND ''' + @strFHasta + ''''
		SET @strSQL = @strSQL + ' ORDER BY Facturas.dblNumDoc, Proveedor.strNombre'
	END
	ELSE
	BEGIN
		SET @strSQL = 'SELECT DISTINCT Facturas.dblNumDoc, Facturas.strProveedor, Proveedor.strNombre, Facturas.dblMonto, Facturas.dblEPago 
		FROM Facturas INNER JOIN Proveedor ON (Facturas.strProveedor = Proveedor.strCodigo)
		INNER JOIN CaratulaOC ON (CaratulaOC.dblNumero = Facturas.dblNumOC)
		WHERE NOT Facturas.dblTipoDoc IN (2, 4) AND CaratulaOC.strCargo = ''' + @strCargo + ''''
		IF @strFDesde <> '' AND @strFHasta <> '' SET @strSQL = @strSQL + ' AND Facturas.dtmFecha BETWEEN ''' + @strFDesde + ''' AND ''' + @strFHasta + ''''
		SET @strSQL = @strSQL + ' ORDER BY Facturas.dblNumDoc, Proveedor.strNombre'
	END
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 5
	SELECT DISTINCT Facturas.dblNumDoc, Facturas.strProveedor, Proveedor.strNombre, Facturas.dblMonto, Facturas.strArchivo, General..Tablon.strZona as strModulo, CaratulaOC.strCargo as strCargo
	FROM Facturas INNER JOIN Proveedor ON (Facturas.strProveedor = Proveedor.strCodigo)
	INNER JOIN CaratulaOC ON (CaratulaOC.dblNumero = Facturas.dblNumOC)
    INNER JOIN General..Tablon ON (General..Tablon.strCodigo=Facturas.strModulo and General..Tablon.strTabla='modep')
	WHERE Facturas.dblEPago = @dblNumDoc AND dblEstado=0 AND strCargo=@strCargo ORDER BY Facturas.dblNumDoc, Proveedor.strNombre
ELSE IF @dblModulo = 6
	SELECT Modulos.strDetalle, SUM(Facturas.dblMonto) AS dblTotal
	FROM Facturas INNER JOIN General..Tablon AS Modulos ON (Facturas.strModulo = Modulos.strCodigo AND Modulos.strTabla = 'modep')
	WHERE dblEpago = @dblNumDoc AND dblEstado=0 GROUP BY Modulos.strDetalle ORDER BY Modulos.strDetalle
ELSE IF @dblModulo = 7
	SELECT Facturas.dblNumero, CONVERT(VARCHAR, Facturas.dtmFecha, 103) AS dtmFecha, Facturas.dblNumOC, CASE Facturas.dblTipoDoc WHEN 0 THEN 'Factura' WHEN 1 THEN 'Boleta' WHEN 3 THEN 'Nota de Credito' END AS strTipoDoc, Facturas.dblNumDoc, CaratulaOC.dblIVA, Facturas.dblMonto, Proveedor.strNombre, Modulos.strDetalle AS strModulo, CaratulaOC.dblUltima as dblUltima
	FROM Facturas INNER JOIN Proveedor ON (Facturas.strProveedor = Proveedor.strCodigo)
	INNER JOIN General..Tablon AS Modulos ON (Facturas.strModulo = Modulos.strCodigo AND Modulos.strTabla = 'modep')
	LEFT JOIN CaratulaOC ON (Facturas.dblNumOC = CaratulaOC.dblNumero) 
	WHERE dblEPago = @dblNumDoc AND dblEstado=0
	ORDER BY strModulo
GO
/****** Object:  StoredProcedure [dbo].[sp_GrabaObservacion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_GrabaObservacion]
@dblNumero as Numeric,
@strTipoDoc as Char(5),
@strObservacion as VarChar(200),
@strUsuario as VarChar(20),
@estado as numeric=0
AS
if @estado=2 
Delete From Observaciones where dblNumero=@dblNumero
else
if Len(@strObservacion)>1 
Insert Into Observaciones values(@dblNumero, @strTipoDoc, getdate(), @strObservacion, @strUsuario)
GO
/****** Object:  StoredProcedure [dbo].[sp_getValeConsumo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 05/02/2007
VER.: 1.1
*/
CREATE     PROC [dbo].[sp_getValeConsumo]
@dblModulo NUMERIC,
@dblNumero NUMERIC,
@strBodega VARCHAR(50) = NULL
AS
IF @dblModulo = 0
	SELECT CaratulaVC.dblInterno, CaratulaVC.dblNumero, CONVERT(VARCHAR, CaratulaVC.dtmVC, 103) AS dtmFecha, CaratulaVC.strBodega  as strObra, 
	Obras.strDetalle AS strDescObra, CaratulaVC.strSolicita, Personal.strNombre, CaratulaVC.strBodega, CorrelativoDoc.strUsuario, Usuarios.nombre AS strNombUsua, CaratulaVC.dblNum
	FROM CaratulaVC INNER JOIN General..Tablon AS Obras ON (CaratulaVC.strBodega = Obras.strCodigo)
	INNER JOIN General..PersonalObras AS Personal ON (CaratulaVC.strSolicita=Personal.strRut)
	LEFT JOIN CorrelativoDoc ON (CaratulaVC.dblInterno=CorrelativoDoc.dblNumero)
	LEFT JOIN General..Usuarios AS Usuarios ON (CorrelativoDoc.strUsuario=Usuarios.usuario)
	WHERE CaratulaVC.dblInterno=@dblNumero
ELSE IF @dblModulo = 1
	SELECT dblInterno AS dblNumero FROM CaratulaVC WHERE strBodega=@strBodega AND dblNumero=@dblNumero
ELSE IF @dblModulo = 2
	SELECT CaratulaVC.dblInterno, CaratulaVC.dblNumero, CONVERT(VARCHAR, CaratulaVC.dtmVC, 103) AS dtmFecha, CaratulaVC.strBodega, 
	Bodegas.strDetalle AS strDescBodega, CaratulaVC.strSolicita, Personal.strNombre AS strDescResponsable
	FROM CaratulaVC INNER JOIN General..Tablon AS Bodegas ON (CaratulaVC.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	INNER JOIN General..PersonalObras AS Personal ON (CaratulaVC.strSolicita = Personal.strRut)
	WHERE CaratulaVC.strBodega = @strBodega AND CaratulaVC.dblNumero = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getUltimaGD]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 04/04/2008
MODIF: 1
*/
CREATE PROCEDURE [dbo].[sp_getUltimaGD]
@strBodega VARCHAR(50),
@dblModulo NUMERIC
AS
If @dblModulo = 0
BEGIN
 SELECT max(dblNumero) as dblNumero FROM Despacho WHERE strBodega=@strBodega 
END
If @dblModulo = 1
BEGIN
 SELECT max(dblNumero) as dblNumero FROM CaratulaGuiaCargo WHERE strBodega=@strBodega
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getUltimaActividad]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 05/02/2007
VER. 1.0
*/
CREATE   PROC [dbo].[sp_getUltimaActividad]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50)
AS
IF @dblModulo=0
BEGIN
   CREATE TABLE #UltimaActividad (strTDoc VARCHAR(50), dtmFecha DATETIME, dblTotDoc NUMERIC)
   
   INSERT #UltimaActividad
   SELECT TOP 1 'VC', dtmFecha, (SELECT COUNT(dblNumero) FROM CorrelativoDoc WHERE strTipoDoc = 'VC' AND strUsuario=@strUsuario) 
   FROM CorrelativoDoc WHERE strTipoDoc = 'VC' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC
   
   INSERT #UltimaActividad
   SELECT TOP 1 'ING', dtmFecha, (SELECT COUNT(dblNumero) FROM CorrelativoDoc WHERE strTipoDoc = 'ING' AND strUsuario=@strUsuario)
   FROM CorrelativoDoc WHERE strTipoDoc = 'ING' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC
   
   INSERT #UltimaActividad
   SELECT TOP 1 'DES', dtmFecha, (SELECT COUNT(dblNumero) FROM CorrelativoDoc WHERE strTipoDoc = 'DES' AND strUsuario=@strUsuario)
   FROM CorrelativoDoc WHERE strTipoDoc = 'DES' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC

   INSERT #UltimaActividad
   SELECT TOP 1 'SM', dtmFecha, (SELECT COUNT(dblNumero) FROM CorrelativoDoc WHERE strTipoDoc = 'SM' AND strUsuario=@strUsuario)
   FROM CorrelativoDoc WHERE strTipoDoc = 'SM' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC
   
   INSERT #UltimaActividad
   SELECT TOP 1 'DEV', dtmFecha, (SELECT COUNT(dblNumero) FROM CorrelativoDoc WHERE strTipoDoc = 'DEV' AND strUsuario=@strUsuario)
   FROM CorrelativoDoc WHERE strTipoDoc = 'DEV' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC
/*-------------------------------------------------------------   */
   INSERT #UltimaActividad
   SELECT TOP 1 'Ingreso ODT', dtmFecha, (SELECT COUNT(dblCorrelativo) FROM Orden..ActividadOrdenes WHERE strModulo = 'C' AND strUsuario=@strUsuario) 
   FROM Orden..ActividadOrdenes WHERE strModulo = 'C' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC
   
   INSERT #UltimaActividad
   SELECT TOP 1 'Inf.Trabajo', dtmFecha, (SELECT COUNT(dblCorrelativo) FROM Orden..ActividadOrdenes WHERE strModulo = 'T' AND strUsuario=@strUsuario)
   FROM Orden..ActividadOrdenes WHERE strModulo = 'T' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC
   
   INSERT #UltimaActividad
   SELECT TOP 1 'Inf.Material', dtmFecha, (SELECT COUNT(dblCorrelativo) FROM Orden..ActividadOrdenes WHERE strModulo = 'M' AND strUsuario=@strUsuario)
   FROM Orden..ActividadOrdenes WHERE strModulo = 'M' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC

   INSERT #UltimaActividad
   SELECT TOP 1 'Anexos', dtmFecha, (SELECT COUNT(dblCorrelativo) FROM Orden..ActividadOrdenes WHERE strModulo = 'A' AND strUsuario=@strUsuario)
   FROM Orden..ActividadOrdenes WHERE strModulo = 'A' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC
   
   INSERT #UltimaActividad
   SELECT TOP 1 'Horas ODT', dtmFecha, (SELECT COUNT(dblCorrelativo) FROM Orden..ActividadOrdenes WHERE strModulo = 'H' AND strUsuario=@strUsuario)
   FROM Orden..ActividadOrdenes WHERE strModulo = 'H' AND strUsuario=@strUsuario ORDER BY dtmFecha DESC

   INSERT #UltimaActividad
   SELECT TOP 1 'Envio a Cobro', dtmEnvio, (SELECT COUNT(dblCorrelativo) FROM Orden..RegistroEnvio WHERE strUsuario=@strUsuario)
   FROM Orden..RegistroEnvio WHERE strUsuario=@strUsuario ORDER BY dtmEnvio DESC

   INSERT #UltimaActividad
   SELECT TOP 1 'L.Maestro', dtmFecha, (SELECT COUNT(strListado) FROM Orden..ActividadListados WHERE strListado='LMaestro' and strUsuario=@strUsuario)
   FROM Orden..ActividadListados WHERE strUsuario=@strUsuario ORDER BY dtmFecha DESC

   INSERT #UltimaActividad
   SELECT TOP 1 'Volumen Obra', dtmFecha, (SELECT COUNT(strListado) FROM Orden..ActividadListados WHERE strListado='VObra' and strUsuario=@strUsuario)
   FROM Orden..ActividadListados WHERE strUsuario=@strUsuario ORDER BY dtmFecha DESC

   INSERT #UltimaActividad
   SELECT TOP 1 'Hoja Ruta', dtmFecha, (SELECT COUNT(strListado) FROM Orden..ActividadListados WHERE strListado='H.R' and strUsuario=@strUsuario)
   FROM Orden..ActividadListados WHERE strUsuario=@strUsuario ORDER BY dtmFecha DESC

   INSERT #UltimaActividad
   SELECT TOP 1 'Listar H.Ruta', dtmFecha, (SELECT COUNT(strListado) FROM Orden..ActividadListados WHERE strListado='L.H.R' and strUsuario=@strUsuario)
   FROM Orden..ActividadListados WHERE strUsuario=@strUsuario ORDER BY dtmFecha DESC

   INSERT #UltimaActividad
   SELECT TOP 1 'Bitacora', dtmFecha, (SELECT COUNT(strListado) FROM Orden..ActividadListados WHERE strListado='Bitacora' and strUsuario=@strUsuario)
   FROM Orden..ActividadListados WHERE strUsuario=@strUsuario ORDER BY dtmFecha DESC

   DELETE #UltimaActividad WHERE dblTotDoc=0
   SELECT strTDoc, CONVERT(VARCHAR, dtmFecha, 120) AS dtmFecha, dblTotDoc FROM #UltimaActividad
   DROP TABLE #UltimaActividad

END
GO
/****** Object:  StoredProcedure [dbo].[sp_getTotalPartida]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 04/04/2007
VER.: 2.1
*/
CREATE   PROCEDURE [dbo].[sp_getTotalPartida]
@dblModulo NUMERIC,
@strPartida VARCHAR(50), 
@strBodega VARCHAR(50), 
@strCodigo VARCHAR(50) = NULL
AS
DECLARE @dblTotal NUMERIC(18)
CREATE TABLE #tmp_total (dblTotal NUMERIC(18, 2) NULL)

IF @dblModulo = 0
BEGIN
   INSERT #tmp_total
   SELECT SUM(DetalleVC.dblCantidad) * (SELECT TOP 1 CONVERT(NUMERIC(18), dblPrecio) FROM HistoricoPrecio WHERE strBodega=@strBodega AND strCodigo=DetalleVC.strCodigo AND Fecha<=CAST(SUBSTRING(CONVERT(CHAR, CaratulaVC.dtmVC, 103),7,4) + SUBSTRING(CONVERT(CHAR,CaratulaVC.dtmVC,103),4,2) AS NUMERIC) ORDER BY Fecha DESC) AS dblTotal
   FROM DetalleVC INNER JOIN CaratulaVC ON (DetalleVC.dblInterno=CaratulaVC.dblInterno)
   WHERE DetalleVC.strPartida=@strPartida AND CaratulaVC.strBodega=@strBodega AND NOT (SELECT TOP 1 CONVERT(NUMERIC(18), dblPrecio) FROM HistoricoPrecio WHERE strBodega=@strBodega AND strCodigo=DetalleVC.strCodigo AND Fecha<=CAST(SUBSTRING(CONVERT(CHAR, CaratulaVC.dtmVC, 103),7,4) + SUBSTRING(CONVERT(CHAR,CaratulaVC.dtmVC,103),4,2) AS NUMERIC) ORDER BY Fecha DESC) IS NULL
   GROUP BY DetalleVC.strCodigo, CaratulaVC.dtmVC
END
ELSE IF @dblModulo = 1
BEGIN
   INSERT #tmp_total
   SELECT SUM(DetalleVC.dblCantidad) * (SELECT TOP 1 CONVERT(NUMERIC(18), dblPrecio) FROM HistoricoPrecio WHERE strBodega=@strBodega AND Fecha<=CAST(SUBSTRING(CONVERT(VARCHAR, CaratulaVC.dtmVC, 103),7,4) + SUBSTRING(CONVERT(CHAR,CaratulaVC.dtmVC,103),4,2) AS NUMERIC) AND strCodigo=@strCodigo ORDER BY Fecha DESC)
   FROM DetalleVC INNER JOIN CaratulaVC ON (DetalleVC.dblInterno=CaratulaVC.dblInterno)
   WHERE DetalleVC.strPartida=@strPartida AND CaratulaVC.strBodega=@strBodega AND DetalleVC.strCodigo=@strCodigo
   GROUP BY CaratulaVC.dtmVC
END

DECLARE cursor_total CURSOR FOR
SELECT CONVERT(NUMERIC(18), SUM(dblTotal)) FROM #tmp_total
OPEN cursor_total
FETCH NEXT FROM cursor_total INTO @dblTotal
IF @@FETCH_STATUS <> 0 SET @dblTotal = 0
CLOSE cursor_total
DEALLOCATE cursor_total

DROP TABLE #tmp_total

RETURN @dblTotal
GO
/****** Object:  StoredProcedure [dbo].[sp_AgregaLineaDetalleTMP]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 21/11/2006
MODIF: 2
*/
CREATE              PROCEDURE [dbo].[sp_AgregaLineaDetalleTMP]
@strUsuario VARCHAR(50), 
@strTipoDoc CHAR(5), 
@strCodigo VARCHAR(50), 
@strPartida VARCHAR(20) = NULL, 
@dblCantidad NUMERIC(18,2),
@dblValor NUMERIC(18) = NULL,
@intSumaLinea NUMERIC(1) = 1,
@dtmFchIni VARCHAR(10) = NULL,
@dtmFchTer VARCHAR(10) = NULL,
@dblNumSol NUMERIC = NULL,
@dblNumOC NUMERIC = NULL
AS
DECLARE @dblNumFil NUMERIC
SET @dblNumFil = 0
IF @intSumaLinea=1
BEGIN
   DECLARE DTMP_cursor CURSOR FOR
   SELECT strCodigo FROM Detalle_TMP 
   WHERE strUsuario=@strUsuario AND strTipoDoc=@strTipoDoc AND strCodigo=@strCodigo
   OPEN DTMP_cursor
   FETCH NEXT FROM DTMP_cursor INTO @strCodigo
   IF @@FETCH_STATUS=0
      UPDATE Detalle_TMP SET dblCantidad=dblCantidad+@dblCantidad 
      WHERE strUsuario=@strUsuario AND strTipoDoc=@strTipoDoc AND strCodigo=@strCodigo
   ELSE
   BEGIN
      DECLARE NumFil_cursor CURSOR FOR
      SELECT MAX(dblNumFil) AS dblNumFil FROM Detalle_TMP
      OPEN NumFil_cursor
      FETCH NEXT FROM NumFil_cursor INTO @dblNumFil
      IF @@FETCH_STATUS=0
      BEGIN
         IF @dblNumFil IS NOT NULL SET @dblNumFil=@dblNumFil + 1 ELSE SET @dblNumFil = 1
      END
      ELSE 
         SET @dblNumFil = 1

      CLOSE NumFil_cursor
      DEALLOCATE NumFil_cursor
      
      INSERT Detalle_TMP VALUES (@strUsuario, @strTipoDoc, @strCodigo, @strPartida, @dblCantidad, @dblValor, @dblNumFil, @dtmFchIni, @dtmFchTer, @dblNumSol, @dblNumOC)
   END
END
ELSE
BEGIN
   DECLARE DTMP_cursor CURSOR FOR
   SELECT strCodigo FROM Detalle_TMP 
   WHERE strUsuario=@strUsuario AND strTipoDoc=@strTipoDoc AND strCodigo=@strCodigo AND dblValor=@dblValor
   OPEN DTMP_cursor
   FETCH NEXT FROM DTMP_cursor INTO @strCodigo
   IF @@FETCH_STATUS=0
      UPDATE Detalle_TMP SET dblCantidad=dblCantidad+@dblCantidad 
      WHERE strUsuario=@strUsuario AND strTipoDoc=@strTipoDoc AND strCodigo=@strCodigo AND dblValor=@dblValor
   ELSE
   BEGIN
      DECLARE NumFil_cursor CURSOR FOR
      SELECT MAX(dblNumFil) AS dblNumFil FROM Detalle_TMP
      OPEN NumFil_cursor
      FETCH NEXT FROM NumFil_cursor INTO @dblNumFil
      IF @@FETCH_STATUS=0
      BEGIN
         IF @dblNumFil IS NOT NULL SET @dblNumFil=@dblNumFil + 1 ELSE SET @dblNumFil = 1
      END
      ELSE 
         SET @dblNumFil = 1

      CLOSE NumFil_cursor
      DEALLOCATE NumFil_cursor

      INSERT Detalle_TMP VALUES (@strUsuario, @strTipoDoc, @strCodigo, @strPartida, @dblCantidad, @dblValor, @dblNumFil, @dtmFchIni, @dtmFchTer, @dblNumSol, @dblNumOC)
   END
END
CLOSE DTMP_cursor
DEALLOCATE DTMP_cursor
GO
/****** Object:  StoredProcedure [dbo].[sp_ActualizaProveedor]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/01/2007
MODIF: 0
*/
CREATE PROCEDURE [dbo].[sp_ActualizaProveedor] 
@strRut VARCHAR(15),
@strNombre VARCHAR(100),
@strDireccion VARCHAR(100),
@strComuna VARCHAR(10),
@strFono VARCHAR(100),
@strFax VARCHAR(100),
@strContacto VARCHAR(100),
@strCorreo VARCHAR(100) = NULL
AS
UPDATE Proveedor SET strNombre=@strNombre, strDireccion=@strDireccion, strComuna=@strComuna, strTelefono=@strFono, strFax=@strFax, strContacto=@strContacto, strCorreo=@strCorreo
WHERE strRut=@strRut
GO
/****** Object:  StoredProcedure [dbo].[sp_ActualizaPrecioHistorico]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_ActualizaPrecioHistorico]
@strCodigo as Char(6),
@strBodega as Char(5),
@dtmFecha as Datetime,
@dblValor as Numeric
AS
declare @Historico as Numeric
set @Historico=(select count(strcodigo)
from HistoricoPrecio
where strBodega=@strBodega 
and Fecha = cast(substring(convert(varchar, @dtmFecha, 103),7,4) + substring(convert(char,@dtmFecha,103),4,2) as Numeric)
and strCodigo=@strCodigo)
if @Historico = 0
begin
--Agrega registro con Precio Mensual del Producto
 Insert Into HistoricoPrecio Values
(
 @strCodigo, @strBodega, cast(substring(convert(varchar, @dtmFecha, 103),7,4) + substring(convert(char,@dtmFecha,103),4,2) as numeric), @dblValor
)
end
else
begin
--Actualiza Precio Promedio mensual del producto
Update HistoricoPrecio 
Set dblPrecio = 	(Select avg(dblvalor) 
	      	 From detalleingreso AS D 
		 Left Join Ingreso as I 
		 on D.dblNumero=I.dblNumero 
		 where strBodega=@strBodega 
		 and strCodigo=@strCodigo
		 and Year(I.dtmFecha)=Year(getDate())
		 and Month(I.dtmFecha)=Month(getdate())
		 Group by strCodigo, strBodega, cast(substring(convert(varchar, I.dtmFecha , 103),7,4) + substring(convert(char,I.dtmFecha,103),4,2) as numeric) 
		)
where strBodega=@strBodega 
and strCodigo=@strCodigo
and Fecha = cast(substring(convert(varchar, @dtmFecha, 103),7,4) + substring(convert(char,@dtmFecha,103),4,2)as Numeric)
end
GO
/****** Object:  StoredProcedure [dbo].[sp_ActualizaCorrelativo]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[sp_ActualizaCorrelativo]
@strCodigo AS CHAR(5)
AS
if @strCodigo='OCO' 
Begin
 UPDATE Correlativo 
 SET dblNumero = dblNumero + 1 
 WHERE strCodigo = @strCodigo
End
Else
Begin
 UPDATE Correlativo 
 SET dblNumero = dblNumero + 1 
 WHERE strCodigo = @strCodigo and strBodega='TODAS'
End
GO
/****** Object:  StoredProcedure [dbo].[sp_ActualizaBodega]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[sp_ActualizaBodega]
@strBodega as char(5),
@strCodigo as Char(10),
@dblStock as Numeric(9,2)
As
Declare @Material as Numeric
Set @Material = (select Count(strCodigo) from Bodega where strBodega=@strBodega and strCodigo=@strCodigo)
if @material > 0
	Begin
		update Bodega set dblStock = dblStock + @dblStock 
		where strBodega=@strBodega and strCodigo=@strCodigo
	End
else
	insert into Bodega Values(@strCodigo,@strBodega,@dblStock)
GO
/****** Object:  StoredProcedure [dbo].[sp_getComprobantesSoftland]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE proc [dbo].[sp_getComprobantesSoftland]  
as  
set nocount on  
--drop table comprobantes
delete from comprobantes
Insert into Comprobantes  
Select S.CodAux, S.CpbAno, S.cpbNum, S.CpbFec, S.MovNumDocRef as NumFactura, 
--P.A.T. 10/07/2007 -- Agrega Monto DEBE contable
S.MovDebe, 
--(Select Sum(MovDebe) from cmodelo.modelosa.softland.cwmovim Where MovNumDocRef = S.MovNumDocRef and CodAux=S.CodAux and PctCod in ('2-1-03-001', '2-1-03-002', '2-1-03-005' , '2-1-03-011')) as MovDebe, 
S.MovHaber, S.MovGlosa, S.FecPag, S.MtoTotal, S.TtdCod, S.NumDoc as NumCheque, Estado = Case C.cpbEst when 'V' then 'VIGENTE' When 'P' then 'PENDIENTE' when 'N' then 'NULO' else '' end, Tipo = Case C.CpbTip When 'I' then 'INGRESO' when 'E' then 'EGRESO' when 'T' then 'TRASPASO' else '' End
--into Comprobantes
From cmodelo.modelosa.softland.cwmovim as S
left join cmodelo.modelosa.softland.cwcpbte as C 
on s.cpbnum = c.cpbnum
where S.PctCod in ('2-1-03-001', '2-1-03-002', '2-1-03-005' , '2-1-03-011')
set nocount off
GO
/****** Object:  StoredProcedure [dbo].[sp_getComprobantes]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 14/02/2007
VER.: 1.0
*/
CREATE PROC [dbo].[sp_getComprobantes]
@dblModulo NUMERIC,
@dblNumero NUMERIC,
@strProveedor VARCHAR(10)
AS
IF @dblModulo = 0
   SELECT CpbNum, CONVERT(VARCHAR, CpbFec, 103) AS dtmFecha, MovGlosa, MovDebe, MovHaber, Tipo, Estado  
   FROM Comprobantes
   WHERE NumFactura=@dblNumero AND CodAux=@strProveedor
   ORDER BY CpbFec
GO
/****** Object:  StoredProcedure [dbo].[sp_getComprasVSConsumo]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[sp_getComprasVSConsumo]
@strBodega as Char(5)
AS
SELECT D.strCodigo AS Codigo, M.strDescripcion AS Descripcion, M.strUnidad AS Unidad, 
SUM(D.dblCantidad) AS Comprado, SUM(D.dblCantidad*D.dblValor) AS [Total Compras] ,
ISNULL((SELECT SUM(dblCantidad) FROM DetalleVC LEFT JOIN CaratulaVC ON DetalleVC.dblInterno=CaratulaVC.dblInterno WHERE CaratulaVC.strBodega=@strBodega and strCodigo=D.strCodigo GROUP BY strCodigo),0) AS Consumo
FROM Ingreso as I
LEFT JOIN DetalleIngreso as D
ON I.dblNumero = D.dblNumero
LEFT JOIN MaterialCasa AS M
ON D.strCodigo=M.strCodigo
WHERE I.strBodega=@strBodega
GROUP BY D.strCodigo, M.strDescripcion, M.strUnidad
GO
/****** Object:  StoredProcedure [dbo].[sp_getComprasVingresos]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[sp_getComprasVingresos]
@strContrato as Char(5),
@dtmFI as Datetime,
@dtmFT as Datetime
as
Declare @T as Varchar(8000)
set @T = ''
Declare @dblInterno as Numeric
SELECT P.strNombre as strProveedor, C.dblUltima as dblNumero, C.dblNumero as Interno, Sum(D.dblCantidad*D.dblValor) as dblCompra, 0 as dblIngreso
INTO ##PASO
FROM CaratulaOC as C 
Left Join DetalleOrdenC as D On C.dblNumero=D.dblNumero
Left Join Proveedor as P On C.strProveedor=P.strCodigo
Left Join General..Contrato as B On C.strBodega=B.strBodega
where B.strContrato=@strContrato
and C.dtmFecha Between CONVERT(DATETIME, @dtmFI + ' 00:00:00', 101) and CONVERT(DATETIME, @dtmFT + ' 23:59:59', 101)
and C.strestado <> '5'
Group By P.strNombre, C.dblUltima, C.dblNumero
order by P.strNombre, C.dblUltima, C.dblNumero 

INSERT INTO ##PASO
SELECT P.strNombre as strProveedor, C.dblUltima as dblNumero, C.dblNumero as Interno, 0 as dblCompra, isNull(Sum(DI.dblCantidad*DI.dblValor),0) as dblIngreso
FROM CaratulaOC as C 
Left Join Proveedor as P On C.strProveedor=P.strCodigo
Left Join Ingreso as I On I.dblOrdenC=C.dblNumero
Left Join DetalleIngreso as DI On I.dblNumero=DI.dblNumero
Left Join General..Contrato as B On C.strBodega=B.strBodega
where B.strContrato=@strContrato
and C.dtmFecha Between CONVERT(DATETIME, @dtmFI + ' 00:00:01', 101) and CONVERT(DATETIME, @dtmFT + ' 23:59:59', 101)
Group By P.strNombre, C.dblUltima, C.dblNumero
order by P.strNombre, C.dblUltima, C.dblNumero

SELECT strProveedor, dblNumero, Interno, Sum(dblCompra) as dblCompra, isnull(Sum(dblIngreso),0) as dblIngreso, @T as dblMonto, @T as Ingresos, @T as Fechas, @T as Facturas, @T as Guias
INTO ##PASO2
FROM ##PASO
GROUP BY strProveedor, dblNumero, Interno
Order By strProveedor, dblNumero, Interno

Declare Indice01 Cursor For SELECT Interno  FROM ##PASO2
Open Indice01
FETCH NEXT FROM Indice01 Into @dblInterno
WHILE @@FETCH_STATUS = 0
BEGIN
    SET @T=''
    SELECT @T=@T + '<tr><td>' + RTRIM(CAST(CAST(ROUND(Sum(dblCantidad*dblValor),0) AS INT) as VarCHAR)) + '</td></tr>' FROM Ingreso LEFT JOIN DetalleIngreso ON Ingreso.dblNUmero=DetalleIngreso.dblNumero Where dblOrdenC=@dblInterno GROUP BY Ingreso.dblNumero
    Update ##PASO2 SET dblMonto = @T WHERE Interno=@dblInterno
    SET @T=''
    SELECT @T=@T + '<tr><td>' + Cast(dblNum as VarChar(10)) + '</td></tr>' FROM Ingreso Where dblOrdenC=@dblInterno
    Update ##PASO2 SET Ingresos = @T WHERE Interno=@dblInterno
    SET @T=''
    SELECT @T=@T + '<tr><td>' + CONVERT(VarChar, dtmFecha, 103) + '</td></tr>' FROM Ingreso Where dblOrdenC=@dblInterno
    Update ##PASO2 SET Fechas = @T WHERE Interno=@dblInterno
    SET @T=''
    SELECT @T=@T + '<tr><td>' + rtrim(strReferencia) + '</td></tr>' FROM Ingreso Where dblOrdenC=@dblInterno and intTipoDoc=0
    Update ##PASO2 SET Guias = @T WHERE Interno=@dblInterno
    SET @T=''
    SELECT @T=@T + '<tr><td>' + rtrim(strReferencia) + '</td></tr>' FROM Ingreso Where dblOrdenC=@dblInterno and intTipoDoc=1
    Update ##PASO2 SET Facturas = @T WHERE Interno=@dblInterno

    FETCH NEXT FROM Indice01 Into @dblInterno
END

SELECT strProveedor, dblNumero, Interno, dblCompra, dblIngreso, CONVERT(TEXT,dblMonto) AS dblMonto, CONVERT(TEXT, Ingresos) as Ingresos, CONVERT(TEXT, Fechas) as Fechas, CONVERT(TEXT, Facturas) as Facturas, CONVERT(TEXT, Guias) AS Guias FROM ##PASO2

Close Indice01
Deallocate Indice01
Drop Table ##PASO
Drop Table ##PASO2
GO
/****** Object:  StoredProcedure [dbo].[sp_getComparaCantidadMaterial]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 06/11/2007
VER: 1.0
*/
CREATE  PROC [dbo].[sp_getComparaCantidadMaterial]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
IF @dblModulo = 0
	SELECT ISNULL(SUM(DetalleOrdenC.dblCantidad) - SUM(DetalleIngreso.dblCantidad), 0) AS dblCantidad
	FROM DetalleOrdenC INNER JOIN DetalleIngreso ON (DetalleOrdenC.dblNumero = DetalleIngreso.dblNumOC AND DetalleOrdenC.strCodigo = DetalleIngreso.strCodigo)
	WHERE DetalleOrdenC.dblNumero = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getCodigoNoResueltosSM]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 03-11-2006
MODIF: 0
*/
CREATE PROCEDURE [dbo].[sp_getCodigoNoResueltosSM]
@dblNumero NUMERIC,
@dblComoQuery NUMERIC = 0
AS
DECLARE @strCodigo VARCHAR(50), @dblCantidad NUMERIC, @strRetorna VARCHAR(8000)
SET @strRetorna=''
DECLARE Detalle_cursor CURSOR FOR
SELECT strCodigo, dblCantidadAut - ISNULL((SELECT SUM(dblCantidad) FROM DetalleOrdenC WHERE dblNumSol=DetalleSM.dblNumero AND strCodigo=DetalleSM.strCodigo), 0) AS dblCantidad 
FROM DetalleSM WHERE dblNumero=@dblNumero
OPEN Detalle_cursor
FETCH NEXT FROM Detalle_cursor INTO @strCodigo, @dblCantidad
WHILE @@FETCH_STATUS=0 
BEGIN
   IF @dblCantidad>0 SET @strRetorna = @strRetorna + @strCodigo + ', '
   FETCH NEXT FROM Detalle_cursor INTO @strCodigo, @dblCantidad
END
CLOSE Detalle_cursor
DEALLOCATE Detalle_cursor

IF @dblComoQuery=0 RETURN @strRetorna ELSE SELECT @strRetorna AS strRetorna
GO
/****** Object:  StoredProcedure [dbo].[sp_getConsumoMaterialN3]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE    PROCEDURE [dbo].[sp_getConsumoMaterialN3]
/*RFGP*/
@strBodega CHAR(100),
@strPartida CHAR(100),
@strCodigo VARCHAR(50)
AS
SELECT DetalleVC.dblInterno, CaratulaVC.dblNumero, CONVERT(VARCHAR, CaratulaVC.dtmVC, 103) AS dtmFecha, DetalleVC.dblCantidad, Personal.strNombre
FROM DetalleVC INNER JOIN CaratulaVC ON (DetalleVC.dblInterno = CaratulaVC.dblInterno)
LEFT JOIN General..PersonalObras AS Personal ON (CaratulaVC.strSolicita=Personal.strRut)
WHERE CaratulaVC.strBodega=@strBodega AND DetalleVC.strPartida=@strPartida AND DetalleVC.strCodigo=@strCodigo
ORDER BY DetalleVC.dblCantidad DESC
GO
/****** Object:  StoredProcedure [dbo].[sp_EditaOrdenCompra]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
FECHA: 05/01/2008
VER: 2.0
*/
CREATE     PROCEDURE [dbo].[sp_EditaOrdenCompra]
@strUsuario VARCHAR(100),
@dblNumero NUMERIC,
@dblFPago NUMERIC,
@strProveedor CHAR(5),
@strObservacion VARCHAR(1000) = NULL
AS
UPDATE CaratulaOC SET intFPago=@dblFPago, strProveedor=@strProveedor, strObservacion=strObservacion+' '+@strObservacion 
WHERE dblNumero=@dblNumero

DELETE FROM DetalleOrdenC WHERE dblNumero=@dblNumero

INSERT DetalleOrdenC
SELECT @dblNumero, strCodigo, dblCAutorizada, dblValor, NULL, NULL, dblSolicitud, strCCosto, NULL
FROM TMPDetalleOrdenCompra WHERE strUsuario = @strUsuario AND dblModulo = 5

DELETE FROM TMPDetalleOrdenCompra WHERE strUsuario = @strUsuario AND dblModulo = 5
GO
/****** Object:  StoredProcedure [dbo].[sp_DetalleGOC]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 24/10/2006
MODIF: 2
*/
CREATE            PROCEDURE [dbo].[sp_DetalleGOC]
@strModulo VARCHAR(3),
@dblNumero NUMERIC, 
@strUsuario VARCHAR(100),
@strBodega VARCHAR(100) = NULL
AS
DELETE FROM Detalle_TMP WHERE strUsuario=@strUsuario AND strTipoDoc=@strModulo

IF @strModulo='OCA' OR @strModulo='FSM'
   INSERT Detalle_TMP
   SELECT @strUsuario, @strModulo, DetalleSM.strCodigo, NULL, DetalleSM.dblCantidadAut - ISNULL((SELECT SUM(dblCantidad) FROM DetalleOrdenC
   WHERE dblNumSOL=@dblNumero AND strCodigo=DetalleSM.strCodigo GROUP BY strCodigo),0) AS dblCantidadAut, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
   FROM DetalleSM INNER JOIN MaterialCasa 
   ON (DetalleSM.strCodigo = MaterialCasa.strCodigo)
   WHERE DetalleSM.dblNumero=@dblNumero AND DetalleSM.dblCantidadAut > 0
ELSE IF @strModulo='OC'
   INSERT Detalle_TMP
   SELECT @strUsuario, @strModulo, strCodigo, NULL, dblCantidad, dblValor, NULL, dtmInicio, dtmTermino, dblNumSol, NULL, strCCosto, dblFactura
   FROM DetalleOrdenC WHERE DetalleOrdenC.dblNumero=@dblNumero 
ELSE IF @strModulo='GGI'
   	INSERT Detalle_TMP
   	SELECT @strUsuario, @strModulo, DetalleOrdenC.strCodigo, NULL, DetalleOrdenC.dblCantidad - ISNULL((
      SELECT SUM(dblCantidad) FROM DetalleIngreso WHERE dblNumOC=@dblNumero AND strCodigo=DetalleOrdenC.strCodigo GROUP BY strCodigo),0) AS dblCantidad, 
   	DetalleOrdenC.dblValor, NULL, NULL, NULL, NULL, NULL, NULL, NULL 
	FROM DetalleOrdenC INNER JOIN MaterialCasa ON (DetalleOrdenC.strCodigo = MaterialCasa.strCodigo)
   	WHERE DetalleOrdenC.dblNumero=@dblNumero AND DetalleOrdenC.dblCantidad > 0
ELSE IF @strModulo='GD'
   	INSERT Detalle_TMP
   	SELECT @strUsuario, @strModulo, DetalleIngreso.strCodigo, NULL, SUM(DetalleIngreso.dblCantidad) AS dblCantidad, 
   	(SELECT SUM(dblStock) FROM Bodega WHERE strCodigo=DetalleIngreso.strCodigo AND strBodega=@strBodega) AS dblStock,
   	NULL, NULL, NULL, NULL, NULL, NULL, NULL
   	FROM DetalleIngreso INNER JOIN Ingreso ON (DetalleIngreso.dblNumero = Ingreso.dblNumero)
   	WHERE DetalleIngreso.dblNumOC=@dblNumero AND Ingreso.strBodega=@strBodega
   	GROUP BY DetalleIngreso.strCodigo ORDER BY DetalleIngreso.strCodigo
ELSE IF @strModulo='GI'
   	INSERT Detalle_TMP
   	SELECT @strUsuario, @strModulo, strCodigo, NULL, dblCantidad, dblValor, NULL, NULL, NULL, NULL, NULL, NULL, NULL 
   	FROM DetalleIngreso WHERE dblNumero=@dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_ConsultarCorrelativo]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[sp_ConsultarCorrelativo]
@strCodigo AS CHAR(5)
AS
 SELECT * 
 FROM Correlativo 
 WHERE strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_CargarBodega]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: PATRICIO
FECHA: 29/06/2007
VER: ?.?
*/

CREATE   Proc [dbo].[sp_CargarBodega]
@strBodega as Char(5)
As
--Ingresos
Delete From BodegaP
Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)
From DetalleIngreso as D Left Join Ingreso as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strBodega
--Devoluciones
Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)
From DetalleDevolucion as D Left Join Devolucion as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strBodega
--Devolucion Cargos
Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblCantidad)
From DetalleDevolucionCargos as D Left Join CaratulaDevolucionCargos as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strBodega

-- RFGP - 27/06/2007 --
-- PAAT - 02/07/2007 --
IF @strBodega='12001'
BEGIN
Insert Into BodegaP Select D.strCodigo, '12001', Sum(D.dblDevolucion)
From DetalleTerminoBodega as D Left Join CaratulaTerminoBodega as I
On D.dblNumero=I.dblNumero
Group By strCodigo, I.strBodega
END
--
--ELSE
--BEGIN
--Insert Into BodegaP Select D.strCodigo, I.strBodega, Sum(D.dblDevolucion)
--From DetalleTerminoBodega as D Left Join CaratulaTerminoBodega as I
--On D.dblNumero=I.dblNumero
--Where I.strBodega='12001'
--Group By strCodigo, I.strBodega
--END

----------------------

Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)*-1
From DetalleDespacho as D Left Join Despacho as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega and I.intVigente=1
Group By strCodigo, I.strBodega

Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)*-1
From DetalleVC as D Left Join CaratulaVC as I
On D.dblInterno=I.dblInterno
Where I.strBodega=@strBodega
Group By strCodigo, I.strBodega

Insert Into BodegaP Select strCodigo, I.strBodega, Sum(dblcantidad)*-1
From DetalleGuiaCargos as D Left Join CaratulaGuiaCargo as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega
Group By strCodigo, I.strBodega

-- RFGP - 27/06/2007 --
Insert Into BodegaP Select D.strCodigo, I.strBodega, Sum(D.dblStock)*-1
From DetalleTerminoBodega as D Left Join CaratulaTerminoBodega as I
On D.dblNumero=I.dblNumero
Where I.strBodega=@strBodega
Group By strCodigo, I.strBodega
----------------

Delete From Bodega Where strBodega = @strBodega
Insert Into Bodega 
select strCodigo, strBodega, sum(dblCantidad)
from BodegaP
group by strCodigo, strBodega
GO
/****** Object:  StoredProcedure [dbo].[sp_getEstados]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 06-11-2006
MODIF: 0
*/
CREATE          PROCEDURE [dbo].[sp_getEstados]
@strModulo VARCHAR(3),
@dblCalificacion NUMERIC = 0,
@dblNumero NUMERIC = NULL,
@dblNivel NUMERIC = NULL
AS
DECLARE @strSQL VARCHAR(1000)
IF @strModulo='IOC'
BEGIN
   SET @strSQL='SELECT strCodigo, strDetalle FROM General..Tablon 
   WHERE strTabla=''estoc'' AND dblCalificacion>=' + CONVERT(VARCHAR(5), @dblCalificacion) 
   IF @dblNivel=2 SET @strSQL=@strSQL + ' AND strCodigo=''15''' 
   SET @strSQL=@strSQL + ' ORDER BY strCodigo'
   EXEC(@strSQL)
END
ELSE IF @strModulo='HST'
   SELECT Autorizaciones.dtmFecha, CONVERT(VARCHAR, Autorizaciones.dtmFecha, 120) AS dtmFch, Autorizaciones.strAutoriza, Usuarios.nombre, Autorizaciones.strAccion, Estados.strDetalle
   FROM Autorizaciones 
   INNER JOIN General..Usuarios AS Usuarios ON (Autorizaciones.strAutoriza=Usuarios.usuario)
   INNER JOIN General..Tablon AS Estados ON (Autorizaciones.strAccion=Estados.strCodigo) AND (Estados.strTabla='estoc')
   WHERE Autorizaciones.dblNumero=@dblNumero
   ORDER BY Autorizaciones.dtmFecha
ELSE IF @strModulo='GGI'
   SELECT strCodigo, strDetalle FROM General..Tablon WHERE strTabla='estoc' AND strCodigo IN (10, 11)
ELSE IF @strModulo = 'CC'
   SELECT strCodigo, strDetalle FROM General..Tablon WHERE strTabla='estcc' ORDER BY strCodigo
ELSE IF @strModulo = 'HCC' 
   SELECT CONVERT(VARCHAR, Autorizaciones.dtmFecha, 120) AS dtmFch, Autorizaciones.strAutoriza, Usuarios.nombre, Autorizaciones.strAccion, Estados.strDetalle AS strDescEstado
   FROM Autorizaciones 
   INNER JOIN General..Usuarios AS Usuarios ON (Autorizaciones.strAutoriza=Usuarios.usuario)
   INNER JOIN General..Tablon AS Estados ON (Autorizaciones.strAccion=Estados.strCodigo) AND (Estados.strTabla='estcc')
   WHERE Autorizaciones.dblNumero=@dblNumero 
   ORDER BY Autorizaciones.dtmFecha
GO
/****** Object:  StoredProcedure [dbo].[sp_getEntregaCargos]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 13/11/2007
VER: 1.1
*/
CREATE   PROC [dbo].[sp_getEntregaCargos]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@dtmFInicio VARCHAR(10),
@dtmFTermino VARCHAR(10)
AS
DECLARE @strSQL VARCHAR(2000)

IF @dblModulo = 0
BEGIN
	CREATE TABLE #tmp_tabla (dblNumero NUMERIC NULL, dtmFecha DATETIME NULL, strCodigo VARCHAR(50) NULL, dblIngreso NUMERIC(18, 2) NULL, dblSalida NUMERIC(18, 2) NULL, dblValor NUMERIC NULL, strNombre VARCHAR(100) NULL)
	
	SET @strSQL = 'INSERT #tmp_tabla
	SELECT Ingreso.dblNum, Ingreso.dtmFecha, DetalleIngreso.strCodigo, DetalleIngreso.dblCantidad, 0, DetalleIngreso.dblValor,''''
	FROM Ingreso INNER JOIN DetalleIngreso ON (Ingreso.dblNumero = DetalleIngreso.dblNumero)
	INNER JOIN MaterialCasa ON (DetalleIngreso.strCodigo = MaterialCasa.strCodigo AND MaterialCasa.strFamilia IN (''00004'', ''00005'', ''00006'', ''00011'', ''00012'', ''00013'', ''00030''))
	WHERE Ingreso.intVigente = 1 AND Ingreso.dblEstado <> 5 AND Ingreso.strBodega = ''' + @strBodega + ''''
	IF NOT @dtmFInicio IS NULL
		SET @strSQL = @strSQL + ' AND Ingreso.dtmFecha BETWEEN CONVERT(DATETIME, ''' + @dtmFInicio + ' 00:00:01'', 101) AND CONVERT(DATETIME, ''' + @dtmFTermino + ' 23:59:59'', 101)'
	EXEC(@strSQL)
	
	SET @strSQL = 'INSERT #tmp_tabla
	SELECT dblNumero, dtmFecha, strCodigo, 0, dblRetiro, (select top 1 dblPrecio from HistoricoPrecio where HistoricoPrecio.strCodigo=HistoricoDevolucion.strCodigo and HistoricoPrecio.strBodega=''' + @strBodega + ''' order by Fecha desc), General..PersonalObras.strNombre FROM HistoricoDevolucion LEFT JOIN General..PersonalObras ON (HistoricoDevolucion.strRut=General..PersonalObras.strRut AND General..PersonalObras.strBodega=''' + @strBodega + ''') WHERE dblRetiro > 0 AND Historico.Devolucion.strBodega = ''' + @strBodega + ''''
	IF NOT @dtmFInicio IS NULL
		SET @strSQL = @strSQL + ' AND dtmFecha BETWEEN CONVERT(DATETIME, ''' + @dtmFInicio + ' 00:00:01'', 101) AND CONVERT(DATETIME, ''' + @dtmFTermino + ' 23:59:59'', 101)'
	EXEC(@strSQL)
	
	SELECT CONVERT(VARCHAR, #tmp_tabla.dtmFecha, 103) AS dtmFch, #tmp_tabla.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, #tmp_tabla.dblIngreso, #tmp_tabla.dblSalida, #tmp_tabla.dblValor, #tmp_tabla.strNombre
	FROM #tmp_tabla INNER JOIN MaterialCasa ON (#tmp_tabla.strCodigo = MaterialCasa.strCodigo)
	ORDER BY #tmp_tabla.strCodigo, #tmp_tabla.dtmFecha
	
	DROP TABLE #tmp_tabla	
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getEncargadosCajaChica]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 28/02/2007
VER.: 1.1
*/
CREATE  PROC [dbo].[sp_getEncargadosCajaChica]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strRut VARCHAR(10) = NULL
AS
IF @dblModulo = 0
   SELECT EncargadoCajaChica.strRut, Personal.strNombre, EncargadoCajaChica.dblMonto 
   FROM EncargadoCajaChica INNER JOIN General..PersonalObras AS Personal ON (EncargadoCajaChica.strRut = Personal.strRut)
   WHERE EncargadoCajaChica.dblVigente = 1 AND EncargadoCajaChica.strBodega = @strBodega
GO
/****** Object:  StoredProcedure [dbo].[sp_getDevolucionesPendientes]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 12/02/2008
VER: 1.8
*/
CREATE      PROC [dbo].[sp_getDevolucionesPendientes]
@dblModulo NUMERIC = 0,
@strUsuario VARCHAR(50) = NULL,
@strBodega VARCHAR(50) = NULL,
@strRut VARCHAR(10) = NULL,
@strMaterial VARCHAR(10) = NULL
AS
DECLARE @strSQL VARCHAR(1000)
IF @dblModulo=0
BEGIN
	CREATE TABLE #rut_tmp(strRut VARCHAR(10), strCodigo VARCHAR(50), dtmFEntrega DATETIME NULL, dtmFDevolucion DATETIME NULL, dblDPendiente NUMERIC(18, 2) NULL)
	
	INSERT #rut_tmp
	SELECT DISTINCT HistoricoDevolucion.strRut, HistoricoDevolucion.strCodigo, NULL, NULL, 0
	FROM HistoricoDevolucion INNER JOIN General..PersonalObras AS Personal ON (HistoricoDevolucion.strRut=Personal.strRut)
	WHERE Personal.strBodega = @strBodega AND HistoricoDevolucion.strCodigo = @strMaterial
	ORDER BY HistoricoDevolucion.strRut
	
	UPDATE #rut_tmp
	SET dtmFEntrega = (SELECT TOP 1 dtmFecha FROM HistoricoDevolucion WHERE strRut = #rut_tmp.strRut AND strCodigo = #rut_tmp.strCodigo AND dblDevuelto > 0 AND dblRetiro = 0 ORDER BY dtmFecha DESC)
	FROM #rut_tmp, HistoricoDevolucion
	
	UPDATE #rut_tmp
	SET dtmFDevolucion = (SELECT TOP 1 dtmFecha FROM HistoricoDevolucion WHERE strRut = #rut_tmp.strRut AND strCodigo = #rut_tmp.strCodigo AND dblRetiro > 0 AND dblDevuelto = 0 ORDER BY dtmFecha DESC)
	FROM #rut_tmp, HistoricoDevolucion
	
	UPDATE #rut_tmp
	SET dblDPendiente = (SELECT SUM(dblRetiro)-SUM(dblDevuelto) FROM HistoricoDevolucion WHERE strRut = #rut_tmp.strRut AND strCodigo = #rut_tmp.strCodigo)
	FROM #rut_tmp, HistoricoDevolucion
	
	SELECT DISTINCT #rut_tmp.strRut, Personal.strNombre, #rut_tmp.strCodigo, CONVERT(VARCHAR, #rut_tmp.dtmFEntrega, 103) AS dtmFchEntrega, CONVERT(VARCHAR, #rut_tmp.dtmFDevolucion, 103) AS dtmFchDevolucion, #rut_tmp.dblDPendiente
	FROM #rut_tmp INNER JOIN General..PersonalObras AS Personal ON (#rut_tmp.strRut = Personal.strRut)
	ORDER BY #rut_tmp.strRut
	
	DROP TABLE #rut_tmp
END
ELSE IF @dblModulo=1
   	SELECT HistoricoDevolucion.strRut, SUM(HistoricoDevolucion.dblRetiro) - SUM(HistoricoDevolucion.dblDevuelto) AS dblSaldo
   	FROM HistoricoDevolucion 
   	WHERE HistoricoDevolucion.strRut = @strRut
   	GROUP BY HistoricoDevolucion.strRut
ELSE IF @dblModulo=2
   	SELECT HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion, SUM(HistoricoDevolucion.dblRetiro)-SUM(HistoricoDevolucion.dblDevuelto) AS dblSaldo, CONVERT(VARCHAR, MAX(HistoricoDevolucion.dtmFecha), 103) AS dtmFch
   	FROM HistoricoDevolucion INNER JOIN MaterialCasa ON (HistoricoDevolucion.strCodigo = MaterialCasa.strCodigo)
   	WHERE HistoricoDevolucion.strRut=@strRut
   	GROUP BY HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion
   	HAVING SUM(HistoricoDevolucion.dblRetiro)-SUM(HistoricoDevolucion.dblDevuelto)>0
  	ORDER BY MaterialCasa.strDescripcion
ELSE IF @dblModulo=3
BEGIN
   	DELETE FROM Detalle_TMP WHERE strUsuario=@strUsuario AND strTipoDoc='CV'
   	
   	INSERT Detalle_TMP
   	SELECT @strUsuario, 'CV', HistoricoDevolucion.strCodigo, NULL, SUM(HistoricoDevolucion.dblRetiro)-SUM(HistoricoDevolucion.dblDevuelto), 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL
   	FROM HistoricoDevolucion INNER JOIN MaterialCasa ON (HistoricoDevolucion.strCodigo = MaterialCasa.strCodigo)
   	WHERE HistoricoDevolucion.strRut = @strRut
   	GROUP BY HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion
   	HAVING SUM(HistoricoDevolucion.dblRetiro)-SUM(HistoricoDevolucion.dblDevuelto)>0
   	ORDER BY MaterialCasa.strDescripcion
   	
   	SELECT Detalle_TMP.strCodigo, MaterialCasa.strDescripcion, Detalle_TMP.dblCantidad 
   	FROM Detalle_TMP INNER JOIN MaterialCasa ON (Detalle_TMP.strCodigo = MaterialCasa.strCodigo)
   	WHERE strUsuario=@strUsuario AND strTipoDoc='CV' ORDER BY MaterialCasa.strDescripcion
END
ELSE IF @dblModulo = 4
BEGIN
	SET @strSQL = 'SELECT HistoricoDevolucion.strRut, HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion, SUM(HistoricoDevolucion.dblRetiro)-SUM(HistoricoDevolucion.dblDevuelto) AS dblSaldo, CONVERT(VARCHAR, MAX(HistoricoDevolucion.dtmFecha), 103) AS dtmFch
	FROM HistoricoDevolucion INNER JOIN MaterialCasa ON (HistoricoDevolucion.strCodigo = MaterialCasa.strCodigo)
	INNER JOIN General..PersonalObras AS Personal ON (HistoricoDevolucion.strRut = Personal.strRut AND Personal.strBodega = ''' + @strBodega + ''') 
	WHERE HistoricoDevolucion.strBodega = ''' + @strBodega + ''' AND HistoricoDevolucion.strRut = ''' + @strRut + ''''
	IF @strMaterial <> '' SET @strSQL = @strSQL + ' AND HistoricoDevolucion.strCodigo = ''' + @strMaterial + ''''
	SET @strSQL = @strSQL + ' GROUP BY HistoricoDevolucion.strRut, HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion
	HAVING SUM(HistoricoDevolucion.dblRetiro)-SUM(HistoricoDevolucion.dblDevuelto)>0
	ORDER BY HistoricoDevolucion.strRut, MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 5
BEGIN
	SET @strSQL = 'SELECT HistoricoDevolucion.strRut, Personal.strNombre, HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion, SUM(HistoricoDevolucion.dblRetiro) - SUM(HistoricoDevolucion.dblDevuelto) AS dblSaldo, CONVERT(VARCHAR, MAX(HistoricoDevolucion.dtmFecha), 103) AS dtmFch
	FROM HistoricoDevolucion INNER JOIN MaterialCasa ON (HistoricoDevolucion.strCodigo = MaterialCasa.strCodigo)
	INNER JOIN General..PersonalObras AS Personal ON (HistoricoDevolucion.strRut = Personal.strRut AND Personal.strBodega = ''' + @strBodega + ''') 
	WHERE Personal.strBodega = ''' + @strBodega + ''''
	IF @strMaterial <> '' SET @strSQL = @strSQL + ' AND HistoricoDevolucion.strCodigo = ''' + @strMaterial + ''''
	SET @strSQL = @strSQL + 'GROUP BY HistoricoDevolucion.strRut, Personal.strNombre, HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion
	HAVING SUM(HistoricoDevolucion.dblRetiro) - SUM(HistoricoDevolucion.dblDevuelto) > 0
	ORDER BY Personal.strNombre, MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 6
	SELECT CASE HistoricoDevolucion.dblDevuelto WHEN 0 THEN HistoricoDevolucion.dblNumero

	ELSE (SELECT CaratulaDevolucionCargos.dblNum FROM CaratulaDevolucionCargos WHERE dblNumero = HistoricoDevolucion.dblNumero)

	END AS dblNumero, Personal.strNombre, HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion, HistoricoDevolucion.dblRetiro, 
	HistoricoDevolucion.dblDevuelto, CONVERT(VARCHAR, HistoricoDevolucion.dtmFecha, 103) AS dtmFch 
	FROM HistoricoDevolucion INNER JOIN General..PersonalObras AS Personal ON (HistoricoDevolucion.strRut = Personal.strRut AND Personal.strBodega = @strBodega)
	INNER JOIN MaterialCasa ON (HistoricoDevolucion.strCodigo = MaterialCasa.strCodigo)
	WHERE NOT HistoricoDevolucion.dtmFecha IS NULL AND HistoricoDevolucion.strBodega = @strBodega AND HistoricoDevolucion.strRut = @strRut
	ORDER BY HistoricoDevolucion.strCodigo, HistoricoDevolucion.dtmFecha DESC
GO
/****** Object:  StoredProcedure [dbo].[sp_getDevoluciones]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
FECHA: 09/01/2008
VER: 1.2
*/
CREATE    PROC [dbo].[sp_getDevoluciones]
@dblModulo NUMERIC,
@dblNumero NUMERIC,
@strBodega VARCHAR(50) = NULL
AS
IF @dblModulo = 0
	SELECT CaratulaDevolucionCargos.dblNumero, CaratulaDevolucionCargos.dblNum, CONVERT(VARCHAR, CaratulaDevolucionCargos.dtmFecha, 103) AS dtmFecha, CaratulaDevolucionCargos.strCargo, 
	Personal.strNombre, CaratulaDevolucionCargos.strBodega, Bodegas.strDetalle AS strDescBodega, CorrelativoDoc.strUsuario, Usuarios.nombre AS strNombUsuario
	FROM CaratulaDevolucionCargos INNER JOIN General..PersonalObras AS Personal ON (CaratulaDevolucionCargos.strCargo = Personal.strRut)
	INNER JOIN General..Tablon AS Bodegas ON (Personal.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	LEFT JOIN CorrelativoDoc ON (CaratulaDevolucionCargos.dblNumero = CorrelativoDoc.dblNumero AND CorrelativoDoc.strTipoDoc = 'DC')
	LEFT JOIN General..Usuarios AS Usuarios ON (CorrelativoDoc.strUsuario = Usuarios.usuario)
	WHERE CaratulaDevolucionCargos.dblNumero = @dblNumero
ELSE IF @dblModulo = 1
	SELECT CaratulaDevolucionCargos.dblNumero, CaratulaDevolucionCargos.dblNum, CONVERT(VARCHAR, CaratulaDevolucionCargos.dtmFecha, 103) AS dtmFecha, CaratulaDevolucionCargos.strCargo, 
	Personal.strNombre, CaratulaDevolucionCargos.strBodega, Bodegas.strDetalle AS strDescBodega, CorrelativoDoc.strUsuario, Usuarios.nombre AS strNombUsuario
	FROM CaratulaDevolucionCargos INNER JOIN General..PersonalObras AS Personal ON (CaratulaDevolucionCargos.strCargo = Personal.strRut AND Personal.strBodega = CaratulaDevolucionCargos.strBodega)
	INNER JOIN General..Tablon AS Bodegas ON (Personal.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	LEFT JOIN CorrelativoDoc ON (CaratulaDevolucionCargos.dblNumero = CorrelativoDoc.dblNumero AND CorrelativoDoc.strTipoDoc = 'DC')
	LEFT JOIN General..Usuarios AS Usuarios ON (CorrelativoDoc.strUsuario = Usuarios.usuario)
	WHERE CaratulaDevolucionCargos.strBodega = @strBodega AND CaratulaDevolucionCargos.dblNum = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleValeConsumo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getDetalleValeConsumo] 
@dblInterno NUMERIC(18)
AS
SELECT DetalleVC.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleVC.strPartida, DetalleVC.dblCantidad
FROM DetalleVC INNER JOIN MaterialCasa ON (DetalleVC.strCodigo = MaterialCasa.strCodigo)
WHERE DetalleVC.dblInterno=@dblInterno ORDER BY DetalleVC.strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleTMP]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE           PROCEDURE [dbo].[sp_getDetalleTMP]
/*RFGP*/
@strUsuario VARCHAR(50),
@strTipoDoc CHAR(5)
AS
SELECT Detalle_TMP.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, 
CONVERT(VARCHAR, Detalle_TMP.dtmFchIni, 103) AS dtmFchIni, CONVERT(VARCHAR, Detalle_TMP.dtmFchTer, 103) AS dtmFchTer,
Detalle_TMP.strPartida, Detalle_TMP.dblNumSol, Detalle_TMP.dblCantidad, Detalle_TMP.dblValor, Detalle_TMP.dblNumSol, Detalle_TMP.dblNumOC,  CaratulaOC.dblUltima 
FROM Detalle_TMP INNER JOIN MaterialCasa ON (Detalle_TMP.strCodigo=MaterialCasa.strCodigo) 
LEFT JOIN CaratulaOC ON (CaratulaOC.dblNumero=Detalle_TMP.dblNumOC)
WHERE Detalle_TMP.strUsuario=@strUsuario AND Detalle_TMP.strTipoDoc=@strTipoDoc
ORDER BY Detalle_TMP.dblNumFil, MaterialCasa.strDescripcion
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleTerminoBodega]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 28/06/2007
VER: 1.0
*/
CREATE PROC [dbo].[sp_getDetalleTerminoBodega]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
IF @dblModulo = 0 
	SELECT DetalleTerminoBodega.dblNumero, DetalleTerminoBodega.strCodigo, MaterialCasa.strDescripcion, DetalleTerminoBodega.dblStock, DetalleTerminoBodega.dblDevolucion, DetalleTerminoBodega.strObservacion
	FROM DetalleTerminoBodega INNER JOIN MaterialCasa ON (DetalleTerminoBodega.strCodigo = MaterialCasa.strCodigo)
	WHERE DetalleTerminoBodega.dblNumero = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleSolicitudMaterial]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 28/01/2008
VER: 2.1
*/
CREATE            PROCEDURE [dbo].[sp_getDetalleSolicitudMaterial]
@dblModulo NUMERIC,
@dblNumero NUMERIC(18) = NULL,
@strUsuario VARCHAR(50) = NULL
AS
IF @dblModulo = 0
   	SELECT DetalleSM.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleSM.dblCantidad, DetalleSM.dblCantidadAut - 
   	ISNULL((SELECT SUM(dblCantidad) FROM DetalleOrdenC WHERE dblNumSol=@dblNumero and strCodigo=DetalleSM.strCodigo GROUP BY strCodigo),0) AS dblCantidadAut
   	FROM DetalleSM INNER JOIN MaterialCasa ON (DetalleSM.strCodigo = MaterialCasa.strCodigo)
   	WHERE DetalleSM.dblNumero=@dblNumero AND DetalleSM.dblCantidadAut > 0 ORDER BY MaterialCasa.strDescripcion
ELSE IF @dblModulo = 1
   	SELECT DetalleSM.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleSM.dblCantidad, DetalleSM.dblCantidadAut,
   	(SELECT TOP 1 dblPrecio FROM HistoricoPrecio WHERE strBodega=CaratulaSM.strBodega AND strCodigo=DetalleSM.strCodigo ORDER BY Fecha DESC) AS dblPrecio
   	FROM DetalleSM INNER JOIN CaratulaSM ON (CaratulaSM.dblNumero = DetalleSM.dblNumero)
   	INNER JOIN MaterialCasa ON (DetalleSM.strCodigo = MaterialCasa.strCodigo)
   	WHERE DetalleSM.dblNumero=@dblNumero
ELSE IF @dblModulo = 2
BEGIN
	DELETE FROM TMPSolicitudMateriales WHERE strUsuario = @strUsuario

	INSERT TMPSolicitudMateriales
	SELECT DISTINCT @strUsuario, DetalleSM.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleSM.dblCantidad, CASE DetalleSM.dblCantidadAut WHEN 0 THEN DetalleSM.dblCantidad ELSE DetalleSM.dblCantidadAut END,
   	(SELECT TOP 1 dblPrecio FROM HistoricoPrecio WHERE strBodega=CaratulaSM.strBodega AND strCodigo=DetalleSM.strCodigo ORDER BY Fecha DESC) AS dblPrecio
   	FROM DetalleSM INNER JOIN CaratulaSM ON (CaratulaSM.dblNumero = DetalleSM.dblNumero)
	INNER JOIN MaterialCasa ON (DetalleSM.strCodigo = MaterialCasa.strCodigo)
   	WHERE DetalleSM.dblNumero = @dblNumero
END
ELSE IF @dblModulo = 3
	SELECT * FROM TMPSolicitudMateriales WHERE strUsuario = @strUsuario
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleSolicitudDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 27/09/2007
*/
CREATE PROC [dbo].[sp_getDetalleSolicitudDevolucion]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
IF @dblModulo = 0
	SELECT DetalleDespacho.dblNumero, DetalleDespacho.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleDespacho.dblCantidad
	FROM DetalleDespacho INNER JOIN MaterialCasa ON (DetalleDespacho.strCodigo = MaterialCasa.strCodigo)
	WHERE DetalleDespacho.dblNumero = @dblNumero ORDER BY DetalleDespacho.strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleSeguimiento]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getDetalleSeguimiento]
@dblSolicitud NUMERIC
AS
SELECT DetalleSM.strCodigo, MaterialCasa.strDescripcion, DetalleSM.dblCantidad, DetalleSM.dblCantidadAut,
ISNULL((SELECT SUM(dblCantidad) FROM DetalleOrdenC WHERE dblNumSOL=@dblSolicitud AND 
strCodigo=DetalleSM.strCodigo GROUP BY strCodigo),0) AS dblCantCompra
FROM DetalleSM INNER JOIN MaterialCasa ON (DetalleSM.strCodigo = MaterialCasa.strCodigo)
WHERE DetalleSM.dblNumero=@dblSolicitud
ORDER BY MaterialCasa.strDescripcion
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleOrdenCompra]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 25/01/2008
VER.: 2.3
*/
CREATE    PROCEDURE [dbo].[sp_getDetalleOrdenCompra]
@dblModulo NUMERIC,
@dblInterno NUMERIC = NULL,
@strOrdenes VARCHAR(1000) = NULL
AS
DECLARE @strSQL VARCHAR(2000)
SET @strSQL = ''
IF @dblModulo = 0
	SELECT DetalleOrdenC.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, CONVERT(VARCHAR, DetalleOrdenC.dtmInicio, 103) AS dtmFchIni, CONVERT(VARCHAR, DetalleOrdenC.dtmTermino, 103) AS dtmFchTer,
	DetalleOrdenC.dblCantidad, DetalleOrdenC.dblValor, DetalleOrdenC.dblNumSol, DetalleOrdenC.strCCosto, Equipos.strDescripcion AS strEquipo, CCosto.strPatente
	FROM DetalleOrdenC INNER JOIN MaterialCasa ON (DetalleOrdenC.strCodigo = MaterialCasa.strCodigo)
	LEFT JOIN Operaciones..CentrosCosto AS CCosto ON (DetalleOrdenC.strCCosto = CCosto.strCCosto)
	LEFT JOIN Operaciones..Equipo AS Equipos ON (CCosto.dblEquipo = Equipos.Id)
	WHERE DetalleOrdenC.dblNumero = @dblInterno ORDER BY MaterialCasa.strDescripcion
ELSE IF @dblModulo = 1
BEGIN
	SET @strSQL = 'SELECT DetalleOrdenC.strCodigo, MaterialCasa.strDescripcion, SUM(DetalleOrdenC.dblCantidad) AS dblCantidad, MAX(DetalleOrdenC.dblValor) AS dblValor
	FROM DetalleOrdenC INNER JOIN MaterialCasa ON (DetalleOrdenC.strCodigo = MaterialCasa.strCodigo)
	WHERE DetalleOrdenC.dblNumero IN (' + @strOrdenes + ') 
	GROUP BY DetalleOrdenC.strCodigo, MaterialCasa.strDescripcion
	ORDER BY DetalleOrdenC.strCodigo, MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleGuiaIngreso]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 16-11-2006
MODIF: 0
*/
CREATE PROCEDURE [dbo].[sp_getDetalleGuiaIngreso]
@dblNumero NUMERIC
AS
SELECT DetalleIngreso.dblNumero, DetalleIngreso.strCodigo, MaterialCasa.strDescripcion, DetalleIngreso.dblCantidad, 
DetalleIngreso.dblValor, DetalleIngreso.dblNumOC
FROM DetalleIngreso INNER JOIN MaterialCasa ON (DetalleIngreso.strCodigo=MaterialCasa.strCodigo)
WHERE DetalleIngreso.dblNumero=@dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleGuiaDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 24/11/2007
VER: 1.1
*/
CREATE  PROC [dbo].[sp_getDetalleGuiaDevolucion]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
SELECT DetalleDevolucion.dblNumero, DetalleDevolucion.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleDevolucion.dblCantidad 
FROM DetalleDevolucion INNER JOIN MaterialCasa ON (DetalleDevolucion.strCodigo = MaterialCasa.strCodigo)
WHERE DetalleDevolucion.dblNumero=@dblNumero
ORDER BY MaterialCasa.strDescripcion
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleGuiaCargo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/11/2007
VER: 1.0
*/
CREATE  PROCEDURE [dbo].[sp_getDetalleGuiaCargo]
@dblNumero NUMERIC
AS
SELECT DetalleGuiaCargos.strCargo, DetalleGuiaCargos.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleGuiaCargos.dblCantidad
FROM DetalleGuiaCargos INNER JOIN MaterialCasa ON (DetalleGuiaCargos.strCodigo = MaterialCasa.strCodigo)
WHERE DetalleGuiaCargos.dblNumero = @dblNumero
ORDER BY MaterialCasa.strDescripcion
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleFacturaInterna]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 21/01/2008
VER: 1.0
*/
CREATE PROC [dbo].[sp_getDetalleFacturaInterna]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
IF @dblModulo = 0
	SELECT DetalleFacturaInterna.strCodigo, MaterialCasa.strDescripcion, CONVERT(VARCHAR, DetalleFacturaInterna.dtmFInicio, 103) AS dtmFInicio, CONVERT(VARCHAR, DetalleFacturaInterna.dtmFTermino, 103) AS dtmFTermino, DetalleFacturaInterna.strCCosto, DetalleFacturaInterna.dblCantidad, DetalleFacturaInterna.dblPrecio, (DetalleFacturaInterna.dblCantidad * DetalleFacturaInterna.dblPrecio) AS dblTotal
	FROM DetalleFacturaInterna INNER JOIN MaterialCasa ON (DetalleFacturaInterna.strCodigo = MaterialCasa.strCodigo)
	WHERE DetalleFacturaInterna.dblNumero = @dblNumero
	ORDER BY MaterialCasa.strDescripcion
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleDevoluciones]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 15/01/2007
MODIF: 0
*/
CREATE PROC [dbo].[sp_getDetalleDevoluciones]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
SELECT DetalleDevolucionCargos.dblNumero, DetalleDevolucionCargos.strCodigo, MaterialCasa.strDescripcion, DetalleDevolucionCargos.dblCantidad
FROM DetalleDevolucionCargos INNER JOIN MaterialCasa ON (DetalleDevolucionCargos.strCodigo=MaterialCasa.strCodigo)
WHERE dblNumero=@dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleDespacho]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 23/10/2007
VER: 1.2
*/
CREATE  PROCEDURE [dbo].[sp_getDetalleDespacho]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
IF @dblModulo = 0
	SELECT DetalleDespacho.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleDespacho.dblCantidad
	FROM DetalleDespacho INNER JOIN MaterialCasa ON (DetalleDespacho.strCodigo = MaterialCasa.strCodigo)
	WHERE DetalleDespacho.dblNumero=@dblNumero
ELSE IF @dblModulo = 1
	SELECT DetalleDespacho.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleDespacho.dblCantidad
	FROM DetalleDespacho INNER JOIN MaterialCasa ON (DetalleDespacho.strCodigo = MaterialCasa.strCodigo)
	WHERE DetalleDespacho.dblNumero = @dblNumero AND DetalleDespacho.dblCantidad > 0
GO
/****** Object:  StoredProcedure [dbo].[sp_getDetalleCajaChica]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 02/03/2007
VER.: 1.0
RECUPERADO: 30/03/2007
*/
CREATE  PROC [dbo].[sp_getDetalleCajaChica]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
IF @dblModulo = 0
   SELECT DetalleCajaC.dblNumero, DetalleCajaC.strCodigo, MaterialCasa.strDescripcion, DetalleCajaC.dblTipoDoc, DetalleCajaC.dblNumDoc, 
   DetalleCajaC.dblNumOC, CaratulaOC.dblUltima, DetalleCajaC.dblCantidad, DetalleCajaC.dblValor
   FROM DetalleCajaC INNER JOIN MaterialCasa ON (DetalleCajaC.strCodigo = MaterialCasa.strCodigo)
   LEFT JOIN CaratulaOC ON (DetalleCajaC.dblNumOC = CaratulaOC.dblNumero)
   WHERE DetalleCajaC.dblNumero = @dblNumero
ELSE IF @dblModulo = 1
   SELECT DetalleCajaC.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, DetalleCajaC.dblTipoDoc, DetalleCajaC.dblCantidad, DetalleCajaC.dblValor
   FROM DetalleCajaC INNER JOIN MaterialCasa ON (DetalleCajaC.strCodigo = MaterialCasa.strCodigo)
   WHERE DetalleCajaC.dblNumero = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getDatosUsuario]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 08-11-2006
MODIF: 1
*/
CREATE   PROCEDURE [dbo].[sp_getDatosUsuario]
@strModulo VARCHAR(3),
@dblNumero NUMERIC = NULL,
@strUsuario VARCHAR(100) = NULL
AS
IF @strModulo='OCA'
   SELECT * FROM General..Usuarios
   WHERE Usuario=(SELECT ISNULL(STUFF(strUsuario,CHARINDEX('-',strUsuario),CHARINDEX('-',strUsuario),''),strUsuario)
   FROM Correlativodoc
   WHERE dblNumero=@dblNumero)
ELSE IF @strModulo='GNR'
   SELECT * FROM General..Usuarios WHERE usuario=@strUsuario
ELSE IF @strModulo = 'GI'
   SELECT Usuarios.* 
   FROM General..Usuarios AS Usuarios INNER JOIN Autorizaciones ON (Usuarios.usuario = Autorizaciones.strAutoriza AND Autorizaciones.strTipoDocto = 'GI')
   WHERE Autorizaciones.dblNumero=@dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getCorrelativo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 01/03/2007
VER.: 2.0
*/
CREATE PROCEDURE [dbo].[sp_getCorrelativo] 
@strUsuario AS VARCHAR(100),
@strTDoc AS CHAR(5),
@dblQuery NUMERIC = NULL
AS
INSERT INTO CorrelativoDoc(strUsuario, strTipoDoc, dtmFecha) 
VALUES(@strUsuario, @strTDoc, GETDATE())

DECLARE @dblNumero NUMERIC
SET @dblNumero = 0
DECLARE num_cursor CURSOR FOR
SELECT MAX(dblNumero) AS dblNumero FROM CorrelativoDoc WHERE strUsuario=@strUsuario AND strTipoDoc=@strTDoc
OPEN num_cursor
FETCH NEXT FROM num_cursor INTO @dblNumero
IF @@FETCH_STATUS<>0 SET @dblNumero = 0
CLOSE num_cursor
DEALLOCATE num_cursor

IF @dblQuery IS NULL SELECT @dblNumero AS dblNumero ELSE RETURN @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getTerminoBodega]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 28/06/2007
VER: 1.0
*/
create  PROC [dbo].[sp_getTerminoBodega]
@dblModulo NUMERIC,
@dblNumero NUMERIC
AS
IF @dblModulo = 0 
	SELECT CaratulaTerminoBodega.dblNumero, CONVERT(VARCHAR, CaratulaTerminoBodega.dtmFecha, 103) AS dtmFch, CaratulaTerminoBodega.strBodega, Bodegas.strDetalle AS strDescBodega, CaratulaTerminoBodega.strUsuario, Usuarios.nombre AS strNombre
	FROM CaratulaTerminoBodega INNER JOIN General..Usuarios AS Usuarios ON (CaratulaTerminoBodega.strUsuario = Usuarios.usuario)
	INNER JOIN 	General..Tablon AS Bodegas ON (CaratulaTerminoBodega.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	WHERE CaratulaTerminoBodega.dblNumero = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getStockReal]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getStockReal]
/*RFGP*/
@strBodega CHAR(5),
@strCodigo VARCHAR(50)
AS
DECLARE @dblStock NUMERIC(18,2)
DECLARE Stock_cursor CURSOR FOR
SELECT Bodega.dblStock FROM Bodega INNER JOIN MaterialCasa ON (Bodega.strCodigo=MaterialCasa.strCodigo)
WHERE Bodega.strBodega=@strBodega AND MaterialCasa.strCodigo=@strCodigo AND Bodega.dblStock>0
OPEN Stock_cursor
FETCH NEXT FROM Stock_cursor INTO @dblStock
IF @@FETCH_STATUS<>0 SET @dblStock=0
CLOSE Stock_cursor
DEALLOCATE Stock_cursor
RETURN @dblStock
GO
/****** Object:  StoredProcedure [dbo].[sp_getSolicitudMaterial]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 11/03/2008
VER.: 1.6
*/
CREATE PROCEDURE [dbo].[sp_getSolicitudMaterial]
@dblModulo NUMERIC,
@dblNumero NUMERIC = NULL,
@strEstado VARCHAR(2) = NULL,
@strBodega VARCHAR(100) = NULL
AS
IF @dblModulo = 0 --'GOC'  --Generacion Automatica de Orden de Compra
BEGIN
   IF @dblNumero IS NULL
      SELECT Contrato.strDetalle, Contrato.strContrato, CaratulaSM.dblNumero, CaratulaSM.dblNum AS dblNumUsu, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, 
	CaratulaSM.strObservacion, CaratulaSM.strCargo, CaratulaSM.strBodega, CaratulaSM.strEstado, Estados.strDetalle AS strDescEstado, 
	(SELECT TOP 1 CONVERT(VARCHAR, dtmFecha, 103) FROM Autorizaciones WHERE strAccion = '2' AND dblNumero = CaratulaSM.dblNumero ORDER BY YEAR(dtmFecha) DESC, MONTH(dtmFecha) DESC, DAY(dtmFecha) DESC) AS dtmFecha
      FROM CaratulaSM INNER JOIN General..Contrato AS Contrato ON (Contrato.strCodigo = CaratulaSM.strCargo) 
      INNER JOIN General..Tablon As Estados ON (CaratulaSM.strEstado = Estados.strCodigo AND Estados.strTabla = 'estoc')
      WHERE CaratulaSM.strEstado IN ('2', '3', '6')
      ORDER BY CaratulaSM.strBodega, CaratulaSM.dblNumero DESC
   ELSE
      SELECT Contrato.strDetalle, Contrato.strContrato, CaratulaSM.dblNumero, CaratulaSM.dblNum AS dblNumUsu, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, Usuarios.nombre, CaratulaSM.dblGuia,
      CaratulaSM.strObservacion, CaratulaSM.strCargo, Cargos.strDetalle AS strDescCargo, CaratulaSM.strBodega, Bodegas.strDetalle AS strDescBodega, CaratulaSM.strEstado, Estados.strDetalle AS strDescEstado, 
      (SELECT TOP 1 CONVERT(VARCHAR, dtmFecha, 103) FROM Autorizaciones WHERE strAccion = '2' AND dblNumero = CaratulaSM.dblNumero ORDER BY YEAR(dtmFecha) DESC, MONTH(dtmFecha) DESC, DAY(dtmFecha) DESC) AS dtmFecha,
      Observaciones.strObservacion AS strObsAdmin
      FROM CaratulaSM INNER JOIN General..Contrato AS Contrato ON (Contrato.strCodigo = CaratulaSM.strCargo) 
      INNER JOIN General..Tablon As Estados ON (CaratulaSM.strEstado = Estados.strCodigo AND Estados.strTabla = 'estoc')
      INNER JOIN CorrelativoDoc ON (CaratulaSM.dblNumero = CorrelativoDoc.dblNumero)
      INNER JOIN General..Tablon As Bodegas ON (CaratulaSM.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
      INNER JOIN General..Contrato As Cargos ON (CaratulaSM.strCargo = Cargos.strCodigo)
      INNER JOIN General..Usuarios AS Usuarios ON (CorrelativoDoc.strUsuario = Usuarios.usuario) 
      LEFT JOIN Observaciones ON (CaratulaSM.dblNumero = Observaciones.dblNumero AND Observaciones.strTipoDoc='SM')
      WHERE CaratulaSM.dblNumero = @dblNumero
END
ELSE IF @dblModulo = 1 --'SSM' --Seguimiento de Solicitudes de Material
BEGIN
	IF @strEstado = 'T'
		SELECT Contrato.strDetalle, CaratulaSM.dblNumero, CaratulaSM.dblNum AS dblNumUsu, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, 
		CaratulaSM.strObservacion, CaratulaSM.strBodega, CaratulaSM.strEstado, Estado.strDetalle AS strDescEst, CorrelativoDoc.strUsuario,
		(SELECT CONVERT(VARCHAR, MAX(dtmFecha), 103) FROM Autorizaciones WHERE dblNumero = CaratulaSM.dblNumero AND strAccion = '2') AS dtmFecha
		FROM CaratulaSM INNER JOIN General..Contrato AS Contrato ON (Contrato.strCodigo = CaratulaSM.strCargo) 
		INNER JOIN CorrelativoDoc ON (CaratulaSM.dblNumero = CorrelativoDoc.dblNumero)
		INNER JOIN General..Tablon AS Estado ON (CaratulaSM.strEstado = Estado.strCodigo) AND (Estado.strTabla = 'estoc')
		WHERE CaratulaSM.strBodega = CONVERT(VARCHAR(100), @dblNumero)
		ORDER BY CaratulaSM.dblNumero DESC
	ELSE
		SELECT Contrato.strDetalle, CaratulaSM.dblNumero, CaratulaSM.dblNum AS dblNumUsu, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, 
		CaratulaSM.strObservacion, CaratulaSM.strBodega, CaratulaSM.strEstado, Estado.strDetalle AS strDescEst, CorrelativoDoc.strUsuario, 
		(SELECT CONVERT(VARCHAR, MAX(dtmFecha), 103) FROM Autorizaciones WHERE dblNumero = CaratulaSM.dblNumero AND strAccion = '2') AS dtmFecha
		FROM CaratulaSM INNER JOIN General..Contrato AS Contrato ON (Contrato.strCodigo = CaratulaSM.strCargo) 
		INNER JOIN CorrelativoDoc ON (caratulaSM.dblNumero = CorrelativoDoc.dblNumero)
		INNER JOIN General..Tablon AS Estado ON (CaratulaSM.strEstado = Estado.strCodigo) AND (Estado.strTabla = 'estoc')
		WHERE CaratulaSM.strBodega = CONVERT(VARCHAR(100), @dblNumero) AND CaratulaSM.strEstado = @strEstado 
		ORDER BY CaratulaSM.dblNumero DESC
END
ELSE IF @dblModulo = 2 --'ASM' --Autorizacion de Solicitudes de Material
	SELECT Cargo.strDetalle AS strCargo, CaratulaSM.dblNumero, CaratulaSM.dblNum AS dblNumUsu, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmFecha, 
	CaratulaSM.strObservacion, Estados.strDetalle AS strEstado
	FROM CaratulaSM INNER JOIN General..Tablon AS Estados ON (Estados.strTabla = 'estoc' AND CaratulaSM.strEstado = Estados.strCodigo)
	INNER JOIN General..Contrato AS Cargo ON (Cargo.strCodigo = CaratulaSM.strCargo)
	WHERE CaratulaSM.strEstado = @strEstado AND CaratulaSM.strBodega IN (SELECT strBodega FROM General..BodegaUsuario WHERE strUsuario = @strBodega)
	ORDER BY CaratulaSM.dtmSolicitud DESC, CaratulaSM.dblNumero DESC
ELSE IF @dblModulo = 3 --'NUM' -- Busqueda de Documentos
	SELECT dblNumero FROM CaratulaSM WHERE strBodega = @strBodega AND dblNum = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getSolicitudDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 05/12/2007
VER: 1.3
*/
CREATE    PROC [dbo].[sp_getSolicitudDevolucion]
@dblModulo NUMERIC,
@strBodega VARCHAR(50) = NULL,
@dblNumero NUMERIC = NULL
AS
IF @dblModulo = 0
	SELECT DISTINCT Despacho.dblNumero, CONVERT(VARCHAR, Despacho.dtmDespacho,  103) AS dtmFecha, Bodegas.strDetalle AS strDescBodega, Personal.strNombre AS strCargo, Usuario.nombre AS strSolicitante, Observaciones.strObservacion
	FROM Despacho INNER JOIN General..Tablon AS Bodegas ON (Despacho.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	INNER JOIN General..Movil AS Moviles ON (Despacho.strMovil = Moviles.strMovil )
	INNER JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut)
	LEFT JOIN CorrelativoDoc ON (Despacho.dblNumero = CorrelativoDoc.dblCorrelativoUsu)
	LEFT JOIN General..Usuarios AS Usuario ON (CorrelativoDoc.strUsuario = Usuario.usuario)
	LEFT JOIN Observaciones ON (Despacho.dblNumero = Observaciones.dblNumero)
	WHERE Despacho.intVigente = 2 AND Despacho.strBodega = @strBodega
	ORDER BY Despacho.dtmFecha
ELSE IF @dblModulo = 1
	SELECT DISTINCT Despacho.dblNumero, CONVERT(VARCHAR, Despacho.dtmDespacho,  103) AS dtmFecha, Bodegas.strDetalle AS strDescBodega, Personal.strNombre AS strCargo, Usuario.nombre AS strSolicitante, Observaciones.strObservacion
	FROM Despacho INNER JOIN General..Tablon AS Bodegas ON (Despacho.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	INNER JOIN General..Movil AS Moviles ON (Despacho.strMovil = Moviles.strMovil )
	INNER JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut)
	LEFT JOIN CorrelativoDoc ON (Despacho.dblNumero = CorrelativoDoc.dblCorrelativoUsu)
	LEFT JOIN General..Usuarios AS Usuario ON (CorrelativoDoc.strUsuario = Usuario.usuario)
	LEFT JOIN Observaciones ON (Despacho.dblNumero = Observaciones.dblNumero)
	WHERE Despacho.dblNumero = @dblNumero
ELSE IF @dblModulo = 2
	SELECT DISTINCT Despacho.dblNumero, CONVERT(VARCHAR, Despacho.dtmDespacho,  103) AS dtmFecha, Bodegas.strDetalle AS strDescBodega, Personal.strNombre AS strCargo
	FROM Despacho INNER JOIN General..Tablon AS Bodegas ON (Despacho.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
	INNER JOIN General..Movil AS Moviles ON (Despacho.strMovil = Moviles.strMovil )
	INNER JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut)
	WHERE Despacho.strBodega = @strBodega AND Despacho.dblNumero = @dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_getResumenConsumo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 26/06/2007
VER: 1.2
*/
CREATE PROC [dbo].[sp_getResumenConsumo]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@dblCol NUMERIC,
@strOrden VARCHAR(5)
AS
DECLARE @strSQL VARCHAR(8000), @strOrderBy VARCHAR(50)
SET @strSQL=''
SET @strOrderBy=''

IF @dblModulo=0
BEGIN
   	CREATE TABLE #Resumen (strCodigo VARCHAR(50) NULL, dblCompras NUMERIC(18, 2) NULL, dblConsumos NUMERIC(18,2) NULL)

   	--INGRESOS--
   	INSERT #Resumen
   	SELECT DetalleIngreso.strCodigo, SUM(DetalleIngreso.dblCantidad), 0
   	FROM Ingreso INNER JOIN DetalleIngreso ON (Ingreso.dblNumero = DetalleIngreso.dblNumero)
   	WHERE (Ingreso.dblEstado<>1 OR Ingreso.dblEstado IS NULL) AND  Ingreso.strBodega=@strBodega GROUP BY DetalleIngreso.strCodigo	
	
   	INSERT #Resumen
   	SELECT DetalleDevolucion.strCodigo, SUM(DetalleDevolucion.dblCantidad), 0
   	FROM Devolucion INNER JOIN DetalleDevolucion ON (Devolucion.dblNumero = DetalleDevolucion.dblNumero)
   	WHERE Devolucion.strBodega=@strBodega GROUP BY DetalleDevolucion.strCodigo

	INSERT #Resumen
   	SELECT DetalleTerminoBodega.strCodigo, SUM(DetalleTerminoBodega.dblDevolucion), 0
   	FROM CaratulaTerminoBodega INNER JOIN DetalleTerminoBodega ON (CaratulaTerminoBodega.dblNumero = DetalleTerminoBodega.dblNumero)
   	WHERE CaratulaTerminoBodega.strBodega=@strBodega GROUP BY DetalleTerminoBodega.strCodigo

   	--EGRESOS--
   	INSERT #Resumen
   	SELECT DetalleVC.strCodigo, 0, SUM(DetalleVC.dblCantidad)
   	FROM CaratulaVC INNER JOIN DetalleVC ON (CaratulaVC.dblInterno = DetalleVC.dblInterno)
   	WHERE CaratulaVC.strBodega=@strBodega GROUP BY DetalleVC.strCodigo
	
   	INSERT #Resumen
   	SELECT DetalleDespacho.strCodigo, 0, SUM(DetalleDespacho.dblCantidad)
   	FROM Despacho INNER JOIN DetalleDespacho ON (Despacho.dblNumero = DetalleDespacho.dblNumero)
   	WHERE Despacho.strBodega=@strBodega GROUP BY DetalleDespacho.strCodigo
	
	INSERT #Resumen
   	SELECT DetalleTerminoBodega.strCodigo, 0, SUM(DetalleTerminoBodega.dblStock)
   	FROM CaratulaTerminoBodega INNER JOIN DetalleTerminoBodega ON (CaratulaTerminoBodega.dblNumero = DetalleTerminoBodega.dblNumero)
   	WHERE CaratulaTerminoBodega.strBodega=@strBodega GROUP BY DetalleTerminoBodega.strCodigo
   
   	IF @strOrden='A' SET @strOrden=' ASC' ELSE SET @strOrden=' DESC'
   	SET @strOrderBy=CASE @dblCol
     	WHEN 2 THEN ' MaterialCasa.strDescripcion' + @strOrden
      	WHEN 4 THEN ' dblCompras' + @strOrden
      	WHEN 5 THEN ' dblConsumos' + @strOrden
      	WHEN 6 THEN ' dblSaldo' + @strOrden
      	ELSE ' dblCompras DESC, dblConsumos DESC, dblSaldo DESC'
   	END
   
   	SET @strSQL='SELECT Resumen.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, SUM(Resumen.dblCompras) AS dblCompras, 
   	SUM(Resumen.dblConsumos) AS dblConsumos, SUM(Resumen.dblCompras) - SUM(Resumen.dblConsumos) AS dblSaldo
   	FROM #Resumen AS Resumen INNER JOIN MaterialCasa ON (Resumen.strCodigo = MaterialCasa.strCodigo)
   	GROUP BY Resumen.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad 
   	ORDER BY'+@strOrderBy
   
   	EXEC(@strSQL)

   	DROP TABLE #Resumen
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getProveedor]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 27/03/2008
VER: 2.1
*/
CREATE PROCEDURE [dbo].[sp_getProveedor]
@dblModulo NUMERIC,
@strTBusq VARCHAR(100) = NULL,
@strCargo VARCHAR(50) = NULL,
@strTexto VARCHAR(50) = NULL
AS
DECLARE @strSQL VARCHAR(1000)
IF @dblModulo = 0
BEGIN
	SET @strSQL = 'SELECT DISTINCT Proveedor.strCodigo, Proveedor.strRut, Proveedor.strNombre, Proveedor.strDireccion, Proveedor.strComuna, Comunas.strDetalle AS Comuna, Proveedor.strTelefono, Proveedor.strFax, Proveedor.strContacto  
	FROM Proveedor LEFT JOIN General..Tablon AS Comunas ON (Proveedor.strComuna=Comunas.strCodigo) AND (Comunas.strTabla=''comun'')
	INNER JOIN CaratulaOC ON (Proveedor.strCodigo = CaratulaOC.strProveedor) WHERE'
	IF @strTBusq = 'C'
		SET @strSQL = @strSQL + ' (Proveedor.strRut LIKE ''' + @strTexto + '%'' OR Proveedor.strNombre LIKE ''%' + @strTexto + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' (Proveedor.strRut = ''' + @strTexto + ''' OR Proveedor.strCodigo = ''' + @strTexto + ''')'
	IF NOT @strCargo IS NULL SET @strSQL = @strSQL + ' AND CaratulaOC.strEstado IN (10, 11) AND CaratulaOC.strTipoDoc <> ''I'' AND CaratulaOC.strCargo = ''' + @strCargo + ''''
	SET @strSQL = @strSQL + ' AND CaratulaOC.strCentroC not in (''11012'', ''11015'', ''11016'')'
    SET @strSQL = @strSQL + ' ORDER BY Proveedor.strNombre'
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 1
	SELECT Proveedor.strCodigo, Proveedor.strNombre
	FROM Proveedor INNER JOIN CaratulaOC ON (Proveedor.strCodigo = CaratulaOC.strProveedor)
	WHERE CaratulaOC.dblNumero = CONVERT(NUMERIC, @strTexto) AND CaratulaOC.strBodega = @strCargo
ELSE IF @dblModulo = 2
	SELECT Proveedor.strCodigo, Proveedor.strNombre, Proveedor.strRut, REPLACE(Proveedor.strDireccion, '''', '´') AS strDireccion, 
	Comuna.strDetalle AS Comuna, Proveedor.strComuna, Proveedor.strTelefono, Proveedor.strFax, Proveedor.strContacto, Proveedor.strCorreo,
	Proveedor.intFormaPago, FormasPago.strDetalle AS FormasPago
	FROM Proveedor INNER JOIN General..Tablon AS Comuna ON (Proveedor.strComuna = Comuna.strCodigo) AND (Comuna.strTabla = 'comun')
	LEFT JOIN General..Tablon AS FormasPago ON (Proveedor.intFormaPago = FormasPago.strCodigo)
	WHERE Proveedor.strCodigo = @strTexto
ELSE IF @dblModulo = 3
BEGIN
	SET @strSQL = 'SELECT DISTINCT Proveedor.strCodigo, Proveedor.strRut, LTRIM(Proveedor.strNombre) AS strNombre
	FROM Facturas INNER JOIN Proveedor ON (Facturas.strProveedor = Proveedor.strCodigo) WHERE'
	IF @strTBusq = 'C' 
		SET @strSQL = @strSQL + ' (Proveedor.strRut LIKE ''' + @strTexto + '%'' OR Proveedor.strNombre LIKE ''%' + @strTexto + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' Proveedor.strRut = ''' + @strTexto + ''''
	SET @strSQL = @strSQL + ' ORDER BY Proveedor.strNombre'
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 4
BEGIN
	IF @strTBusq = 'C'
		SELECT Proveedor.strCodigo, Proveedor.strNombre, Proveedor.strRut, REPLACE(Proveedor.strDireccion,'''','´') AS strDireccion, 
		Comuna.strDetalle, Proveedor.strComuna, Proveedor.strTelefono, Proveedor.strFax, Proveedor.strContacto, Proveedor.intFormaPago,
		Proveedor.strCorreo 
		FROM Proveedor INNER JOIN General..Tablon AS Comuna ON (Proveedor.strComuna=Comuna.strCodigo)
		WHERE Proveedor.intVigente=1 AND Comuna.strTabla='comun' AND Comuna.strVigente='1' 
		AND (Proveedor.strRut LIKE @strTexto + '%' OR Proveedor.strNombre LIKE '%' + @strTexto + '%') 
		AND Proveedor.strNombre <> '' AND Proveedor.strRut <> ''
		ORDER BY Proveedor.strNombre
	ELSE
		SELECT Proveedor.strCodigo, Proveedor.strNombre, Proveedor.strRut, REPLACE(Proveedor.strDireccion,'''','´') AS strDireccion, 
		Comuna.strDetalle, Proveedor.strComuna, Proveedor.strTelefono, Proveedor.strFax, Proveedor.strContacto, Proveedor.strCorreo,
		Proveedor.intFormaPago, FormasPago.strDetalle AS FormasPago
		FROM Proveedor INNER JOIN General..Tablon AS Comuna ON (Proveedor.strComuna=Comuna.strCodigo) AND (Comuna.strTabla='comun')
		LEFT JOIN General..Tablon AS FormasPago ON (Proveedor.intFormaPago=FormasPago.strCodigo)
		WHERE (Proveedor.strRut = @strTexto OR Proveedor.strNombre = @strTexto) AND Proveedor.strNombre <> '' AND Proveedor.strRut <> ''
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getPrecio]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   PROCEDURE [dbo].[sp_getPrecio]
/*RFGP*/
@strCodigo CHAR(6), 
@strBodega CHAR(5), 
@dtmFecha DATETIME
AS
DECLARE @dblPrecio NUMERIC, @dblRes NUMERIC
SET @dblRes=0
DECLARE precio_cursor CURSOR FOR
SELECT TOP 1 dblPrecio FROM HistoricoPrecio
WHERE strBodega=@strBodega
AND Fecha<=CAST(SUBSTRING(CONVERT(VARCHAR, @dtmFecha, 103),7,4) + SUBSTRING(CONVERT(CHAR,@dtmFecha,103),4,2) AS NUMERIC)
AND strCodigo=@strCodigo ORDER BY Fecha DESC
OPEN precio_cursor
FETCH NEXT FROM precio_cursor INTO @dblPrecio
IF @@FETCH_STATUS=0 SET @dblRes=@dblPrecio
CLOSE precio_cursor
DEALLOCATE precio_cursor
RETURN @dblRes
GO
/****** Object:  StoredProcedure [dbo].[sp_getOrdenCompra]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 29/05/2008
VER: 2.20
*/
CREATE PROCEDURE [dbo].[sp_getOrdenCompra]
@strModulo VARCHAR(5),
@dblNumero NUMERIC = NULL,
@strTipoDoc CHAR(1) = '%',
@strBodega VARCHAR(100) = NULL,
@strEstado VARCHAR(10) = NULL,
@strMes VARCHAR(2) = NULL,
@dblAno NUMERIC = NULL,
@strProveedor VARCHAR(100) = NULL,
@dblPeriodo Numeric = NULL,
@strUsuario VARCHAR(50) = NULL,
@strPerfil VARCHAR(50) = NULL,
@dtmDesde Datetime = NULL,
@dtmHasta Datetime = NULL
AS
DECLARE @strSQL VARCHAR(8000), @dblTotObs NUMERIC, @strFchDsd VARCHAR(10), @strFchHst VARCHAR(10)
SET @strSQL=''
SET @dblTotObs = 0

IF @strMes = '2' AND (CONVERT(INT, @dblAno) % 4) = 0
   SET @strFchHst = @strMes + '/' + '29/' + CONVERT(VARCHAR, @dblAno)
ELSE IF @strMes = '2' AND (CONVERT(INT, @dblAno) % 4) <> 0
   SET @strFchHst = @strMes + '/' + '28/' + CONVERT(VARCHAR, @dblAno)
ELSE IF @strMes = '1' OR @strMes = '3' OR @strMes = '5' OR @strMes = '7' OR @strMes = '8' OR @strMes = '10' OR @strMes = '12'
   SET @strFchHst = @strMes + '/' + '31/' + CONVERT(VARCHAR, @dblAno)
ELSE IF @strMes = '4' or @strMes = '6' or @strMes = '9' or @strMes = '11'
   SET @strFchHst = @strMes + '/' + '30/' + CONVERT(VARCHAR, @dblAno)

SET @strMes = CONVERT(NUMERIC, @strMes) - @dblPeriodo
IF @strMes < 1
BEGIN
   SET @strMes = 12 + CONVERT(NUMERIC, @strMes)
   SET @dblAno = @dblAno - 1
END
IF CONVERT(NUMERIC, @strMes) < 10 SET @strMes = '0' + @strMes
SET @strFchDsd = @strMes + '/' + '01/' + CONVERT(VARCHAR, @dblAno)

DECLARE obs_cursor CURSOR FOR
SELECT COUNT(dblNumero) FROM Observaciones WHERE dblNumero=@dblNumero
OPEN obs_cursor
FETCH NEXT FROM obs_cursor INTO @dblTotObs
IF @@FETCH_STATUS<>0 SET @dblTotObs = 0
CLOSE obs_cursor
DEALLOCATE obs_cursor

IF @strModulo='SSM' --Seguimiento de Solicitudes de Material
   SELECT CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR,CaratulaOC.dtmFecha, 103) as dtmFecha, CaratulaOC.strProveedor, Proveedor.strNombre, 
   DetalleOrdenC.strCodigo, MaterialCasa.strDescripcion, DetalleOrdenC.dblCantidad, DetalleOrdenC.dblValor, DetalleOrdenC.dblNumSol, Estados.strDetalle
   FROM DetalleOrdenC INNER JOIN CaratulaOC ON (DetalleOrdenC.dblNumero=CaratulaOC.dblNumero)
   INNER JOIN Proveedor ON (CaratulaOC.strProveedor=Proveedor.strCodigo)
   INNER JOIN MaterialCasa ON (DetalleOrdenC.strCodigo=Materialcasa.strCodigo)
   INNER JOIN General..Tablon AS Estados ON (Estados.strTabla='estoc' AND Estados.strCodigo=CaratulaOC.strEstado)
   WHERE DetalleOrdenC.dblNumSol=@dblNumero 
   ORDER BY CaratulaOC.dtmFecha, CaratulaOC.dblNumero desc
ELSE IF @strModulo='OC' --Ordenes de Compra
	SELECT DISTINCT CaratulaOC.dblNumero, CaratulaOC.dblUltima, CaratulaOC.intFPago, FPago.strDetalle AS Forma_Pago, CaratulaOC.strBodega, Bodegas.strDetalle AS Bodega, CONVERT(VARCHAR,CaratulaOC.dtmFecha, 103) as dtmFecha, CaratulaOC.strProveedor, 
	Proveedor.strNombre, Proveedor.strRut, Proveedor.strDireccion, Proveedor.strComuna, Comunas.strDetalle AS Comuna, Proveedor.strTelefono, Proveedor.strFax, CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, Cargos.strBodega AS strBodCargo, CaratulaOC.strCentroC, 
	CCosto.strDetalle AS Centro_Costo, CCosto.dblCalificacion as dblCalificacion, CCosto.strZona as strTipoControl, Proveedor.strContacto, CaratulaOC.strObservacion, CaratulaOC.dblIva, CaratulaOC.strTipoDoc, CaratulaOC.strEstado, Estados.strDetalle AS strDescEstado, @dblTotObs AS dblTotObs, DetalleOrdenC.dblNumSol, CaratulaOC.dblDocPago, 
	CaratulaOC.strObra, Contratos.strDetalle AS Contrato, CorrelativoDoc.strUsuario, Usuarios.nombre AS strNombUsua, CASE Facturas.dblTipoDoc WHEN 0 THEN 'Factura' WHEN 1 THEN 'Boleta' WHEN 2 THEN 'Letra' END strDocumento, Facturas.dblNumDoc, CaratulaOC.strBDestino
	FROM CaratulaOC INNER JOIN Proveedor ON (CaratulaOC.strProveedor=Proveedor.strCodigo)
	LEFT JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
	LEFT JOIN General..Tablon AS FPago ON (CaratulaOC.intFPago=FPago.strCodigo) AND (FPago.strTabla='tipop')
	LEFT JOIN General..Tablon AS Bodegas ON (CaratulaOC.strBodega=Bodegas.strCodigo) AND (Bodegas.strTabla='bodeg')
	LEFT JOIN General..Tablon AS Comunas ON (Proveedor.strComuna=Comunas.strCodigo) AND (Comunas.strTabla='comun')
	LEFT JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
	LEFT JOIN General..Tablon AS CCosto ON (CaratulaOC.strCentroC=CCosto.strCodigo) AND (CCosto.strTabla='cenco')
	LEFT JOIN General..Tablon AS Contratos ON (CaratulaOC.strObra=Contratos.strCodigo) AND (Contratos.strTabla='contr')
	LEFT JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado=Estados.strCodigo) AND (Estados.strTabla='estoc')
	LEFT JOIN CorrelativoDoc ON (CaratulaOC.dblNumero=CorrelativoDoc.dblNumero)
	LEFT JOIN General..Usuarios AS Usuarios ON (REPLACE(CorrelativoDoc.strUsuario, '-'+CaratulaOC.strBodega, '')=Usuarios.usuario)
	LEFT JOIN Facturas ON (CaratulaOC.dblNumero = Facturas.dblNumOC)
	WHERE CaratulaOC.dblNumero=@dblNumero
ELSE IF @strModulo='AOC' --Autorizar Ordenes de Compra
   SELECT DISTINCT CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch,
   CaratulaSM.strObservacion, DetalleOrdenC.dblNumSol, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, CaratulaOC.dtmFecha, Estados.strDetalle AS Estado,
   Sum(DetalleOrdenC.dblCantidad*DetalleOrdenC.dblValor*(1+CaratulaOC.dblIVA)) as Total
   FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
   INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
   LEFT JOIN CaratulaSM ON (DetalleOrdenC.dblNumSol=CaratulaSM.dblNumero)
   INNER JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado=Estados.strCodigo) AND (Estados.strTabla='estoc')
   WHERE CaratulaOC.strEstado=1 AND CaratulaOC.strTipoDoc=@strTipoDoc
   --y que no sea del tipo administrativa
   AND CaratulaOC.strCentroC <> '11016' 
   GROUP BY CaratulaOC.strCargo, Cargos.strDetalle, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CaratulaOC.dtmFecha, CaratulaSM.strObservacion, DetalleOrdenC.dblNumSol, CaratulaSM.dtmSolicitud, Cargos.strDetalle, DetalleOrdenC.dblNumSol, CaratulaSM.dtmSolicitud, Estados.strDetalle
   ORDER BY Cargo, CaratulaOC.dblNumero
ELSE IF @strModulo='OCE' --Ordenes de Compra Editable
BEGIN
   IF @dblNumero IS NULL
      SELECT DISTINCT CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch,
      CaratulaOC.strObservacion, DetalleOrdenC.dblNumSol, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, CaratulaOC.dtmFecha, Observaciones.strObservacion AS Obs_Gncia, Estados.strDetalle AS Estado
      FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
      INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
      LEFT JOIN CaratulaSM ON (DetalleOrdenC.dblNumSol=CaratulaSM.dblNumero)
      INNER JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado=Estados.strCodigo) AND (Estados.strTabla='estoc')
      LEFT JOIN Observaciones ON (Observaciones.dblNumero=CaratulaOC.dblNumero)
      WHERE CaratulaOC.strEstado IN (0, 4) AND CaratulaOC.strTipoDoc=@strTipoDoc
      ORDER BY CaratulaOC.dtmFecha DESC, CaratulaOC.dblNumero desc
   ELSE
      SELECT DISTINCT CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch,
      CaratulaOC.strObservacion, DetalleOrdenC.dblNumSol, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, CaratulaOC.dtmFecha, CaratulaOC.strEstado
      FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
      INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
      LEFT JOIN CaratulaSM ON (DetalleOrdenC.dblNumSol=CaratulaSM.dblNumero)
      WHERE CaratulaOC.strBodega=@strBodega AND CaratulaOC.dblUltima=@dblNumero
END
ELSE IF @strModulo='OCA' --Ordenes de Compra Autorizadas
   SELECT DISTINCT CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch,
   CaratulaOC.strObservacion, DetalleOrdenC.dblNumSol, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, CaratulaOC.dtmFecha,
   Autorizaciones.strAutoriza as strAutoriza
   FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
   INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
   LEFT JOIN CaratulaSM ON (DetalleOrdenC.dblNumSol=CaratulaSM.dblNumero)
   LEFT JOIN Autorizaciones ON (CaratulaOC.dblNumero=Autorizaciones.dblNumero and Autorizaciones.strAccion='2')
   WHERE (CaratulaOC.strEstado in (2,10,11,12) AND CaratulaOC.strTipoDoc LIKE RTRIM(@strTipoDoc) ) and datediff(d,CaratulaOC.dtmFecha,getDate())<90
   ORDER BY CaratulaOC.dtmFecha DESC, CaratulaOC.dblNumero desc
ELSE IF @strModulo='OCV' --Ordenes de Compra Editable
   SELECT DISTINCT CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch,
   CaratulaOC.strObservacion, DetalleOrdenC.dblNumSol, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, CaratulaOC.dtmFecha
   FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
   INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
   LEFT JOIN CaratulaSM ON (DetalleOrdenC.dblNumSol=CaratulaSM.dblNumero)
   WHERE CaratulaOC.strEstado = 0 AND CaratulaOC.strTipoDoc = 'O'
   ORDER BY CaratulaOC.dtmFecha DESC, CaratulaOC.dblNumero desc
ELSE IF @strModulo='OCP' --Ordenes de Compra Pendientes
   SELECT DISTINCT CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch,
   CaratulaOC.strObservacion, DetalleOrdenC.dblNumSol, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, CaratulaOC.dtmFecha
   FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
   INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
   LEFT JOIN CaratulaSM ON (DetalleOrdenC.dblNumSol=CaratulaSM.dblNumero)
   WHERE CaratulaOC.strEstado=1 AND CaratulaOC.strTipoDoc=@strTipoDoc
   ORDER BY CaratulaOC.dtmFecha DESC, CaratulaOC.dblNumero desc
ELSE IF @strModulo='IOC'
BEGIN
	SET @strSQL='SELECT DISTINCT CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch, CaratulaOC.strObservacion AS strObservacion, 
	DetalleOrdenC.dblNumSol, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, CaratulaOC.dtmFecha, CaratulaOC.strEstado, Estados.strDetalle AS Estado, CaratulaOC.strTipoDoc
	FROM CaratulaOC LEFT JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo) LEFT JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
	LEFT JOIN CaratulaSM ON (DetalleOrdenC.dblNumSol=CaratulaSM.dblNumero) 
	INNER JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado=Estados.strCodigo) AND (Estados.strTabla=''estoc'')
	WHERE '

	IF @strTipoDoc = 'O' 
		SET @strSQL = @strSQL + ' (CaratulaOC.strTipoDoc = ''O'' OR CaratulaOC.strTipoDoc = ''I'')'
	ELSE IF @strTipoDoc = 'A' 
		SET @strSQL = @strSQL + ' CaratulaOC.strTipoDoc = ''A'''
	ELSE IF @strTipoDoc = '%' 
		SET @strSQL = @strSQL + ' CaratulaOC.strTipoDoc LIKE ''%%'''
	
	IF @strBodega<>'all'
		SET @strSQL=@strSQL + ' AND CaratulaOC.strCargo = ''' + @strBodega + ''''
	ELSE
		SET @strSQL=@strSQL + ' AND CaratulaOC.strCargo IN (SELECT C.strCodigo FROM General..Contrato AS C INNER JOIN General..BodegaUsuario AS BU ON (C.strBodega = BU.strBodega) WHERE BU.strUsuario = ''' + @strUsuario + ''')'

	IF @strEstado <> 'all' 
	BEGIN
		IF @strEstado = '2' 
			SET @strSQL = @strSQL + ' AND CONVERT(NUMERIC, CaratulaOC.strEstado) = ' + @strEstado + ' AND CaratulaOC.strEstado <> ''5'''
		ELSE
			SET @strSQL = @strSQL + ' AND CaratulaOC.strEstado = ''' + @strEstado + '''' 
	END
	IF @dblPeriodo <> 0
		SET @strSQL = @strSQL + ' AND CONVERT(DATETIME, dtmFecha, 101) BETWEEN CONVERT(DATETIME, ''' + @strFchDsd + ''', 101) AND CONVERT(DATETIME, ''' +  @strFchHst + ''', 101)'
	ELSE
		SET @strSQL = @strSQL + ' AND Month(CaratulaOC.dtmFecha)=' + @strMes + ' AND Year(CaratulaOC.dtmFecha)=' + CONVERT(VARCHAR(4),@dblAno) 
	
	SET @strSQL = @strSQL + ' ORDER BY CaratulaOC.dtmFecha DESC, CaratulaOC.dblNumero DESC'
	EXEC(@strSQL)
END
ELSE IF @strModulo='GGI'
BEGIN
	SET @strSQL='SELECT CaratulaOC.dblNumero, CaratulaOC.dblUltima, CaratulaOC.strProveedor, Proveedor.strNombre, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch, CaratulaOC.strObservacion, 
	(SELECT CONVERT(VARCHAR, MIN(dtmFecha), 103) FROM Autorizaciones WHERE dblNumero=CaratulaOC.dblNumero AND strAccion=10) AS dtmFchEP, CaratulaOC.strEstado, Estados.strDetalle AS Estado, CaratulaOC.dtmFecha, 
   	CaratulaOC.strBodega FROM CaratulaOC
   	INNER JOIN Proveedor ON (CaratulaOC.strProveedor=Proveedor.strCodigo)
   	INNER JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado=Estados.strCodigo) AND (Estados.strTabla=''estoc'')
	WHERE CaratulaOC.strTipoDoc <> ''I'''
   	IF @strEstado <> 'all'
      	SET @strSQL = @strSQL + ' AND CaratulaOC.strEstado = ''' + @strEstado + ''''
   	ELSE
      	SET @strSQL = @strSQL + ' AND CaratulaOC.strEstado IN (2, 10, 11, 16)'

   	IF @strBodega = '12000' 
		SET @strSQL = @strSQL + ' AND CaratulaOC.strBodega = ''' + @strBodega + ''''
	ELSE IF @strBodega <> 'all' 
		SET @strSQL = @strSQL + ' AND CaratulaOC.strCargo = ''' + @strBodega + ''''

   	IF @strProveedor <> 'all' SET @strSQL = @strSQL + ' AND CaratulaOC.strProveedor = ''' + @strProveedor + ''''
    SET @strSQL=@strSQL + ' AND CaratulaOC.strCentroC not in (''12012'',''12015'',''12016'')'
   	SET @strSQL=@strSQL + ' ORDER BY Proveedor.strNombre, CaratulaOC.dblNumero DESC'
   	EXEC(@strSQL)
END
ELSE IF @strModulo='GI'
   SELECT CaratulaOC.dblNumero, CaratulaOC.dblUltima, CaratulaOC.intFPago, FPago.strDetalle AS Forma_Pago, CaratulaOC.strBodega, Bodegas.strDetalle AS Bodega, CONVERT(VARCHAR,CaratulaOC.dtmFecha, 103) as dtmFecha, 
   CaratulaOC.strProveedor, Proveedor.strNombre, Proveedor.strRut, Proveedor.strDireccion, Proveedor.strComuna, Comunas.strDetalle AS Comuna, Proveedor.strTelefono, Proveedor.strFax, CaratulaOC.strCargo, 
   Cargos.strDetalle AS Cargo, CaratulaOC.strCentroC, CCosto.strDetalle AS Centro_Costo, Proveedor.strContacto, CaratulaOC.strObservacion, CaratulaOC.dblIva, CaratulaOC.strTipoDoc, CaratulaOC.strEstado, @dblTotObs AS dblTotObs, 
   DetalleOrdenC.dblNumSol, CaratulaOC.dblDocPago, CaratulaOC.strObra, Contratos.strDetalle AS Contrato
   FROM CaratulaOC INNER JOIN Proveedor ON (CaratulaOC.strProveedor=Proveedor.strCodigo)
   LEFT JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
   LEFT JOIN General..Tablon AS FPago ON (CaratulaOC.intFPago=FPago.strCodigo) AND (FPago.strTabla='tipop')
   LEFT JOIN General..Tablon AS Bodegas ON (CaratulaOC.strBodega=Bodegas.strCodigo) AND (Bodegas.strTabla='bodeg')
   LEFT JOIN General..Tablon AS Comunas ON (Proveedor.strComuna=Comunas.strCodigo) AND (Comunas.strTabla='comun')
   LEFT JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
   LEFT JOIN General..Tablon AS CCosto ON (CaratulaOC.strCentroC=CCosto.strCodigo) AND (CCosto.strTabla='cenco')
   LEFT JOIN General..Tablon AS Contratos ON (CaratulaOC.strObra=Contratos.strCodigo) AND (Contratos.strTabla='contr')
   WHERE CaratulaOC.strBodega=@strBodega AND CaratulaOC.dblUltima=@dblNumero
ELSE IF @strModulo='RF'
	SELECT CaratulaOC.dblNumero, CaratulaOC.strProveedor, Proveedor.strNombre, CaratulaOC.strCargo, Cargos.strDetalle,
	(SELECT (SUM(DetalleOrdenC.dblCantidad * DetalleOrdenC.dblValor)) * (1 + CaratulaOC.dblIva) FROM DetalleOrdenC WHERE DetalleOrdenC.dblNumero=CaratulaOC.dblNumero) AS dblMonto
	FROM CaratulaOC INNER JOIN Proveedor ON (CaratulaOC.strProveedor = Proveedor.strCodigo)
	INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo = Cargos.strCodigo)
	WHERE CaratulaOC.strCargo = @strBodega AND CaratulaOC.dblUltima = @dblNumero
ELSE IF @strModulo='NUM'
BEGIN
   SET @strSQL = 'SELECT dblNumero FROM CaratulaOC 
   WHERE strBodega='''+@strBodega+''' AND dblUltima='+CONVERT(VARCHAR, @dblNumero)
   EXEC(@strSQL)
END
ELSE IF @strModulo='DC'
	SELECT Proveedor.strNombre, Proveedor.strTelefono, Proveedor.strContacto, MaterialCasa.strDescripcion, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch, DetalleOrdenC.dblValor
	FROM CaratulaOC INNER JOIN DetalleOrdenC  ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero)
	INNER JOIN Proveedor ON (CaratulaOC.strProveedor = Proveedor.strCodigo)
	INNER JOIN MaterialCasa ON (DetalleOrdenC.strCodigo = MaterialCasa.strCodigo)
	WHERE DetalleOrdenC.strCodigo = @strBodega ORDER BY CaratulaOC.dtmFecha DESC
ELSE IF @strModulo='AV'
	SELECT CaratulaOC.dblNumero, DetalleOrdenC.strCodigo, CONVERT(VARCHAR, DetalleOrdenC.dtmInicio, 103) AS dtmFchDsd, CONVERT(VARCHAR, DetalleOrdenC.dtmTermino, 103) AS dtmFchHst
	FROM CaratulaOC INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero)
	WHERE NOT DetalleOrdenC.dtmTermino IS NULL AND CaratulaOC.strEstado IN ('2', '10', '11', '12') AND CaratulaOC.strCargo = @strBodega AND CONVERT(NUMERIC, CONVERT(VARCHAR, YEAR(DetalleOrdenC.dtmInicio)) + CONVERT(VARCHAR, MONTH(DetalleOrdenC.dtmInicio))) >= 20075
	ORDER BY DetalleOrdenC.dtmInicio, DetalleOrdenC.dtmTermino
ELSE IF @strModulo = 'UAV'
	SELECT CONVERT(VARCHAR, MIN(DetalleOrdenC.dtmInicio), 103) AS dtmFchDsd, CONVERT(VARCHAR, MAX(DetalleOrdenC.dtmTermino), 103) AS dtmFchHst
	FROM CaratulaOC INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero)
	WHERE NOT DetalleOrdenC.dtmTermino IS NULL AND CaratulaOC.strEstado IN ('10', '11', '12') AND CaratulaOC.strCargo = @strBodega AND CONVERT(VARCHAR, YEAR(DetalleOrdenC.dtmInicio)) + CONVERT(VARCHAR, MONTH(DetalleOrdenC.dtmInicio) ) >= '20075'
ELSE IF @strModulo = 'ARR'
	SELECT CaratulaOC.dblNumero, CaratulaOC.dblUltima, ISNULL(Proveedor.strNombre, 'Sin registro.') AS strNombre, CaratulaOC.strObservacion, CONVERT(VARCHAR, DetalleOrdenC.dtmInicio, 103) AS dtmFchDsd, CONVERT(VARCHAR, DetalleOrdenC.dtmTermino, 103) AS dtmFchHst, DetalleOrdenC.strCodigo
   	FROM CaratulaOC LEFT JOIN Proveedor ON (CaratulaOC.strProveedor=Proveedor.strCodigo)
   	INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
	WHERE CaratulaOC.dblNumero=@dblNumero AND DetalleOrdenC.strCodigo = @strBodega
ELSE IF @strModulo = 'ROC'
	SELECT CaratulaOC.dblNumero, CaratulaOC.dblUltima, CaratulaOC.strProveedor, Proveedor.strNombre, CaratulaOC.strObservacion, CaratulaOC.strBodega, CONVERT(VARCHAR, MIN(DetalleOrdenC.dtmInicio), 103) AS dtmInicio, CONVERT(VARCHAR, MAX(DetalleOrdenC.dtmTermino), 103) AS dtmTermino  
	FROM CaratulaOC INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero)
	INNER JOIN Proveedor ON (CaratulaOC.strProveedor = Proveedor.strCodigo)
	WHERE NOT DetalleOrdenC.dtmTermino IS NULL AND CaratulaOC.strEstado IN ('2', '10', '11', '12') AND CONVERT(NUMERIC, CONVERT(VARCHAR, YEAR(DetalleOrdenC.dtmInicio)) + CONVERT(VARCHAR, MONTH(DetalleOrdenC.dtmInicio))) >= 20075
	AND CaratulaOC.strCargo = @strBodega
	GROUP BY CaratulaOC.dblNumero, CaratulaOC.dblUltima, CaratulaOC.strProveedor, Proveedor.strNombre, CaratulaOC.strObservacion, CaratulaOC.strBodega, CaratulaOC.dtmFecha
   	ORDER BY CaratulaOC.dtmFecha DESC, CaratulaOC.dblNumero DESC
ELSE IF @strModulo = 'OCIP'
	SELECT CaratulaOC.dblUltima, convert(VARCHAR, CaratulaOC.dtmFecha, 103) as dtmFecha, CaratulaOC.strProveedor, Proveedor.strNombre, DetalleOrdenC.strCodigo, MaterialCasa.strDescripcion, SUM(DetalleOrdenC.dblCantidad) AS dblCantOC, SUM(DetalleIngreso.dblCantidad) AS dblCantIngr
	FROM CaratulaOC INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero)
	INNER JOIN Proveedor ON (CaratulaOC.strProveedor = Proveedor.strCodigo)
	INNER JOIN MaterialCasa ON (DetalleOrdenC.strCodigo = MaterialCasa.strCodigo)
	LEFT JOIN DetalleIngreso ON (DetalleOrdenC.dblNumero = DetalleIngreso.dblNumOC AND DetalleOrdenC.strCodigo = DetalleIngreso.strCodigo)
	WHERE CaratulaOC.strEstado IN ('10', '11') AND CaratulaOC.strBodega = @strBodega
    AND Proveedor.strNombre like '%' + @strProveedor +'%'
    AND caratulaOC.dtmFecha between @dtmdesde+' 00:00:00' and @dtmHasta+' 23:59:59'
	GROUP BY CaratulaOC.dblUltima, CaratulaOC.dtmFecha, CaratulaOC.strProveedor, Proveedor.strNombre, DetalleOrdenC.strCodigo, MaterialCasa.strDescripcion
	ORDER BY Proveedor.strNombre, MaterialCasa.strDescripcion
ELSE IF @strModulo = 'ROC2'
	SELECT CaratulaOC.dblNumero FROM CaratulaOC INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero) 
	WHERE DetalleOrdenC.dtmTermino >= (GETDATE() - 10) AND CaratulaOC.strEstado = '10' AND CaratulaOC.strTipoDoc = 'I' AND CaratulaOC.dblNumero = @dblNumero
ELSE IF @strModulo = 'OCI'
BEGIN
	DELETE FROM AutorizaOCompraInterna
	
	SET @strSQL = 'INSERT AutorizaOCompraInterna 
	SELECT 0, ''' + @strUsuario + ''', dblNumero, 0 FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo = Cargos.strCodigo)
	INNER JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado = Estados.strCodigo AND Estados.strTabla = ''estfi'') WHERE strTipoDoc = ''I'''
	IF @strPerfil = 'gerencia' SET @strSQL = @strSQL + ' AND CaratulaOC.strEstado =  1'
	EXEC(@strSQL)
	
	SET @strSQL = 'SELECT CaratulaOC.dblNumero, CaratulaOC.dblUltima, CaratulaOC.strCargo, Cargos.strDetalle AS strDescCargo, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFOCompra, CaratulaOC.strObservacion, CaratulaOC.strEstado, Estados.strDetalle AS strDescEstado
	FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo = Cargos.strCodigo)
	INNER JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado = Estados.strCodigo AND Estados.strTabla = ''estfi'')
	WHERE CaratulaOC.strTipoDoc = ''I'' ORDER BY CaratulaOC.dblUltima'
	IF @strPerfil = 'gerencia' SET @strSQL = @strSQL + ' AND CaratulaOC.strEstado =  1'
	EXEC(@strSQL)
END
ELSE IF @strModulo='AOA' --Autorizar Ordenes de Compra Administrativa
BEGIN
   SELECT DISTINCT CaratulaOC.strCargo, Cargos.strDetalle AS Cargo, CaratulaOC.dblNumero, CaratulaOC.dblUltima, CONVERT(VARCHAR, CaratulaOC.dtmFecha, 103) AS dtmFch,
   CaratulaSM.strObservacion, DetalleOrdenC.dblNumSol, CONVERT(VARCHAR, CaratulaSM.dtmSolicitud, 103) AS dtmSolicitud, CaratulaOC.dtmFecha, Estados.strDetalle AS Estado
   FROM CaratulaOC INNER JOIN General..Contrato AS Cargos ON (CaratulaOC.strCargo=Cargos.strCodigo)
   INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero=DetalleOrdenC.dblNumero)
   LEFT JOIN CaratulaSM ON (DetalleOrdenC.dblNumSol=CaratulaSM.dblNumero)
   INNER JOIN General..Tablon AS Estados ON (CaratulaOC.strEstado=Estados.strCodigo) AND (Estados.strTabla='estoc')
   WHERE CaratulaOC.strEstado=1 AND CaratulaOC.strTipoDoc=@strTipoDoc AND CaratulaOC.strCentroC='11016'
   ORDER BY Cargo, CaratulaOC.dblNumero
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getObservaciones]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 07/11/2006
MODIF: 0
*/
CREATE  PROCEDURE [dbo].[sp_getObservaciones]
@strModulo VARCHAR(3),
@dblNumero NUMERIC = NULL,
@strUsuario VARCHAR(100) = NULL
AS
IF @strModulo='IOC'
   SELECT DISTINCT Observaciones.strUsuario, Usuarios.nombre, CONVERT(VARCHAR, Observaciones.dtmFecha, 120) as dtmFch, Observaciones.dtmFecha, Observaciones.strObservacion 
   FROM Observaciones INNER JOIN General..Usuarios AS Usuarios ON (Observaciones.strUsuario=Usuarios.usuario)
   WHERE Observaciones.dblNumero=@dblNumero
   ORDER BY dtmFecha
GO
/****** Object:  StoredProcedure [dbo].[sp_getNumeroDespacho]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 05/01/2007
MODIF: 0
*/
CREATE  PROC [dbo].[sp_getNumeroDespacho]
@dblNumero NUMERIC
AS
DECLARE @dblNumGuia NUMERIC, @dblExiste NUMERIC
SET @dblExiste=0
DECLARE Num_cursor CURSOR FOR
SELECT dblNumero FROM Despacho WHERE dblNumero=@dblNumero
OPEN Num_cursor
FETCH NEXT FROM Num_cursor INTO @dblNumGuia
IF @@FETCH_STATUS=0 SET @dblExiste=1
CLOSE Num_cursor
DEALLOCATE Num_cursor
IF @dblExiste=0
BEGIN
   DECLARE Num_cursor CURSOR FOR
   SELECT dblNumero FROM CaratulaGuiaCargo WHERE dblNumero=@dblNumero
   OPEN Num_cursor
   FETCH NEXT FROM Num_cursor INTO @dblNumGuia
   IF @@FETCH_STATUS=0 SET @dblExiste=1
   CLOSE Num_cursor
   DEALLOCATE Num_cursor
END
SELECT @dblExiste AS dblExiste
GO
/****** Object:  StoredProcedure [dbo].[sp_getMoviles]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 11/04/2011
VER.: 1.6
*/
CREATE PROCEDURE [dbo].[sp_getMoviles]
@dblModulo NUMERIC,
@strBodega VARCHAR(50) = NULL,
@strValor VARCHAR(100) = NULL,
@strTipoBusq VARCHAR(1) = NULL
AS
DECLARE @strSQL VARCHAR(1000)
SET @strSQL=''
IF @dblModulo=0
BEGIN
   SET @strSQL='SELECT Moviles.strMovil, Personal.strNombre
   FROM General..Movil AS Moviles INNER JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut)
   WHERE Moviles.intVigente=1 AND Moviles.strBodega = ''' + @strBodega + ''''
   IF @strTipoBusq='C' 
      SET @strSQL = @strSQL + ' AND (Moviles.strMovil LIKE '''+@strValor+'%'' OR Personal.strNombre LIKE ''%'+@strValor+'%'')'
   ELSE
      SET @strSQL = @strSQL + ' AND (Moviles.strMovil = '''+@strValor+''' OR Personal.strNombre = '''+@strValor+''')'
   EXEC(@strSQL)
END
ELSE IF @dblModulo=1
   SELECT Personal.strRut, Personal.strNombre, Personal.dblNivel
   FROM General..PersonalObras AS Personal
   WHERE Personal.strContrato	= @strBodega AND Personal.strRut = @strValor
ELSE IF @dblModulo=2
BEGIN
   SET @strSQL = 'SELECT DISTINCT Moviles.strMovil, Personal.strNombre, Moviles.strContrato, Contratos.strDetalle AS strDescContrato, Moviles.strBodega, Bodegas.strDetalle AS strDescBodega, Moviles.intVigente 
   FROM General..Movil AS Moviles INNER JOIN general..PersonalObras AS Personal ON (Moviles.strRut=Personal.strRut)
   INNER JOIN General..Tablon AS Bodegas ON (Moviles.strBodega=Bodegas.strCodigo)
   INNER JOIN General..Tablon AS Contratos ON (Moviles.strContrato=Contratos.strCodigo)'
   IF @strBodega<>'12027' AND @strBodega<>'12001' SET @strSQL = @strSQL + ' WHERE Moviles.strBodega='''+ @strBodega + ''''
   SET @strSQL = @strSQL + ' ORDER BY Personal.strNombre'
   EXEC(@strSQL)
END
ELSE IF @dblModulo=3
BEGIN
   	SET @strSQL='SELECT DISTINCT Movil.strMovil, PersonalObras.strNombre
	FROM Movil INNER JOIN PersonalObras ON (Movil.strRut = PersonalObras.strRut AND PersonalObras.dblVigente = 1 AND Movil.intVigente=1)
	INNER JOIN BodegaUsuario ON (Movil.strBodega = BodegaUsuario.strBodega AND BodegaUsuario.intVigente = 1)
	WHERE BodegaUsuario.strUsuario = ''' + @strBodega + ''''
   	IF @strTipoBusq='C' 
      	SET @strSQL = @strSQL + ' AND (Movil.strMovil LIKE '''+@strValor+'%'' OR PersonalObras.strNombre LIKE ''%'+@strValor+'%'')'
   	ELSE
    		SET @strSQL = @strSQL + ' AND (Movil.strMovil = '''+@strValor+''' OR PersonalObras.strNombre = '''+@strValor+''')'

   	EXEC(@strSQL)
END
ELSE IF @dblModulo = 4
BEGIN
	CREATE TABLE #tmp_movil (strMovil VARCHAR(50), strNombre VARCHAR(200))
	
	INSERT #tmp_movil 
	SELECT CaratulaOrden.strMovil, PersonalObras.strNombre
	FROM Orden..CaratulaOrden AS CaratulaOrden INNER JOIN Movil ON (CaratulaOrden.strMovil = Movil.strMovil AND Movil.intVigente = 1)
	INNER JOIN PersonalObras ON (Movil.strRut = PersonalObras.strRut AND PersonalObras.dblVigente = 1)
	WHERE CaratulaOrden.dblCorrelativo = CONVERT(NUMERIC, @strValor)
	
	INSERT #tmp_movil 
	SELECT DISTINCT Anexos.strMovil, PersonalObras.strNombre 
	FROM Orden..Anexos AS Anexos INNER JOIN Movil ON (Anexos.strMovil = Movil.strMovil AND Movil.intVigente = 1)
	INNER JOIN PersonalObras ON (Movil.strRut = PersonalObras.strRut AND PersonalObras.dblVigente = 1)
	WHERE Anexos.dblCorrelativo = CONVERT(NUMERIC, @strValor) AND NOT Anexos.strMovil IN (SELECT strMovil FROM Orden..CaratulaOrden WHERE dblCorrelativo = CONVERT(NUMERIC, @strValor))
	
	SELECT * FROM #tmp_movil 
	
	DROP TABLE #tmp_movil 
END
ELSE IF @dblModulo=5
   SELECT Movil.strMovil, PersonalObras.strNombre
   FROM Movil INNER JOIN PersonalObras ON (Movil.strRut = PersonalObras.strRut)
   WHERE Movil.intVigente = 1 AND PersonalObras.dblVigente = 1 AND Movil.strBodega IN (SELECT strBodega FROM BodegaUsuario WHERE strUsuario = @strValor)
   ORDER BY PersonalObras.strNombre
ELSE IF @dblModulo=6
BEGIN
   	SET @strSQL = 'SELECT DISTINCT Movil.strMovil, PersonalObras.strNombre
   	FROM Movil INNER JOIN PersonalObras ON (Movil.strRut = PersonalObras.strRut)
   	WHERE Movil.intVigente = 1 AND PersonalObras.dblVigente = 1 AND Movil.strTipo=''0'''
 	IF @strValor <> 'all' SET @strSQL = @strSQL + ' AND Movil.strContrato = ''' + @strValor + ''''
   	SET @strSQL = @strSQL + ' ORDER BY PersonalObras.strNombre'
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 7
BEGIN
   	SET @strSQL = 'SELECT DISTINCT Movil.strMovil, PersonalObras.strNombre
   	FROM Movil INNER JOIN PersonalObras ON (Movil.strRut = PersonalObras.strRut)
   	WHERE Movil.intVigente = 1 AND PersonalObras.dblVigente = 1 AND Movil.strTipo=''2'''
	IF @strTipoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (Movil.strMovil LIKE ''%' + @strValor + '%'' OR PersonalObras.strNombre LIKE ''%' + @strValor + '%'')'
	ELSE IF @strTipoBusq = 'E'
		SET @strSQL = @strSQL + ' AND Movil.strMovil = ''' + @strValor + ''''
   	SET @strSQL = @strSQL + ' ORDER BY PersonalObras.strNombre'
	EXEC(@strSQL)
END
ELSE IF @dblModulo = 8
BEGIN
   SELECT Movil.strMovil, PersonalObras.strNombre
   FROM Movil INNER JOIN PersonalObras ON (Movil.strRut = PersonalObras.strRut)
   WHERE Movil.intVigente = 1 AND PersonalObras.dblVigente = 1 AND Movil.strBodega = @strBodega
   ORDER BY PersonalObras.strNombre
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getMaterialInOut]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[sp_getMaterialInOut]
@strBodega as Char(5),
@strDescripcion as varchar(100)
as
set @strDescripcion=replace(rTrim(@strDescripcion),' ','%')
select materialcasa.strcodigo, materialcasa.strdescripcion, 
familia.strdetalle, 
0 as Entradas, 
0 as Salidas
into ##Paso from
materialcasa 
left join familia
on materialcasa.strfamilia=familia.strcodigo
where strdescripcion like '%' + @strDescripcion + '%'

update ##paso
set entradas = isNull((Select sum(D.dblCantidad) from detalleIngreso as D inner join ingreso as I on D.dblNumero=I.dblNumero Where I.strBodega=@strBodega and strCodigo=##paso.strcodigo),0)

update ##paso
set entradas = entradas + isNull((Select sum(isnull(D.dblCantidad,0)) from detalledevolucion as D inner join devolucion as I on D.dblNumero=I.dblNumero Where I.strBodega=@strBodega and strCodigo=##paso.strcodigo),0)

update ##paso
set entradas = entradas + isNull((Select sum(isnull(D.dblCantidad,0)) from detalledevolucioncargos as D inner join caratuladevolucioncargos as I on D.dblNumero=I.dblNumero Where I.strBodega=@strBodega and strCodigo=##paso.strcodigo),0)

update ##paso
set salidas = isNull((Select sum(D.dblCantidad) from detalledespacho as D inner join despacho as I on D.dblNumero=I.dblNumero Where I.strBodega=@strBodega and strCodigo=##paso.strcodigo),0)

update ##paso
set salidas = salidas + isNull((Select sum(isnull(D.dblCantidad,0)) from detalleguiacargos as D inner join caratulaguiacargo as I on D.dblNumero=I.dblNumero Where I.strBodega=@strBodega and strCodigo=##paso.strcodigo),0)

update ##paso
set salidas = salidas + isNull((Select sum(D.dblCantidad) from detallevc as D inner join caratulavc as I on D.dblInterno=I.dblInterno Where I.strBodega=@strBodega and strCodigo=##paso.strcodigo),0)
select * from ##paso

drop table ##paso
GO
/****** Object:  StoredProcedure [dbo].[sp_getMateriales]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 14/04/2008
VER.: 2.196
*/
CREATE PROCEDURE [dbo].[sp_getMateriales]
@strValor VARCHAR(50),
@strModoBusq VARCHAR(1) = 'C',
@strTipoUnidad VARCHAR(1) = 'M',
@strBodega VARCHAR(100) = NULL,
@strModulo VARCHAR(5) = 'ALL',
@strCargo VARCHAR(10) = NULL
AS
--P.A.T. 03/09/2007
IF ISNUMERIC(@strValor)=1
   SET @strModoBusq=''
--------------------------------
DECLARE @strSQL VARCHAR(8000)
IF @strModulo='ALL'
BEGIN
   SET @strSQL = 'SELECT DISTINCT Bodega.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, Bodega.dblStock, MaterialCasa.strTipoUnidad
   FROM Bodega LEFT JOIN MaterialCasa ON (Bodega.strCodigo=MaterialCasa.strCodigo)
   WHERE Bodega.dblStock > 0'
   IF NOT @strTipoUnidad IS NULL SET @strSQL = @strSQL + ' AND MaterialCasa.strTipoUnidad=''' + @strTipoUnidad + ''''
   IF @strBodega<>'12027' SET @strSQL = @strSQL + ' AND Bodega.strBodega = ''' + @strBodega + ''''
   IF @strModoBusq='C'
      SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
   ELSE 
      SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
   
   SET @strSQL = @strSQL + ' ORDER BY MaterialCasa.strDescripcion'
   EXEC(@strSQL)
END
ELSE IF @strModulo='GD'
BEGIN
   IF @strModoBusq='C'
      SELECT Bodega.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, Bodega.dblStock
      FROM Bodega LEFT JOIN MaterialCasa ON (Bodega.strCodigo=MaterialCasa.strCodigo)
      Left Join Familia On MaterialCasa.strFamilia=Familia.strCodigo
      WHERE (MaterialCasa.strCodigo LIKE @strValor+'%' OR MaterialCasa.strDescripcion LIKE '%'+@strValor+'%') AND 
      Bodega.strBodega = @strBodega AND Bodega.dblStock > 0 AND NOT Familia.dblTipoFamilia IN (2, 3)
      ORDER BY MaterialCasa.strDescripcion
   ELSE 
      SELECT Bodega.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, Bodega.dblStock
      FROM Bodega LEFT JOIN MaterialCasa ON (Bodega.strCodigo=MaterialCasa.strCodigo)
      Left Join Familia On MaterialCasa.strFamilia=Familia.strCodigo
      WHERE (MaterialCasa.strCodigo = @strValor OR MaterialCasa.strDescripcion = @strValor) AND 
      Bodega.strBodega = @strBodega AND Bodega.dblStock > 0 AND NOT Familia.dblTipoFamilia IN (2, 3)
END
ELSE IF @strModulo='SM'
BEGIN
	SET @strSQL = 'SELECT MaterialCasa.CODROSS, MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, SUM(Bodega.dblStock) AS dblStock
	FROM MaterialCasa LEFT JOIN Bodega ON (MaterialCasa.strCodigo = Bodega.strCodigo) 
	WHERE  MaterialCasa.strTipoUnidad = ''M'''
	IF @strBodega = 'BC'
		SET @strSQL = @strSQL + ' AND Bodega.strBodega = ''12001'''
	ELSE
		SET @strSQL = @strSQL + ' AND Bodega.strBodega <> ''12001'''

	IF @strModoBusq = 'C' 
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
	
	SET @strSQL = @strSQL + ' GROUP BY MaterialCasa.CODROSS, MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad'
	SET @strSQL = @strSQL + ' ORDER BY MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
ELSE IF @strModulo='OC' 
BEGIN
	IF @strModoBusq = 'C'
		SELECT * FROM MaterialCasa WHERE (strCodigo LIKE @strValor + '%' OR strDescripcion LIKE '%' + @strValor + '%') 
		AND strTipoUnidad = @strTipoUnidad AND strDescripcion <> '' ORDER BY strDescripcion
	ELSE 
		SELECT * FROM MaterialCasa WHERE (strCodigo = @strValor OR strDescripcion = @strValor) AND strTipoUnidad = @strTipoUnidad
END
ELSE IF @strModulo='GDEV'
BEGIN
	CREATE TABLE #tmp_tabla (strCodigo VARCHAR(20), strDescripcion VARCHAR(255), strUnidad VARCHAR(50))
	
	SET @strSQL = 'INSERT #tmp_tabla
	SELECT DISTINCT DetalleDespacho.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad
	FROM Despacho INNER JOIN DetalleDespacho ON (Despacho.dblNumero = DetalleDespacho.dblNumero)
	INNER JOIN MaterialCasa ON (DetalleDespacho.strCodigo = MaterialCasa.strCodigo)
	WHERE Despacho.strBodega = ''' + @strBodega + ''' AND MaterialCasa.strTipoUnidad = ''M'''
	IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (DetalleDespacho.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND (DetalleDespacho.strCodigo = ''' + @strValor + ''')'
	EXEC(@strSQL)
	
	SET @strSQL = 'INSERT #tmp_tabla
	SELECT DISTINCT DetalleGuiaCargos.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad
	FROM CaratulaGuiaCargo INNER JOIN DetalleGuiaCargos ON (CaratulaGuiaCargo.dblNumero = DetalleGuiaCargos.dblNumero)
	INNER JOIN MaterialCasa ON (DetalleGuiaCargos.strCodigo = MaterialCasa.strCodigo)
	WHERE CaratulaGuiaCargo.strBodega = ''' + @strBodega + ''' AND MaterialCasa.strTipoUnidad = ''M'''
	IF @strModoBusq = 'C'
   		SET @strSQL = @strSQL + ' AND (DetalleGuiaCargos.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND (DetalleGuiaCargos.strCodigo = ''' + @strValor + ''')'
	EXEC(@strSQL)
	
	SELECT DISTINCT * FROM #tmp_tabla ORDER BY strCodigo
	
	DROP TABLE #tmp_tabla
END
ELSE IF @strModulo='GCAR'
BEGIN
	SET @strSQL = 'SELECT Bodega.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, Bodega.dblStock, MaterialCasa.strFamilia
	FROM Bodega LEFT JOIN MaterialCasa ON (Bodega.strCodigo = MaterialCasa.strCodigo)
	INNER JOIN Familia ON (MaterialCasa.strFamilia = Familia.strCodigo)
	WHERE Bodega.strBodega =''' + @strBodega + ''' AND Bodega.dblStock > 0 AND Familia.dblTipoFamilia IN (2, 3)'
	IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE '''+@strValor+'%'' OR MaterialCasa.strDescripcion LIKE ''%'+@strValor+'%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = '''+@strValor+''''
	SET @strSQL = @strSQL + ' ORDER BY MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
ELSE IF @strModulo='FULL'
BEGIN
	CREATE TABLE #tmp_materiales (strCodigo VARCHAR(50), strDescripcion VARCHAR(255), strUnidad VARCHAR(10), strTipoUnidad VARCHAR(10))
	
	SET @strSQL = 'INSERT #tmp_materiales
	SELECT DISTINCT DetalleOrdenC.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, MaterialCasa.strTipoUnidad
	FROM CaratulaOC INNER JOIN DetalleOrdenC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero) 
	INNER JOIN MaterialCasa ON (DetalleOrdenC.strCodigo = MaterialCasa.strCodigo)
	WHERE CaratulaOC.strEstado <> 5 AND CaratulaOC.strBodega = ''' + @strBodega + ''''
	IF NOT @strTipoUnidad IS NULL SET @strSQL = @strSQL + ' AND MaterialCasa.strTipoUnidad = ''' + @strTipoUnidad + ''''
	IF @strModoBusq='C'
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
	EXEC(@strSQL)
	
	SET @strSQL = 'INSERT #tmp_materiales
	SELECT DISTINCT DetalleTerminoBodega.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, MaterialCasa.strTipoUnidad 
	FROM CaratulaTerminoBodega INNER JOIN DetalleTerminoBodega ON (CaratulaTerminoBodega.dblNumero = DetalleTerminoBodega.dblNumero) 
	INNER JOIN MaterialCasa ON (DetalleTerminoBodega.strCodigo = MaterialCasa.strCodigo)
	WHERE CaratulaTerminoBodega.strBodega = ''' + @strBodega + ''' AND DetalleTerminoBodega.strCodigo NOT IN (SELECT strCodigo FROM #tmp_materiales)'
	IF NOT @strTipoUnidad IS NULL SET @strSQL = @strSQL + ' AND MaterialCasa.strTipoUnidad = ''' + @strTipoUnidad + ''''
	IF @strModoBusq='C'
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
	EXEC(@strSQL)

	
	SELECT * FROM #tmp_materiales ORDER BY strDescripcion
	
	DROP TABLE #tmp_materiales
END
ELSE IF @strModulo='DEV'
   SELECT HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion
   FROM HistoricoDevolucion INNER JOIN MaterialCasa ON (HistoricoDevolucion.strCodigo = MaterialCasa.strCodigo)
   INNER JOIN Bodega ON (MaterialCasa.strCodigo = Bodega.strCodigo)
   WHERE Bodega.strBodega = @strBodega
   GROUP BY HistoricoDevolucion.strCodigo, MaterialCasa.strDescripcion, Bodega.strBodega
   HAVING SUM(HistoricoDevolucion.dblRetiro) > SUM(HistoricoDevolucion.dblDevuelto)
   ORDER BY MaterialCasa.strDescripcion
ELSE IF @strModulo='CC'
BEGIN
   IF @strBodega = '12001'
   BEGIN
      IF @strModoBusq = 'C'
         SET @strSQL = 'SELECT MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad FROM MaterialCasa 
         WHERE strCodigo IN (''103691'', ''105004'', ''98669'', ''93204'') AND (strCodigo LIKE ''%' + @strValor + ''' OR strDescripcion LIKE ''%' + @strValor + '%'')
         ORDER BY MaterialCasa.strDescripcion'
      ELSE
         SET @strSQL = 'SELECT MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad FROM MaterialCasa 
         WHERE strCodigo IN (''103691'', ''105004'', ''98669'', ''93204'') AND strCodigo = ''' + @strValor + '''
         ORDER BY strDescripcion'
   END
   ELSE
   BEGIN
      IF @strModoBusq = 'C'
         SET @strSQL = 'SELECT DISTINCT MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad 
		FROM MaterialCasa INNER JOIN Bodega ON (MaterialCasa.strCodigo = Bodega.strCodigo)
         WHERE MaterialCasa.strDescripcion <> '''' AND Bodega.strBodega = ''' + @strBodega + ''' AND (MaterialCasa.strCodigo LIKE ''%' + @strValor + ''' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')
         ORDER BY MaterialCasa.strDescripcion'
      ELSE
         SET @strSQL = 'SELECT DISTINCT MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad 
		FROM MaterialCasa INNER JOIN Bodega ON (MaterialCasa.strCodigo = Bodega.strCodigo)
         WHERE MaterialCasa.strDescripcion <> '''' AND Bodega.strBodega = ''' + @strBodega + ''' AND MaterialCasa.strCodigo = ''' + @strValor + '''
         ORDER BY MaterialCasa.strDescripcion'
   END
   EXEC(@strSQL)
END
ELSE IF @strModulo = 'INF'
BEGIN
	SET @strSQL = 'SELECT MaterialCasa.CODROSS, MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, StockMovil.dblCantidad
	FROM MaterialCasa INNER JOIN StockMovil ON (MaterialCasa.strCodigo = StockMovil.strCodigo)
	WHERE MaterialCasa.strTipoUnidad = ''M'' AND StockMovil.dblCantidad > 0 AND StockMovil.strMovil = ''' + @strBodega + ''''

	IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
	SET @strSQL = @strSQL + ' ORDER BY MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
ELSE IF @strModulo = 'INF2'
BEGIN
	SET @strSQL = 'SELECT MaterialCasa.CODROSS, MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, SUM(StockMovil.dblCantidad) AS dblCantidad
	FROM MaterialCasa INNER JOIN StockMovil ON (MaterialCasa.strCodigo = StockMovil.strCodigo)
	INNER JOIN General..Movil AS Moviles ON (StockMovil.strMovil = Moviles.strMovil)
	WHERE MaterialCasa.strTipoUnidad = ''M'' AND StockMovil.dblCantidad > 0 AND Moviles.strContrato = ''' + @strBodega + ''''

	IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
	SET @strSQL = @strSQL + ' GROUP BY MaterialCasa.CODROSS, MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad ORDER BY MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
ELSE IF @strModulo = 'GT'

BEGIN
	SET @strSQL = 'SELECT Bodega.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, Bodega.dblStock
	FROM Bodega INNER JOIN MaterialCasa ON (Bodega.strCodigo = MaterialCasa.strCodigo AND MaterialCasa.strTipoUnidad = ''M'')
	WHERE strBodega = ''12001'' AND MaterialCasa.strDescripcion <> '''' AND Bodega.dblStock > 0 '
	IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (Bodega.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND Bodega.strCodigo = ''' + @strValor + ''''

	SET @strSQL = @strSQL + ' ORDER BY MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
ELSE IF @strModulo = 'DC'
BEGIN
	SET @strSQL = 'SELECT MaterialCasa.CODROSS, MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, MAX(CaratulaOC.dtmFecha) AS dtmFecha
	FROM MaterialCasa LEFT JOIN DetalleOrdenC ON (MaterialCasa.strCodigo = DetalleOrdenC.strCodigo)
	LEFT JOIN CaratulaOC ON (CaratulaOC.dblNumero = DetalleOrdenC.dblNumero) WHERE MaterialCasa.strDescripcion <> '''''
	IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
	SET @strSQL = @strSQL + ' GROUP BY MaterialCasa.CODROSS, MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad
	ORDER BY CaratulaOC.dtmFecha DESC, MaterialCasa.strDescripcion'
	EXEC(@strSQL)
END
ELSE IF @strModulo='AJ'
BEGIN
   IF @strModoBusq='C'
      SELECT Bodega.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, Bodega.dblStock
      FROM Bodega LEFT JOIN MaterialCasa ON (Bodega.strCodigo=MaterialCasa.strCodigo)
      WHERE (MaterialCasa.strCodigo LIKE @strValor+'%' OR MaterialCasa.strDescripcion LIKE '%'+@strValor+'%') AND 
      Bodega.strBodega = @strBodega AND Bodega.dblStock > 0 
      ORDER BY MaterialCasa.strDescripcion
   ELSE 
      SELECT Bodega.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, Bodega.dblStock
      FROM Bodega LEFT JOIN MaterialCasa ON (Bodega.strCodigo=MaterialCasa.strCodigo)
      WHERE (MaterialCasa.strCodigo = @strValor OR MaterialCasa.strDescripcion = @strValor) AND 
      Bodega.strBodega = @strBodega AND Bodega.dblStock > 0 
END
ELSE IF @strModulo = 'KDX'
BEGIN
	SET @strSQL = 'SELECT strCodigo, strDescripcion FROM MaterialCasa'
	SET @strSQL = @strSQL + ' WHERE strDescripcion <>'''''
    IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (strCodigo LIKE ''' + @strValor + '%'' OR strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND strCodigo = ''' + @strValor + ''''
    SET @strSQL = @strSQL + ' ORDER BY LTRIM(strDescripcion)'
	EXEC(@strSQL)
END
ELSE IF @strModulo = 'BSC'
BEGIN
	SET @strValor = REPLACE(RTRIM(@strValor), ' ', '%')

	CREATE TABLE #tmp_tabla2 (strCodigo  VARCHAR(50), strDescripcion VARCHAR(255), strFamilia VARCHAR(255) NULL, dblEntradas NUMERIC(18, 2) NULL, dblSalidas NUMERIC(18, 2) NULL)
	
	INSERT #tmp_tabla2
	SELECT MaterialCasa.strCodigo, MaterialCasa.strDescripcion, Familia.strDetalle, 0, 0 FROM MaterialCasa LEFT JOIN Familia ON (MaterialCasa.strFamilia = Familia.strCodigo)
	WHERE strDescripcion LIKE '%' + @strValor + '%'
	
	UPDATE #tmp_tabla2
	SET dblEntradas = ISNULL((SELECT SUM(DetalleIngreso.dblCantidad) FROM DetalleIngreso INNER JOIN Ingreso ON (DetalleIngreso.dblNumero = Ingreso.dblNumero) WHERE Ingreso.strBodega = @strBodega AND DetalleIngreso.strCodigo = #tmp_tabla2.strcodigo), 0)
	
	UPDATE #tmp_tabla2
	SET dblEntradas = dblEntradas + ISNULL((SELECT SUM(ISNULL(DetalleDevolucion.dblCantidad, 0)) FROM DetalleDevolucion INNER JOIN Devolucion ON (DetalleDevolucion.dblNumero = Devolucion.dblNumero) WHERE Devolucion.strBodega = @strBodega AND DetalleDevolucion.strCodigo = #tmp_tabla2.strcodigo), 0)

	

	UPDATE #tmp_tabla2
	SET dblEntradas = dblEntradas + ISNULL((SELECT SUM(ISNULL(DetalleDevolucionCargos.dblCantidad, 0)) FROM DetalleDevolucionCargos INNER JOIN CaratulaDevolucionCargos ON (DetalleDevolucionCargos.dblNumero = CaratulaDevolucionCargos.dblNumero) WHERE CaratulaDevolucionCargos.strBodega = @strBodega AND DetalleDevolucionCargos.strCodigo = #tmp_tabla2.strcodigo), 0)
	
	UPDATE #tmp_tabla2
	SET dblSalidas = ISNULL((SELECT SUM(DetalleDespacho.dblCantidad) FROM DetalleDespacho INNER JOIN Despacho ON (DetalleDespacho.dblNumero = Despacho.dblNumero) WHERE Despacho.strBodega = @strBodega AND DetalleDespacho.strCodigo = #tmp_tabla2.strcodigo), 0)
	
	UPDATE #tmp_tabla2
	SET dblSalidas = dblSalidas + ISNULL((SELECT SUM(ISNULL(DetalleGuiaCargos.dblCantidad, 0)) FROM DetalleGuiaCargos INNER JOIN CaratulaGuiaCargo ON (DetalleGuiaCargos.dblNumero = CaratulaGuiaCargo.dblNumero) WHERE CaratulaGuiaCargo.strBodega = @strBodega AND DetalleGuiaCargos.strCodigo = #tmp_tabla2.strcodigo), 0)
	
	UPDATE #tmp_tabla2
	SET dblSalidas = dblSalidas + ISNULL((SELECT SUM(DetalleVC.dblCantidad) FROM DetalleVC INNER JOIN CaratulaVC ON (DetalleVC.dblInterno = CaratulaVC.dblInterno) WHERE CaratulaVC.strBodega = @strBodega AND DetalleVC.strCodigo = #tmp_tabla2.strcodigo), 0)
		
	SELECT * FROM #tmp_tabla2
	
	DROP TABLE #tmp_tabla2
END
ELSE IF @strModulo = 'MAT'
BEGIN
	SET @strSQL = 'SELECT MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, MaterialCasa.strFamilia
	FROM Materialcasa WHERE MaterialCasa.strDescripcion <> '''''
	IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
	SET @strSQL = @strSQL + ' ORDER BY LTRIM(MaterialCasa.strDescripcion)'
	EXEC(@strSQL)
END
ELSE IF @strModulo = 'OCA'
BEGIN
	SET @strSQL = 'SELECT MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad
	FROM Materialcasa WHERE MaterialCasa.strDescripcion <> '''' AND MaterialCasa.strFamilia = ''00050'''
	IF @strModoBusq = 'C'
		SET @strSQL = @strSQL + ' AND (MaterialCasa.strCodigo LIKE ''' + @strValor + '%'' OR MaterialCasa.strDescripcion LIKE ''%' + @strValor + '%'')'
	ELSE
		SET @strSQL = @strSQL + ' AND MaterialCasa.strCodigo = ''' + @strValor + ''''
	SET @strSQL = @strSQL + ' ORDER BY LTRIM(MaterialCasa.strDescripcion)'
	EXEC(@strSQL)
END
ELSE IF @strModulo ='VC'
BEGIN
    Select M.strCodigo as strCodigo, F.strDetalle as strFamilia, M.strDescripcion as strDescripcion, M.strUnidad as strUnidad,  M.dblValorP as dblValorP, B.dblStock as dblStock
    From Bodega as B Left Join MaterialCasa as M
    On B.strCodigo=M.strCodigo and B.strBodega=@strBodega
    Left Join Familia as F
    On M.strFamilia=F.strcodigo
    Where B.strBodega=@strBodega and ( B.strCodigo=@strValor OR M.strDescripcion like '%' + @strValor + '%' )
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getMaterialCentroCosto]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 16/04/2007
VER.: 2.0
*/
CREATE PROC [dbo].[sp_getMaterialCentroCosto]
@dblModulo NUMERIC,
@strMes VARCHAR(10),
@strAno VARCHAR(10),
@strBodega VARCHAR(10),
@strMovil VARCHAR(10) = NULL,
@strCCosto VARCHAR(10)
AS
DECLARE @strSQL VARCHAR(2000)

CREATE TABLE #tmp_materiales (strMovil VARCHAR(10) NULL, dblNumero NUMERIC, dtmFecha DATETIME, strCodigo VARCHAR(10), dblCantidad NUMERIC(18, 2))
IF @dblModulo = 0
BEGIN
   SET @strSQL = 'INSERT #tmp_materiales
   SELECT Despacho.strMovil, Despacho.dblNumero, Despacho.dtmDespacho, DetalleDespacho.strCodigo, SUM(DetalleDespacho.dblCantidad)
   FROM Despacho INNER JOIN DetalleDespacho ON (Despacho.dblNumero = DetalleDespacho.dblNumero)
   INNER JOIN MaterialCasa ON (DetalleDespacho.strCodigo = MaterialCasa.strCodigo)
   INNER JOIN Familia ON (MaterialCasa.strFamilia = Familia.strCodigo)
   WHERE MONTH(Despacho.dtmDespacho) = ' + @strMes + ' AND YEAR(Despacho.dtmDespacho) = ' + @strAno + ' AND Despacho.strBodega = ''' + @strBodega + '''' 
   IF @strCCosto <> 'all' SET @strSQL = @strSQL + ' AND Familia.strCentroCosto = ''' + @strCCosto + ''''   
   IF @strMovil <> 'all' SET @strSQL = @strSQL + ' AND Despacho.strMovil = ''' + @strMovil + ''''
   SET @strSQL = @strSQL + ' GROUP BY Despacho.strMovil, Despacho.dblNumero, Despacho.dtmDespacho, DetalleDespacho.strCodigo'
END
ELSE IF @dblModulo = 1
BEGIN
   SET @strSQL = 'INSERT #tmp_materiales
   SELECT NULL, Ingreso.dblNum AS dblNumero, Ingreso.dtmFecha, DetalleIngreso.strCodigo, SUM(DetalleIngreso.dblCantidad)
   FROM Ingreso INNER JOIN DetalleIngreso ON (Ingreso.dblNumero = DetalleIngreso.dblNumero)
   INNER JOIN MaterialCasa ON (DetalleIngreso.strCodigo = MaterialCasa.strCodigo)
   INNER JOIN Familia ON (MaterialCasa.strFamilia = Familia.strCodigo)
   WHERE MONTH(Ingreso.dtmFecha) = ' + @strMes + ' AND YEAR(Ingreso.dtmFecha) = ' + @strAno + ' AND Ingreso.strBodega = ''' + @strBodega + ''''
   IF @strCCosto <> 'all' SET @strSQL = @strSQL + ' AND Familia.strCentroCosto = ''' + @strCCosto + ''''
   SET @strSQL = @strSQL + ' GROUP BY Ingreso.dblNum, Ingreso.dtmFecha, DetalleIngreso.strCodigo'
END
ELSE IF @dblModulo = 2
BEGIN
   SET @strSQL = 'INSERT #tmp_materiales
   SELECT Devolucion.strMovil, Devolucion.dblNum AS dblNumero, Devolucion.dtmFecha, DetalleDevolucion.strCodigo, SUM(DetalleDevolucion.dblCantidad)
   FROM Devolucion INNER JOIN DetalleDevolucion ON (Devolucion.dblNumero = DetalleDevolucion.dblNumero)
   INNER JOIN MaterialCasa ON (DetalleDevolucion.strCodigo = MaterialCasa.strCodigo)
   INNER JOIN Familia ON (MaterialCasa.strFamilia = Familia.strCodigo)
   WHERE MONTH(Devolucion.dtmFecha) = ' + @strMes + ' AND YEAR(Devolucion.dtmFecha) = ' + @strAno + ' AND Devolucion.strBodega = ''' + @strBodega + ''''
   IF @strMovil <> 'all' SET @strSQL = @strSQL + ' AND Devolucion.strMovil = ''' + @strMovil + '''' 
   IF @strCCosto <> 'all'  SET @strSQL = @strSQL + ' AND Familia.strCentroCosto = ''' + @strCCosto + ''''
   SET @strSQL = @strSQL + '  GROUP BY Devolucion.strMovil, Devolucion.dblNum, Devolucion.dtmFecha, DetalleDevolucion.strCodigo'
END
IF @dblModulo = 3
BEGIN
   SET @strSQL = 'INSERT #tmp_materiales
   SELECT 0,CaratulaVC.dblNumero, CaratulaVC.dtmVC, DetalleVC.strCodigo, SUM(DetalleVC.dblCantidad)
   FROM CaratulaVC INNER JOIN DetalleVC ON (CaratulaVC.dblInterno = DetalleVC.dblInterno)
   INNER JOIN MaterialCasa ON (DetalleVC.strCodigo = MaterialCasa.strCodigo)
   INNER JOIN Familia ON (MaterialCasa.strFamilia = Familia.strCodigo)
   WHERE MONTH(CaratulaVC.dtmVC) = ' + @strMes + ' AND YEAR(CaratulaVC.dtmVC) = ' + @strAno + ' AND CaratulaVC.strBodega = ''' + @strBodega + '''' 
   IF @strCCosto <> 'all' SET @strSQL = @strSQL + ' AND Familia.strCentroCosto = ''' + @strCCosto + ''''   
   IF @strMovil <> 'all' SET @strSQL = @strSQL + ' AND CaratulaVC.strSolicita = ''%'''
   SET @strSQL = @strSQL + ' GROUP BY CaratulaVC.dblNumero, CaratulaVC.dtmVC, DetalleVC.strCodigo'
END

EXEC(@strSQL)

SELECT #tmp_materiales.strMovil, #tmp_materiales.dblNumero, CONVERT(VARCHAR, #tmp_materiales.dtmFecha, 103) AS dtmFch, #tmp_materiales.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, #tmp_materiales.dblCantidad,
(SELECT TOP 1 dblPrecio FROM HistoricoPrecio WHERE strBodega = @strBodega AND strCodigo =  #tmp_materiales.strCodigo AND Fecha <= CONVERT(NUMERIC, @strAno + @strMes) ORDER BY Fecha DESC) AS dblPrecio,
#tmp_materiales.dblCantidad * (SELECT TOP 1 dblPrecio FROM HistoricoPrecio WHERE strBodega = @strBodega AND strCodigo =  #tmp_materiales.strCodigo AND Fecha <= CONVERT(NUMERIC, @strAno + @strMes) ORDER BY Fecha DESC) AS dblTotal
FROM #tmp_materiales INNER JOIN MaterialCasa ON (#tmp_materiales.strCodigo = MaterialCasa.strCodigo)  

DROP TABLE #tmp_materiales
GO
/****** Object:  StoredProcedure [dbo].[sp_getKardex]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 02/06/2008
VER: 1.9
*/
CREATE      Proc [dbo].[sp_getKardex]
@strCodigo as Char(10),
@strBodega as Char(5)
AS
CREATE TABLE #kardex (dblNumero NUMERIC, dtmFecha DATETIME, dblEntradas NUMERIC(18, 2), dblSalidas NUMERIC(18, 2),
strCodigo VARCHAR(10) NULL, strDescripcion VARCHAR(100) NULL, strDoc VARCHAR(5), dblOrden NUMERIC)

INSERT #kardex
SELECT Ingreso.dblNum, Ingreso.dtmFecha, DetalleIngreso.dblCantidad, 0, NULL, 
CASE Ingreso.intCC WHEN 1 THEN 'Caja Chica' ELSE Proveedor.strNombre END, 'ING', 1
FROM DetalleIngreso LEFT JOIN Ingreso ON (Ingreso.dblNumero = DetalleIngreso.dblNumero)
LEFT JOIN CaratulaOC ON (Ingreso.dblOrdenC = CaratulaOC.dblNumero)
LEFT JOIN Proveedor ON (CaratulaOC.strProveedor = Proveedor.strCodigo)
WHERE DetalleIngreso.strCodigo = @strCodigo AND Ingreso.strBodega = @strBodega and Ingreso.intVigente=1

INSERT #kardex
SELECT Devolucion.dblNum, Devolucion.dtmFecha, DetalleDevolucion.dblCantidad, 0,  Devolucion.strMovil, NULL, 'DEV', 2
FROM DetalleDevolucion LEFT JOIN Devolucion ON (Devolucion.dblNumero = DetalleDevolucion.dblNumero)
WHERE DetalleDevolucion.strCodigo = @strCodigo AND Devolucion.strBodega = @strBodega and Devolucion.intVigente=1

INSERT #kardex
SELECT Despacho.dblNumero, Despacho.dtmDespacho, 0, DetalleDespacho.dblCantidad, Despacho.strMovil, NULL, 'DES', 3
FROM DetalleDespacho LEFT JOIN Despacho ON (Despacho.dblNumero = DetalleDespacho.dblNumero)
WHERE DetalleDespacho.strCodigo = @strCodigo AND Despacho.strBodega = @strBodega and Despacho.intVigente=1

INSERT #kardex
SELECT C.dblNumero, C.dtmFecha, 0, D.dblCantidad, D.strCargo, NULL, 'CAR', 4
FROM DetalleGuiaCargos AS D LEFT JOIN CaratulaGuiaCargo AS C ON (C.dblNumero = D.dblNumero)
WHERE D.strCodigo = @strCodigo AND C.strBodega = @strBodega

INSERT #kardex
SELECT CaratulaVC.dblNumero, CaratulaVC.dtmVC, 0, DetalleVC.dblCantidad, DetalleVC.strPartida, Partidas.strDescripcion, 'VC', 5
FROM DetalleVC LEFT JOIN CaratulaVC ON (CaratulaVC.dblInterno = DetalleVC.dblInterno)
LEFT JOIN General..Partida As Partidas ON (DetalleVC.strPartida = Partidas.strCodigo AND Partidas.strBodega=@strBodega)
WHERE DetalleVC.strCodigo = @strCodigo AND CaratulaVC.strBodega=@strBodega

INSERT #kardex
SELECT C.dblNum, C.dtmFecha, D.dblCantidad, 0, D.strCargo, NULL, 'DCAR', 6
FROM DetalleDevolucionCargos as D LEFT JOIN CaratulaDevolucionCargos as C ON (C.dblNumero = D.dblNumero)
WHERE D.strCodigo = @strCodigo AND C.strBodega = @strBodega and C.intVigente=1

INSERT #kardex
SELECT DISTINCT CaratulaTerminoBodega.dblNumero, CaratulaTerminoBodega.dtmFecha, 0, DetalleTerminoBodega.dblStock, CaratulaTerminoBodega.strBodega, Bodegas.strDetalle, 'TB', 7
FROM DetalleTerminoBodega INNER JOIN CaratulaTerminoBodega ON (CaratulaTerminoBodega.dblNumero = DetalleTerminoBodega.dblNumero)
INNER JOIN General..Tablon AS Bodegas ON (CaratulaTerminoBodega.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
WHERE DetalleTerminoBodega.strCodigo = @strCodigo AND CaratulaTerminoBodega.strBodega = @strBodega

-- PAAT - 02/07/2007 --
IF @strBodega='12001'
BEGIN
INSERT #kardex
SELECT DISTINCT CaratulaTerminoBodega.dblNumero, CaratulaTerminoBodega.dtmFecha, DetalleTerminoBodega.dblDevolucion, 0, CaratulaTerminoBodega.strBodega, Bodegas.strDetalle, 'DB', 8
FROM DetalleTerminoBodega INNER JOIN CaratulaTerminoBodega ON (CaratulaTerminoBodega.dblNumero = DetalleTerminoBodega.dblNumero)
INNER JOIN General..Tablon AS Bodegas ON (CaratulaTerminoBodega.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
WHERE DetalleTerminoBodega.strCodigo = @strCodigo --AND CaratulaTerminoBodega.strBodega = '12001'
END
ELSE
BEGIN
INSERT #kardex
SELECT DISTINCT CaratulaTerminoBodega.dblNumero, CaratulaTerminoBodega.dtmFecha, DetalleTerminoBodega.dblDevolucion, 0, CaratulaTerminoBodega.strBodega, Bodegas.strDetalle, 'DB', 9
FROM DetalleTerminoBodega INNER JOIN CaratulaTerminoBodega ON (CaratulaTerminoBodega.dblNumero = DetalleTerminoBodega.dblNumero)
INNER JOIN General..Tablon AS Bodegas ON (CaratulaTerminoBodega.strBodega = Bodegas.strCodigo AND Bodegas.strTabla = 'bodeg')
WHERE DetalleTerminoBodega.strCodigo = @strCodigo AND CaratulaTerminoBodega.strBodega = '12001'
END
--
SELECT kardex.dblNumero, CONVERT(VARCHAR, kardex.dtmFecha, 103) as dtmFch, kardex.dblEntradas, kardex.dblSalidas, kardex.strCodigo, kardex.strDescripcion, Personal.strNombre, kardex.strDoc
FROM #kardex AS kardex LEFT JOIN General..Movil AS Moviles ON (kardex.strCodigo = Moviles.strMovil AND Moviles.strBodega IN (@strBodega, '1200A'))
LEFT JOIN General..PersonalObras AS Personal ON (Moviles.strRut = Personal.strRut AND Personal.strBodega=@strBodega)
ORDER BY kardex.dtmFecha, kardex.dblOrden

DROP TABLE #kardex

EXEC sp_CargarBodega @strBodega
--ahora se ejecuta en forma periodica con el planificador de tareas
--EXEC sp_setCargarStockMoviles @strBodega
GO
/****** Object:  StoredProcedure [dbo].[sp_CambiaEstado]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
AUTOR: RFGP
FECHA: 27/09/2007
VER: 2.2
*/
CREATE  PROCEDURE [dbo].[sp_CambiaEstado]
@strModulo VARCHAR(3),
@dblNumero NUMERIC = NULL,
@intEstado NUMERIC = NULL,
@strUsuario VARCHAR(50) = NULL,
@strDetalle VARCHAR(255) = '',
@dblNumSol NUMERIC = 0
AS
DECLARE @dblTotCantOC NUMERIC(18, 2), @dblTotCantSM NUMERIC(18, 2), @intEstSM NUMERIC, @strTipoDoc VARCHAR(5), @strCodigo VARCHAR(50)

IF @strModulo = 'SM' --SOLICITUD DE MATERIALES
BEGIN
	SET @strTipoDoc = 'SM'
	
	UPDATE CaratulaSM SET strEstado = @intEstado WHERE dblNumero = @dblNumero
	IF @intEstado = 4 UPDATE DetalleSM SET dblCantidadAut = 0 WHERE dblNumero = @dblNumero
END
ELSE IF @strModulo = 'OC' --ORDEN DE COMPRA
BEGIN
	SET @strTipoDoc = 'OC'
	
	UPDATE CaratulaOC SET strEstado = @intEstado WHERE dblNumero = @dblNumero
	IF @intEstado = 5
	BEGIN
		UPDATE DetalleSM SET dblCantidadAut = 0 WHERE dblNumero = @dblNumSol AND strCodigo IN (SELECT strCodigo FROM detalleordenc WHERE dblnumero = @dblNumero)
		UPDATE DetalleOrdenC SET dblCantidad = 0 WHERE dblNumero = @dblNumero

		EXEC @dblTotCantSM = sp_getTotalCantSM @dblNumSol
		EXEC @dblTotCantOC = sp_getTotalCantOC @dblNumSol
		IF @dblTotCantSM = @dblTotCantOC SET @intEstSM = 9 ELSE SET @intEstSM = 8
		UPDATE CaratulaSM SET strEstado = @intEstSM WHERE dblNumero = @dblNumSol
		INSERT INTO Autorizaciones VALUES ('SM', @dblNumSol, GETDATE(), @strUsuario, CONVERT(VARCHAR, @intEstSM))
	END
END
ELSE IF @strModulo = 'FSM' --FINALIZA SOLICITUD DE MATERIALES
BEGIN
	SET @strTipoDoc = 'SM'
	SET @dblNumero = @dblNumSol

	EXEC @dblTotCantOC = sp_getTotalCantOC @dblNumSol
	EXEC @dblTotCantSM = sp_getTotalCantSM @dblNumSol
	IF @dblTotCantOC = 0
	BEGIN
		SET @intEstado = 5
		UPDATE CaratulaSM SET strEstado = 5 WHERE dblNumero = @dblNumSol
		UPDATE DetalleSM SET dblCantidadAut = 0 WHERE dblNumero = @dblNumSol
	END
	ELSE
	BEGIN
		SET @intEstado = 7
		UPDATE CaratulaSM SET strEstado = 7 WHERE dblNumero = @dblNumSol
		DECLARE @dblCantOC NUMERIC(18, 2)
		DECLARE Detalle_cursor CURSOR FOR
		SELECT strCodigo, ISNULL((SELECT SUM(dblCantidad) FROM DetalleOrdenC WHERE dblNumSol = DetalleSM.dblNumero AND strCodigo = DetalleSM.strCodigo), 0) AS dblCantOC
		FROM DetalleSM WHERE dblNumero = @dblNumSol AND dblCantidadAut>ISNULL((SELECT SUM(dblCantidad) FROM DetalleOrdenC 
		WHERE dblNumSol = DetalleSM.dblNumero AND strCodigo = DetalleSM.strCodigo), 0)
		OPEN Detalle_cursor
		FETCH NEXT FROM Detalle_cursor INTO @strCodigo, @dblCantOC
		WHILE @@FETCH_STATUS = 0 
		BEGIN
			UPDATE DetalleSM SET dblCantidadAut = @dblCantOC WHERE dblNumero = @dblNumSol AND strCodigo = @strCodigo
			FETCH NEXT FROM Detalle_cursor INTO @strCodigo, @dblCantOC
		END
		CLOSE Detalle_cursor
		DEALLOCATE Detalle_cursor
	END
END
ELSE IF @strModulo = 'OCV' --VB ORDEN COMPRA
BEGIN
	SET @strTipoDoc = 'OC'
	UPDATE CaratulaOC SET strEstado = @intEstado WHERE dblNumero = @dblNumero
END
ELSE IF @strModulo = 'AOC' --ANULA ORDEN DE COMPRA
BEGIN
	SET @strTipoDoc = 'OC'
	UPDATE CaratulaOC SET strEstado = @intEstado WHERE dblNumero = @dblNumero
	UPDATE DetalleOrdenC SET dblNumSol = NULL WHERE dblNumero = @dblNumero
	UPDATE CaratulaSM SET strEstado = 6 WHERE dblNumero = @dblNumSol
END
ELSE IF @strModulo = 'CSM' --COTIZA SOLICITUD DE MATERIALES
BEGIN
	SET @strTipoDoc = 'SM'
	UPDATE CaratulaSM SET strEstado = @intEstado WHERE dblNumero = @dblNumero
	END
ELSE IF @strModulo = 'GI' --GUIA DE INGRESO
BEGIN
	SET @strTipoDoc = 'GI'
	UPDATE CaratulaOC SET strEstado = 11 WHERE dblNumero = @dblNumSol
	INSERT INTO Autorizaciones VALUES ('OC', @dblNumSol, GETDATE(), @strUsuario, '11')
	UPDATE Ingreso SET dblEstado = 5, dblOrdenC = NULL WHERE dblNumero = @dblNumero
	UPDATE DetalleIngreso SET dblCantidad = 0, dblValor = 0, dblNumOC = NULL WHERE dblNumero = @dblNumero
END
ELSE IF @strModulo = 'CC' -- CAJA CHICA
BEGIN
	SET @strTipoDoc = 'CC'
	UPDATE CaratulaCC SET dblEstado = @intEstado WHERE dblNumero = @dblNumero
END
ELSE IF @strModulo = 'GD'
BEGIN
	SET @strTipoDoc = 'GD'
	UPDATE Despacho SET intVigente = @intEstado WHERE dblNumero = @dblNumero
	
	IF @intEstado = 1
	BEGIN
		DECLARE @strBodega VARCHAR(50), @strCodMat VARCHAR(50), @dblCantMat NUMERIC(18, 2)
		DECLARE tmp_cursor CURSOR FOR
		SELECT Despacho.strBodega, DetalleDespacho.strCodigo, DetalleDespacho.dblCantidad * (-1) FROM Despacho INNER JOIN DetalleDespacho ON (Despacho.dblNumero = DetalleDespacho.dblNumero) WHERE Despacho.dblNumero = @dblNumero
		OPEN tmp_cursor
		FETCH NEXT FROM tmp_cursor INTO @strBodega, @strCodMat, @dblCantMat
		WHILE @@FETCH_STATUS = 0
		BEGIN
			EXEC sp_ActualizaBodega @strBodega, @strCodMat, @dblCantMat
			FETCH NEXT FROM tmp_cursor INTO @strBodega, @strCodMat, @dblCantMat
		END
		CLOSE tmp_cursor	
		--EXEC sp_setCargarStockMovil @strProveedor
	END
END
INSERT INTO Autorizaciones VALUES (@strTipoDoc, @dblNumero, GETDATE(), @strUsuario, CONVERT(VARCHAR, @intEstado))
GO
/****** Object:  StoredProcedure [dbo].[sp_AgregaProveedor]    Script Date: 07/26/2012 16:15:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
MODIF: RFGP
FECHA: 26/06/2007
VER.: 1.1
*/
CREATE      PROCEDURE [dbo].[sp_AgregaProveedor] 
@strCodigo VARCHAR(5),
@strRut VARCHAR(15),
@strNombre VARCHAR(50),
@strDireccion VARCHAR(50),
@strComuna VARCHAR(5),
@strFono VARCHAR(20),
@strFax VARCHAR(20),
@strContacto VARCHAR(50),
@strCorreo VARCHAR(100) = NULL,
@strBodega VARCHAR(5)=NULL
AS
DECLARE @strCI VARCHAR(8), @strPaso VARCHAR(10), @dblError NUMERIC
SET @strCI = '' 
SET @strPaso = '' 
SET @dblError = 0

DECLARE tmp_cursor CURSOR FOR
SELECT strCodigo FROM Proveedor WHERE strRut = @strRut
OPEN tmp_cursor
FETCH NEXT FROM tmp_cursor INTO @strPaso
IF @@FETCH_STATUS = 0 SET @dblError = 1
CLOSE tmp_cursor
DEALLOCATE tmp_cursor

IF @dblError = 0
BEGIN
	SET @strRut = REPLACE(@strRut, '.', '')
	SET @strCI = SUBSTRING(@strRut, 1, LEN(@strRut)-2)
	SET @strCodigo = REPLICATE('0', 5 - LEN(@strCodigo)) + @strCodigo;
	
	UPDATE Correlativo SET dblNumero=@strCodigo WHERE strCodigo='PRV'
		
	INSERT Proveedor VALUES(@strCodigo, @strRut, @strCI, @strNombre, @strDireccion, @strComuna, @strFono, @strFax, @strContacto, 1, 1, @strCorreo, @strBodega, GETDATE())
	
	EXEC sp_ActualizaCorrelativo 'PRV'
END
SELECT @dblError AS dblError
GO
/****** Object:  StoredProcedure [dbo].[sp_getTotalMaterial]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getTotalMaterial]
/*RFGP*/
@strPartida VARCHAR(20),
@strBodega CHAR(100),
@strCodigo VARCHAR(50)
AS
DECLARE @dblTotal NUMERIC, @dtmFecha DATETIME, @dblCantidad NUMERIC(18,2), @dblPrecio NUMERIC
SET @dblTotal = 0
DECLARE DetVC CURSOR FOR
SELECT CaratulaVC.dtmVC, SUM(DetalleVC.dblCantidad) AS dblCantidad
FROM DetalleVC INNER JOIN CaratulaVC ON (DetalleVC.dblInterno=CaratulaVC.dblInterno)
WHERE DetalleVC.strPartida=@strPartida AND CaratulaVC.strBodega=@strBodega AND DetalleVC.strCodigo=@strCodigo
GROUP BY CaratulaVC.dtmVC ORDER BY CaratulaVC.dtmVC
OPEN DetVC
FETCH NEXT FROM DetVC INTO @dtmFecha, @dblCantidad
WHILE @@FETCH_STATUS=0
BEGIN
   EXEC @dblPrecio = sp_getPrecio @strCodigo, @strBodega, @dtmFecha
   SET @dblTotal = @dblTotal + (@dblPrecio * @dblCantidad)
   FETCH NEXT FROM DetVC INTO @dtmFecha, @dblCantidad
END
CLOSE DetVC
DEALLOCATE DetVC
RETURN @dblTotal
GO
/****** Object:  StoredProcedure [dbo].[sp_getConsumoMaterialN1]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE      PROCEDURE [dbo].[sp_getConsumoMaterialN1]
/*RFGP*/
@strUsuario AS CHAR(100),
@strBodega AS CHAR(100)
AS
DECLARE @strTabla CHAR(150), @strCodPart VARCHAR(20), @strDesPart VARCHAR(100), 
@strUniPart VARCHAR(5), @strCodMat CHAR(10), @dblTotal NUMERIC

SET @strTabla='CM_N1_'+ RTRIM(@strUsuario) + '_TMP'
EXEC('CREATE TABLE '+@strTabla+' (IdPartida VARCHAR(20), strPartida VARCHAR(100), strUnidad VARCHAR(5), dblTotal NUMERIC(18,2))')

DECLARE detalle_cursor CURSOR FOR
SELECT DetalleVC.strPartida, Partida.strDescripcion, Partida.strUnidad FROM DetalleVC
INNER JOIN CaratulaVC ON (DetalleVC.dblInterno=CaratulaVC.dblInterno)
INNER JOIN General..Partida AS Partida ON (DetalleVC.strPartida=Partida.strCodigo) AND Partida.strBodega=@strBodega
WHERE CaratulaVC.strBodega=@strBodega
GROUP BY DetalleVC.strPartida, Partida.strDescripcion, Partida.strUnidad
ORDER BY DetalleVC.strPartida

OPEN detalle_cursor
FETCH NEXT FROM detalle_cursor INTO @strCodPart, @strDesPart, @strUniPart
WHILE @@FETCH_STATUS=0
BEGIN
   EXEC @dblTotal = sp_getTotalPartida @strCodPart, @strBodega
   EXEC('INSERT INTO '+@strTabla+' VALUES ('''+@strCodPart+''','''+@strDesPart+''','''+@strUniPart+''','+@dblTotal+')')
   FETCH NEXT FROM detalle_cursor INTO @strCodPart, @strDesPart, @strUniPart
END
CLOSE detalle_cursor
DEALLOCATE detalle_cursor

EXEC('SELECT * FROM ' + @strTabla + ' ORDER BY dblTotal DESC' )

EXEC('DROP TABLE '+@strTabla)
GO
/****** Object:  StoredProcedure [dbo].[sp_getConsumoMateriales]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 04/04/2007
VER.: 2.0
*/
CREATE    PROC [dbo].[sp_getConsumoMateriales]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strPartida VARCHAR(50) = NULL,
@strMaterial VARCHAR(50) = NULL
AS
DECLARE @strCodigo VARCHAR(10), @dblTotal NUMERIC(18)
CREATE TABLE #tmp_materiales (strCodigo VARCHAR(50), dblCantidad NUMERIC(18, 2), dblTotal NUMERIC(18))
IF @dblModulo = 0
BEGIN 
   INSERT #tmp_materiales
   SELECT DetalleVC.strPartida, 0, 0 FROM DetalleVC
   INNER JOIN CaratulaVC ON (DetalleVC.dblInterno=CaratulaVC.dblInterno)
   WHERE CaratulaVC.strBodega = @strBodega
   GROUP BY DetalleVC.strPartida
   ORDER BY DetalleVC.strPartida
   
   DECLARE cursor_partida CURSOR FOR
   SELECT strCodigo FROM #tmp_materiales
   OPEN cursor_partida
   FETCH NEXT FROM cursor_partida INTO @strCodigo
   WHILE @@FETCH_STATUS=0
   BEGIN
      EXEC @dblTotal = sp_getTotalPartida 0, @strCodigo, @strBodega
      UPDATE #tmp_materiales SET dblTotal = @dblTotal WHERE strCodigo = @strCodigo
      FETCH NEXT FROM cursor_partida INTO @strCodigo
   END
   CLOSE cursor_partida
   DEALLOCATE cursor_partida

   SELECT #tmp_materiales.strCodigo, Partida.strDescripcion, Partida.strUnidad, #tmp_materiales.dblTotal 
   FROM #tmp_materiales INNER JOIN General..Partida AS Partida ON (#tmp_materiales.strCodigo=Partida.strCodigo AND Partida.strBodega=@strBodega)
   ORDER BY #tmp_materiales.dblTotal DESC
END
ELSE IF @dblModulo = 1
BEGIN
   INSERT #tmp_materiales
   SELECT MaterialCasa.strCodigo, SUM(DetalleVC.dblCantidad), 0
   FROM MaterialCasa INNER JOIN DetalleVC ON (MaterialCasa.strCodigo = DetalleVC.strCodigo)
   INNER JOIN CaratulaVC ON (DetalleVC.dblInterno=CaratulaVC.dblInterno)
   WHERE DetalleVC.strPartida=@strPartida AND CaratulaVC.strBodega=@strBodega
   GROUP BY MaterialCasa.strCodigo
   
   DECLARE material_cursor CURSOR FOR
   SELECT strCodigo FROM #tmp_materiales
   OPEN material_cursor
   FETCH NEXT FROM material_cursor INTO @strCodigo
   WHILE @@FETCH_STATUS=0
   BEGIN
      EXEC @dblTotal = sp_getTotalPartida 1, @strPartida, @strBodega, @strCodigo
      UPDATE #tmp_materiales SET dblTotal = @dblTotal WHERE strCodigo = @strCodigo
      FETCH NEXT FROM material_cursor INTO @strCodigo
   END
   CLOSE material_cursor
   DEALLOCATE material_cursor

   SELECT #tmp_materiales.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, #tmp_materiales.dblCantidad, #tmp_materiales.dblTotal
   FROM #tmp_materiales INNER JOIN  MaterialCasa ON (MaterialCasa.strCodigo = #tmp_materiales.strCodigo)
   ORDER BY dblTotal DESC
END
ELSE IF @dblModulo = 2
   SELECT DetalleVC.dblInterno, CaratulaVC.dblNumero, CONVERT(VARCHAR, CaratulaVC.dtmVC, 103) AS dtmFecha, DetalleVC.dblCantidad, Personal.strNombre
   FROM DetalleVC INNER JOIN CaratulaVC ON (DetalleVC.dblInterno = CaratulaVC.dblInterno)
   LEFT JOIN General..PersonalObras AS Personal ON (CaratulaVC.strSolicita=Personal.strRut)
   WHERE CaratulaVC.strBodega=@strBodega AND DetalleVC.strPartida=@strPartida AND DetalleVC.strCodigo=@strMaterial
   ORDER BY DetalleVC.dblCantidad DESC

DROP TABLE #tmp_materiales
GO
/****** Object:  StoredProcedure [dbo].[sp_setAgregaDevolucionCargos]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 30/10/2007
VER: 2.2
*/
CREATE      PROC [dbo].[sp_setAgregaDevolucionCargos]
@strModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50),
@strCargo VARCHAR(50)
AS
DECLARE @dblError NUMERIC, @dblCorrelativo NUMERIC, @dblInterno NUMERIC, @tmp_cursor CURSOR 
SET @dblError = 0

UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strCodigo='DC' AND strBodega = @strBodega
SET @tmp_cursor = CURSOR FOR
SELECT dblNumero FROM Correlativo WHERE strCodigo = 'DC' AND strBodega = @strBodega
OPEN @tmp_cursor
FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
IF @@FETCH_STATUS <> 0 SET @dblError = 1 --no se pudo obtener el correlativo
CLOSE @tmp_cursor

IF @dblError = 0
BEGIN
	INSERT CorrelativoDoc VALUES (@strUsuario, 'DC', @dblCorrelativo, GETDATE())
	SET @tmp_cursor = CURSOR FOR
	SELECT MAX(dblNumero) AS dblNumero FROM CorrelativoDoc 
	WHERE strUsuario = @strUsuario AND strTipoDoc = 'DC' AND dblCorrelativoUsu = @dblCorrelativo
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblInterno
	IF @@FETCH_STATUS <> 0 SET @dblError = 2 --no se pudo obtener el numero interno
	CLOSE @tmp_cursor
	
	IF @dblError = 0
	BEGIN
		INSERT CaratulaDevolucionCargos VALUES (@dblInterno, @dblCorrelativo, GETDATE(), @strCargo, @strBodega, 1)
	
		INSERT DetalleDevolucionCargos
		SELECT @dblInterno, strCodigo, dblCantidad, @strCargo FROM Detalle_TMP 
		WHERE strUsuario = @strUsuario AND strTipoDoc = 'CV' AND dblValor = 1
	
		INSERT HistoricoDevolucion
		SELECT @dblInterno, @strCargo , strCodigo, 0, dblCantidad, GETDATE(), @strBodega FROM Detalle_TMP 
		WHERE strUsuario = @strUsuario AND strTipoDoc = 'CV' AND dblValor = 1
	
		DECLARE @strCodMat VARCHAR(100), @dblCantMat NUMERIC(18, 2)
		SET @tmp_cursor = CURSOR FOR
		SELECT strCodigo, dblCantidad FROM Detalle_TMP WHERE strUsuario = @strUsuario AND strTipoDoc = 'CV' AND dblValor = 1
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @strCodMat, @dblCantMat
		WHILE @@FETCH_STATUS = 0
		BEGIN
	   		EXEC sp_ActualizaBodega @strBodega, @strCodMat, @dblCantMat
			FETCH NEXT FROM @tmp_cursor INTO @strCodMat, @dblCantMat
		END
		CLOSE @tmp_cursor
		
		DELETE FROM Detalle_TMP WHERE strUsuario = @strUsuario AND strTipoDoc = 'CV'
	END
END	
SELECT @dblError AS dblError, @dblInterno AS dblNumero, @dblCorrelativo AS dblNum
GO
/****** Object:  StoredProcedure [dbo].[sp_setDevolucionProveedor]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 23/08/2007
VER: 1.0
*/
CREATE PROCEDURE [dbo].[sp_setDevolucionProveedor]
@dblModulo NUMERIC,
@strBodega VARCHAR(50),
@strUsuario VARCHAR(50),
@dblNumero NUMERIC,
@dtmFecha VARCHAR(10),
@dblOCompra NUMERIC,
@strProveedor VARCHAR(100),
@strObservacion VARCHAR(1000)
AS
DECLARE @tmp_cursor CURSOR, @strCodigo VARCHAR(50), @dblDevuelve NUMERIC(18, 2)
IF @dblModulo = 0
BEGIN
	INSERT Despacho 
	VALUES (@dblNumero, CONVERT(DATETIME, @dtmFecha, 101), @strProveedor, NULL, NULL, @strBodega, 1)
	
	INSERT INTO DetalleDespacho 
	SELECT @dblNumero, strCodigo, dblDevuelve, NULL FROM TMPDetalleDevolucionProveedor
	WHERE strBodega = @strBodega AND strUsuario = @strUsuario
	
	SET @tmp_cursor = CURSOR FOR
	SELECT strCodigo, dblDevuelve * (-1) FROM TMPDetalleDevolucionProveedor
	WHERE strBodega = @strBodega AND strUsuario = @strUsuario
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblDevuelve
	WHILE @@FETCH_STATUS = 0
	BEGIN
		EXEC sp_ActualizaBodega @strBodega, @strCodigo, @dblDevuelve
		FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblDevuelve
	END
	CLOSE @tmp_cursor
	
	--DELETE FROM TMPDetalleDevolucionProveedor WHERE strBodega = @strBodega AND strUsuario = @strUsuario
	
	UPDATE CaratulaOC SET strObservacion = strObservacion + '. Devoluci&oacute;n a proveedor, Gu&iacute;a Despacho N&deg; ' + CONVERT(VARCHAR, dblUltima) 
	WHERE dblNumero = @dblOCompra
	
	EXEC sp_setCargarStockMovil @strProveedor
	
	IF @strObservacion<>'' EXEC sp_GrabaObservacion @dblNumero, 'GD', @strObservacion, @strUsuario
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setOrdenCompra]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 24/01/2008
VER: 2.11
*/
CREATE PROCEDURE [dbo].[sp_setOrdenCompra] 
@dblModulo NUMERIC,
@dtmFecha VARCHAR(10) = NULL,
@strProveedor VARCHAR(50) = NULL,
@strCargo VARCHAR(50) = NULL,
@strCCosto VARCHAR(50) = NULL,
@strBodega VARCHAR(50) = NULL,
@strObservacion VARCHAR(1000) = NULL,
@strUsuario VARCHAR(50) = NULL,
@dblFPago NUMERIC = NULL,
@dblNumeroSM NUMERIC = NULL,
@strTCorrelativo VARCHAR(50),
@dblDPago NUMERIC = NULL,
@strBodegaLog VARCHAR(50) = NULL,
@dblTDocumento NUMERIC = NULL,
@dblNumero NUMERIC = NULL
AS
DECLARE @dblError NUMERIC, @dblInterno NUMERIC, @dblCorrelativo NUMERIC, @dblFactor NUMERIC(18, 8),  @dblEstado NUMERIC,
@dblTotCantSM NUMERIC(18, 2), @dblTotCantOC NUMERIC(18, 2), @strBDestino VARCHAR(50), @strContrato VARCHAR(50), 
@strTDocumento VARCHAR(10), @strUsuBod VARCHAR(100), @tmp_cursor CURSOR
SET @dblError = 0
SET @dblInterno = 0
SET @dblCorrelativo = 0
SET @dblFactor = 0
SET @dblTotCantSM = 0
SET @dblTotCantOC = 0
SET @strBDestino = ''

IF @dblModulo <> 3
BEGIN
	IF @dblDPago <> 0
	BEGIN
		SET @tmp_cursor = CURSOR FOR
		SELECT dblFactor FROM Impuesto WHERE id = @dblDPago
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblFactor
		IF @@FETCH_STATUS <> 0 SET @dblError = 1 --error al obtener el factor de impuesto
		CLOSE @tmp_cursor
	END

	IF @dblError = 0
	BEGIN
		SET @tmp_cursor = CURSOR FOR
		SELECT strBodega, strContrato FROM General..Contrato WHERE strCodigo = @strCargo
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @strBDestino, @strContrato
		IF @@FETCH_STATUS <> 0 SET @dblError = 4 --error al obtener informacion del cargo
		CLOSE @tmp_cursor
	END
END

IF @dblError = 0 AND @dblModulo = 0
BEGIN
	EXEC @dblInterno = sp_getCorrelativo @strUsuario, 'OCA', 1
	IF @dblInterno = 0
		SET @dblError = 2 --error al obtener el numero correlativo interno
	ELSE
	BEGIN
		UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodega AND strCodigo = @strTCorrelativo
		
		SET @tmp_cursor = CURSOR FOR
		SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodega AND strCodigo = @strTCorrelativo
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
		IF @@FETCH_STATUS <> 0 SET @dblError = 3 --error al obtener el correlativo de documento
		CLOSE @tmp_cursor
		IF @dblError = 0
		BEGIN
			INSERT CaratulaOC 
			VALUES(@dblInterno, GETDATE(), @strProveedor, @strCargo, @strCCosto, 1, @strBodega, @strObservacion, @dblCorrelativo, @strContrato, 0, NULL, NULL, @dblFactor, @dblFPago, 'A', @dblDPago, @strBDestino)
			
			INSERT DetalleOrdenC
			SELECT @dblInterno, strCodigo, dblCAutorizada, dblValor, NULL, NULL, @dblNumeroSM, NULL, NULL 
			FROM TMPDetalleOrdenCompra WHERE strUsuario = @strUsuario AND dblModulo = 0
			
			IF NOT EXISTS(SELECT TOP 1 dblNumero FROM DetalleOrdenC WHERE dblNumero = @dblInterno) SET @dblError = 6
			
			IF @dblError = 0
			BEGIN
				DELETE FROM TMPDetalleOrdenCompra WHERE strUsuario = @strUsuario AND dblModulo = 0
				
				UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblCorrelativo 
				WHERE dblNumero = @dblInterno AND strUsuario = @strUsuario AND strTipoDoc = 'OCA'
				
				EXEC @dblTotCantSM = sp_getTotalCantSM @dblNumeroSM
				EXEC @dblTotCantOC = sp_getTotalCantOC @dblNumeroSM
				
				IF @dblTotCantSM = @dblTotCantOC
				BEGIN
					UPDATE CaratulaSM SET strEstado = 7 WHERE dblNumero = @dblNumeroSM AND strBodega = @strBodega
					
					INSERT Autorizaciones VALUES ('SM', @dblNumeroSM, GETDATE(), @strUsuario, 7)
				END
				ELSE
				BEGIN					
					UPDATE CaratulaSM SET strEstado = 6 WHERE dblNumero = @dblNumeroSM AND strBodega = @strBodega
					
					INSERT Autorizaciones VALUES ('SM', @dblNumeroSM, GETDATE(), @strUsuario, 6)
				END
			END
		END
	END
exec sp_MailAvisoNuevaOC
END
ELSE IF @dblError = 0 AND @dblModulo = 1
BEGIN
	IF @dblTDocumento = 1 	SET @strTDocumento = 'I'  ELSE SET @strTDocumento = 'O'
	IF @strTCorrelativo = 'OCO' SET @dblEstado = 0 ELSE SET @dblEstado = 1
	
	SET @strUsuBod = @strUsuario + '-' + @strBodega
	EXEC @dblInterno = sp_getCorrelativo @strUsuBod, @strTCorrelativo, 1
	IF @dblInterno = 0
		SET @dblError = 2 --error al obtener el numero correlativo interno
	ELSE
	BEGIN
		UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodegaLog AND strCodigo = @strTCorrelativo
		
		SET @tmp_cursor = CURSOR FOR
		SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodegaLog AND strCodigo = @strTCorrelativo
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
		IF @@FETCH_STATUS <> 0 SET @dblError = 3 --error al obtener el correlativo de documento
		CLOSE @tmp_cursor
		IF @dblError = 0
		BEGIN
			INSERT CaratulaOC 
			VALUES(@dblInterno, GETDATE(), @strProveedor, @strCargo, @strCCosto, @dblEstado, @strBodega, @strObservacion, @dblCorrelativo, @strContrato, 0, NULL, NULL, @dblFactor, @dblFPago, @strTDocumento, @dblDPago, @strBDestino)
			
			INSERT DetalleOrdenC
			SELECT @dblInterno, strCodigo, dblCAutorizada, dblValor, dtmFInicio, dtmFTermino, @dblNumeroSM, strCCosto, NULL 
			FROM TMPDetalleOrdenCompra WHERE dblModulo = 1 AND strBodega = @strBodega AND strUsuario = @strUsuario
			
			DELETE FROM TMPDetalleOrdenCompra WHERE dblModulo = 1 AND strBodega = @strBodega AND strUsuario = @strUsuario
			
			UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblCorrelativo 
			WHERE dblNumero = @dblInterno AND strUsuario = @strUsuBod AND strTipoDoc = @strTCorrelativo
		END
	END
END
ELSE IF @dblError = 0 AND @dblModulo = 2
BEGIN
	IF @strTCorrelativo = 'OCO' 
	BEGIN
		SET @strTDocumento = 'O' 
		SET @dblEstado = 0
	END
	ELSE 
	BEGIN
		SET @strTDocumento = 'A'
		SET @dblEstado = 1
	END
	
	SET @strUsuBod = @strUsuario + '-' + @strBodega
	EXEC @dblInterno = sp_getCorrelativo @strUsuBod, @strTCorrelativo, 1
	IF @dblInterno = 0
		SET @dblError = 2 --error al obtener el numero correlativo interno
	ELSE
	BEGIN
		IF @strBodegaLog = 12000
		BEGIN
			UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodegaLog AND strCodigo = @strTCorrelativo
			
			SET @tmp_cursor = CURSOR FOR
			SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodegaLog AND strCodigo = @strTCorrelativo
			OPEN @tmp_cursor
			FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
			IF @@FETCH_STATUS <> 0 SET @dblError = 3 --error al obtener el correlativo de documento
			CLOSE @tmp_cursor
		END
		ELSE
		BEGIN
			UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodega AND strCodigo = @strTCorrelativo
			
			SET @tmp_cursor = CURSOR FOR
			SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodega AND strCodigo = @strTCorrelativo
			OPEN @tmp_cursor
			FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
			IF @@FETCH_STATUS <> 0 SET @dblError = 3 --error al obtener el correlativo de documento
			CLOSE @tmp_cursor
		END
		
		IF @dblError = 0
		BEGIN		
			INSERT CaratulaOC 
			VALUES(@dblInterno, CONVERT(DATETIME, @dtmFecha, 101), @strProveedor, @strCargo, @strCCosto, @dblEstado, @strBodega, @strObservacion, @dblCorrelativo, @strContrato, 0, NULL, NULL, @dblFactor, @dblFPago, @strTDocumento, @dblDPago, @strBDestino)
			
			INSERT DetalleOrdenC
			SELECT @dblInterno, strCodigo, dblCAutorizada, dblValor, NULL, NULL, NULL, NULL, NULL 
			FROM TMPDetalleOrdenCompra WHERE dblModulo = 2 AND strBodega = @strBodega AND strUsuario = @strUsuario
			
			DELETE FROM TMPDetalleOrdenCompra WHERE dblModulo = 2 AND strBodega = @strBodega AND strUsuario = @strUsuario
			
			UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblCorrelativo 
			WHERE dblNumero = @dblInterno AND strUsuario = @strUsuBod AND strTipoDoc = @strTCorrelativo
		END
	END
exec sp_MailAvisoNuevaOC
END
ELSE IF @dblError = 0 AND @dblModulo = 3
BEGIN
	IF EXISTS(SELECT TMPDetalleOrdenCompra.strCodigo FROM DetalleOrdenC INNER JOIN TMPDetalleOrdenCompra ON (DetalleOrdenC.strCodigo = TMPDetalleOrdenCompra.strCodigo)
	WHERE TMPDetalleOrdenCompra.dblModulo = 3 AND TMPDetalleOrdenCompra.strUsuario = @strUsuario AND DetalleOrdenC.dblNumero = @dblNumero
	AND DATEDIFF(dd, TMPDetalleOrdenCompra.dtmFInicio, TMPDetalleOrdenCompra.dtmFTermino) > DATEDIFF(dd, DetalleOrdenC.dtmInicio, DetalleOrdenC.dtmTermino) + 3)
		SET @dblError = 1 --error por diferencia en periodo de fechas
	
	IF @dblError = 0
	BEGIN
		EXEC @dblInterno = sp_getCorrelativo @strUsuario, 'OCO', 1
		IF @dblInterno = 0
			SET @dblError = 2 --error al obtener el numero correlativo interno
		ELSE
		BEGIN
			UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodegaLog AND strCodigo = 'OCO'
			
			SET @tmp_cursor = CURSOR FOR
			SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodegaLog AND strCodigo = 'OCO'
			OPEN @tmp_cursor
			FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
			IF @@FETCH_STATUS <> 0 SET @dblError = 3 --error al obtener el correlativo de documento
			CLOSE @tmp_cursor
			IF @dblError = 0
			BEGIN		
				INSERT CaratulaOC 
				SELECT @dblInterno, GETDATE(), strProveedor, @strCargo, strCentroC, 0, strBodega, @strObservacion, @dblCorrelativo, strObra, 0, NULL, NULL, dblIva, intFPago, strTipoDoc, dblDocPago, strBDestino
				FROM CaratulaOC WHERE dblNumero = @dblNumero
								
				INSERT DetalleOrdenC
				SELECT @dblInterno, strCodigo, dblCAutorizada, dblValor, dtmFInicio, dtmFTermino, dblSolicitud, NULL, NULL
				FROM TMPDetalleOrdenCompra WHERE TMPDetalleOrdenCompra.dblModulo = 3 AND TMPDetalleOrdenCompra.strUsuario = @strUsuario
				
				DELETE FROM TMPDetalleOrdenCompra WHERE TMPDetalleOrdenCompra.dblModulo = 3 AND TMPDetalleOrdenCompra.strUsuario = @strUsuario
				
				IF EXISTS(SELECT dblUltima FROM CaratulaOC WHERE dblNumero = @dblInterno)
				BEGIN
					UPDATE CaratulaOC SET strEstado = 16 WHERE dblNumero = @dblNumero
					
					UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblCorrelativo 
					WHERE dblNumero = @dblInterno AND strUsuario = @strUsuario AND strTipoDoc = 'OCO'
					
					INSERT Autorizaciones
					VALUES ('OCO', @dblNumero, GETDATE(), @strUsuario, '16')
				END
				ELSE
					SET @dblError = 5
			END
		END
	END
END
ELSE IF @dblModulo = 4
BEGIN
	DECLARE @strCodigo VARCHAR(50), @dblCantidad NUMERIC(18, 2)
	
	SET @tmp_cursor = CURSOR FOR
	SELECT strCodigo, SUM(dblCantidad) FROM DetalleIngreso WHERE dblNumOC = @dblNumero AND strCodigo NOT IN (
	SELECT DetalleOrdenC.strCodigo
	FROM DetalleOrdenC INNER JOIN DetalleIngreso ON (DetalleOrdenC.dblNumero = DetalleIngreso.dblNumOC AND DetalleOrdenC.strCodigo = DetalleIngreso.strCodigo AND DetalleOrdenC.dblCantidad = DetalleIngreso.dblCantidad)
	WHERE DetalleOrdenC.dblNumero = @dblNumero) GROUP BY strCodigo
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblCantidad
	WHILE @@FETCH_STATUS = 0
	BEGIN
		UPDATE DetalleOrdenC SET dblCantidad = @dblCantidad WHERE dblNumero = @dblNumero AND strCodigo = @strCodigo
		FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblCantidad
	END
	CLOSE @tmp_cursor
	
	UPDATE CaratulaOC SET strEstado = 12 WHERE dblNumero = @dblNumero
	
	INSERT Autorizaciones VALUES ('OC', @dblNumero, GETDATE(), @strUsuario, '12')
END
IF @dblError = 0 AND @dblModulo = 5
BEGIN
	EXEC @dblInterno = sp_getCorrelativo @strUsuario, 'OCA', 1
	IF @dblInterno = 0
		SET @dblError = 2 --error al obtener el numero correlativo interno
	ELSE
	BEGIN
		UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodega AND strCodigo = @strTCorrelativo
		
		SET @tmp_cursor = CURSOR FOR
		SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodega AND strCodigo = @strTCorrelativo
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
		IF @@FETCH_STATUS <> 0 SET @dblError = 3 --error al obtener el correlativo de documento
		CLOSE @tmp_cursor
		IF @dblError = 0
		BEGIN
			INSERT CaratulaOC 
			VALUES(@dblInterno, GETDATE(), @strProveedor, @strCargo, @strCCosto, 0, @strBodega, @strObservacion, @dblCorrelativo, @strContrato, 0, NULL, NULL, @dblFactor, @dblFPago, 'A', @dblDPago, @strBDestino)
			
			INSERT DetalleOrdenC
			SELECT @dblInterno, strCodigo, dblCAutorizada, dblValor, NULL, NULL, @dblNumeroSM, NULL, NULL 
			FROM TMPDetalleOrdenCompra WHERE strUsuario = @strUsuario AND dblModulo = 0
			
			IF NOT EXISTS(SELECT TOP 1 dblNumero FROM DetalleOrdenC WHERE dblNumero = @dblInterno) SET @dblError = 6
			
			IF @dblError = 0
			BEGIN
				DELETE FROM TMPDetalleOrdenCompra WHERE strUsuario = @strUsuario AND dblModulo = 0
				
				UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblCorrelativo 
				WHERE dblNumero = @dblInterno AND strUsuario = @strUsuario AND strTipoDoc = 'OCA'
				
				EXEC @dblTotCantSM = sp_getTotalCantSM @dblNumeroSM
				EXEC @dblTotCantOC = sp_getTotalCantOC @dblNumeroSM
				
				IF @dblTotCantSM = @dblTotCantOC
				BEGIN
					UPDATE CaratulaSM SET strEstado = 7 WHERE dblNumero = @dblNumeroSM AND strBodega = @strBodega
					
					INSERT Autorizaciones VALUES ('SM', @dblNumeroSM, GETDATE(), @strUsuario, 7)
				END
				ELSE
				BEGIN					
					UPDATE CaratulaSM SET strEstado = 6 WHERE dblNumero = @dblNumeroSM AND strBodega = @strBodega
					
					INSERT Autorizaciones VALUES ('SM', @dblNumeroSM, GETDATE(), @strUsuario, 6)
				END
			END
		END
	END
END
SELECT @dblError AS dblError, @dblInterno AS dblInterno, @dblCorrelativo AS dblCorrelativo
GO
/****** Object:  StoredProcedure [dbo].[sp_setMateriales]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 15/01/2008
VER.: 1.0
*/
CREATE PROC [dbo].[sp_setMateriales]
@dblModulo NUMERIC,
@strCodigo VARCHAR(50) = NULL,
@strFamilia VARCHAR(50),
@strDescripcion VARCHAR(100),
@strUnidad VARCHAR(10),
@strTUnidad VARCHAR(1) = 'T'
AS
IF @dblModulo = 0
BEGIN
	DECLARE @dblError NUMERIC, @dblNumero NUMERIC, @tmp_cursor CURSOR
	SET @dblError = 0

	EXEC sp_ActualizaCorrelativo 'MAT'

	SET @tmp_cursor = CURSOR FOR
	SELECT dblNumero FROM Correlativo WHERE strCodigo = 'MAT'
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblNumero
	IF @@FETCH_STATUS <> 0 SET @dblError = 1
	CLOSE @tmp_cursor
	
	IF @dblError = 0
		INSERT MaterialCasa 
		VALUES (NULL, CONVERT(VARCHAR, @dblNumero), @strFamilia, @strDescripcion, @strUnidad, 0, 0, NULL, NULL, NULL, 1, 0, @strUnidad, NULL, @strTUnidad)
	
	SELECT @dblError AS dblError, @dblNumero AS dblNumero	
END
ELSE IF @dblModulo = 1
	UPDATE MaterialCasa SET strDescripcion = @strDescripcion, strFamilia = @strFamilia, strUnidad = @strUnidad, strUnidadCompra = @strUnidad
	WHERE strCodigo = @strCodigo
GO
/****** Object:  StoredProcedure [dbo].[sp_setGuiaTraspaso]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 10/07/2007
VER: 1.0
*/
CREATE  PROC [dbo].[sp_setGuiaTraspaso]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@dblNumero NUMERIC,
@dtmFecha VARCHAR(10),
@strCargo VARCHAR(50),
@strObservacion VARCHAR(1000)
AS
DECLARE @dblError NUMERIC, @strPaso VARCHAR(50), @strBodega VARCHAR(50), @dblIngreso NUMERIC, @dblCorrelativo NUMERIC
DECLARE @tmp_cursor CURSOR
SET @dblError = 0
SET @strPaso = ''

IF @dblModulo = 0
BEGIN
	SET @tmp_cursor = CURSOR FOR
	SELECT dblNumero FROM Despacho WHERE dblNumero = @dblNumero
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO  @strPaso
	IF @@FETCH_STATUS = 0 SET @dblError = 1 --Error, el numero de guia ya existe
	CLOSE @tmp_cursor
	
	IF @dblError = 0
	BEGIN
		SET @tmp_cursor = CURSOR FOR
		SELECT strBodega FROM General..Contrato WHERE strCodigo = @strCargo
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @strBodega
		IF @@FETCH_STATUS <> 0 SET @dblError = 2 -- Error, no es posible obtener la bodega del cargo
		CLOSE @tmp_cursor
		
		IF @dblError = 0
		BEGIN
			EXEC @dblIngreso = sp_getCorrelativo @strUsuario, 'ING', 1
			IF @dblIngreso = 0
				SET @dblError = 3 --Error, no es posible obtener el numero correlativo interno de la guia de ingreso
			ELSE
			BEGIN
				UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodega AND strCodigo = 'ING'
				
				SET @tmp_cursor = CURSOR FOR
				SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodega AND strCodigo='ING'
				OPEN @tmp_cursor
				FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
				IF @@FETCH_STATUS <> 0 SET @dblError = 4 --Error, no es posible obtener el numero correlativo de la guia de ingreso
				CLOSE @tmp_cursor
				
				IF @dblError = 0
				BEGIN
					-- INGRESO --
					INSERT Ingreso
					VALUES(@dblIngreso, @dblCorrelativo, CONVERT(DATETIME, @dtmFecha, 101), NULL, NULL, @strBodega, @strCargo, 0, 0, 0, 1)
					
					INSERT DetalleIngreso
					SELECT @dblIngreso, strCodigo, dblCantidad, 0, NULL FROM Detalle_TMP WHERE strTipoDoc = 'GT' AND strUsuario = @strUsuario
					
					-- DESPACHO --
					INSERT Despacho
					VALUES(@dblNumero, CONVERT(DATETIME, @dtmFecha, 101), @strCargo, 0, NULL, '12001', 1)
					
					INSERT DetalleDespacho
					SELECT @dblNumero, strCodigo, dblCantidad, NULL FROM Detalle_TMP WHERE strTipoDoc = 'GT' AND strUsuario = @strUsuario
					
					DELETE FROM Detalle_TMP WHERE strTipoDoc = 'GT' AND strUsuario = @strUsuario
				END
			END
		END
	END
END

SELECT @dblError AS dblError, @dblNumero AS dblNDespacho, @dblCorrelativo AS dblNIngreso
GO
/****** Object:  StoredProcedure [dbo].[sp_setValeConsumo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 11/01/2008
VER: 3.1
*/
CREATE PROCEDURE [dbo].[sp_setValeConsumo]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50) = NULL,
@dblNumero NUMERIC =  NULL,
@dtmFecha VARCHAR(10) = NULL,
@strResponsable VARCHAR(50) = NULL
AS
DECLARE @tmp_cursor CURSOR, @dblError NUMERIC, @dblInterno NUMERIC, @dblCorrelativo NUMERIC,
@strCodigo VARCHAR(50), @dblCantidad NUMERIC(18,2), @strPartida VARCHAR(20), @dblStockReal NUMERIC(18,2)
SET @dblError = 0

IF @dblModulo = 0
BEGIN
	EXEC @dblInterno = sp_getCorrelativo @strUsuario, 'VC', 1
	IF @dblInterno = 0
		SET @dblError = 1 --error al obtener el numero correlativo interno
	ELSE
	BEGIN
		UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodega AND strCodigo = 'VC'
		
		SET @tmp_cursor = CURSOR FOR
		SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodega AND strCodigo = 'VC'
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
		IF @@FETCH_STATUS <> 0 SET @dblError = 2 --error al obtener el correlativo de documento
		CLOSE @tmp_cursor
		IF @dblError = 0
		BEGIN

			INSERT CaratulaVC 
			VALUES (@dblInterno, @dblCorrelativo, CONVERT(DATETIME, @dtmFecha, 101), @strResponsable, @strBodega, @dblNumero)
			
			INSERT DetalleVC
			SELECT @dblInterno, strCodigo, dblCantidad, strPartida FROM TMPDetalleValeConsumo
			WHERE dblModulo = 0 AND strUsuario = @strUsuario
			
			SET @tmp_cursor = CURSOR FOR
			SELECT strCodigo, dblCantidad, strPartida FROM TMPDetalleValeConsumo WHERE dblModulo = 0 AND strUsuario = @strUsuario
			OPEN @tmp_cursor
			FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblCantidad, @strPartida
			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @dblStockReal = 0
				EXEC @dblStockReal = sp_getStockReal @strBodega, @strCodigo
				IF @dblCantidad > @dblStockReal SET @dblCantidad = @dblStockReal
				
				FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblCantidad, @strPartida
			END
			CLOSE @tmp_cursor
			
			UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblCorrelativo 
			WHERE dblNumero = @dblInterno AND strUsuario = @strUsuario AND strTipoDoc = 'VC'
			
			DELETE FROM TMPDetalleValeConsumo WHERE dblModulo = 0 AND strUsuario = @strUsuario
			
			EXEC sp_CargarBodega @strBodega
		END
	END
END
SELECT @dblError AS dblError, @dblInterno AS dblInterno, @dblCorrelativo AS dblCorrelativo
GO
/****** Object:  StoredProcedure [dbo].[sp_setTerminoBodega]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 05/12/2007
VER: 1.2
*/
CREATE        PROC [dbo].[sp_setTerminoBodega]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50) = NULL
AS
DECLARE @dblNumero NUMERIC, @dblError NUMERIC
SET @dblNumero = 0
SET @dblError = 0

IF @dblModulo = 0
BEGIN
	DECLARE @strFecha VARCHAR(10)
	SET @strFecha = SUBSTRING(CONVERT(VARCHAR, GETDATE(), 103), 4, 2) + '/' + SUBSTRING(CONVERT(VARCHAR, GETDATE(), 103), 1, 2) + '/' + SUBSTRING(CONVERT(VARCHAR, GETDATE(), 103), 7, 4)
	INSERT CaratulaTerminoBodega 
	VALUES (@strBodega, CONVERT(DATETIME, @strFecha, 101), @strUsuario)
	
	DECLARE tmp_cursor CURSOR FOR
	SELECT MAX(dblNumero) AS dblNumero FROM CaratulaTerminoBodega WHERE strUsuario = @strUsuario AND strBodega = @strBodega
	OPEN tmp_cursor
	FETCH NEXT  FROM tmp_cursor INTO @dblNumero
	IF @@FETCH_STATUS <> 0 SET @dblError = 1
	CLOSE tmp_cursor
	DEALLOCATE tmp_cursor
	
	INSERT DetalleTerminoBodega
	SELECT @dblNumero, strCodigo, dblStock, dblDevolucion, 0, strObservacion
	FROM TMPTerminoBodega WHERE dblModulo = 0 AND strUsuario = @strUsuario 
	
	DELETE FROM TMPTerminoBodega WHERE dblModulo = 0 AND strUsuario = @strUsuario
END
ELSE IF @dblModulo = 1
BEGIN
	DELETE FROM DetalleTerminoBodega WHERE dblNumero = CONVERT(NUMERIC, @strBodega)
	
	INSERT DetalleTerminoBodega
	SELECT CONVERT(NUMERIC, @strBodega), strCodigo, dblStock, dblDevolucion, 0, strObservacion
	FROM TMPTerminoBodega WHERE dblModulo = 1 AND strUsuario = @strUsuario 
	
	DELETE FROM TMPTerminoBodega WHERE dblModulo = 1 AND strUsuario = @strUsuario
END
EXEC sp_CargarBodega @strBodega
SELECT @dblError AS dblError, @dblNumero AS dblNumero
GO
/****** Object:  StoredProcedure [dbo].[sp_setSolicitudMaterial]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 06/12/2007
VER.: 2.3
*/
CREATE   PROC [dbo].[sp_setSolicitudMaterial]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(5),
@strCargo VARCHAR(10),
@strNota VARCHAR(1000),
@dblNGuia NUMERIC = NULL
AS
DECLARE @dblError NUMERIC, @dblInterno NUMERIC, @dblNumero NUMERIC, @dblNivel NUMERIC, @dblEstado NUMERIC, @tmp_cursor CURSOR
SET @dblError = 0
SET @dblInterno = 0 
SET @dblNumero = 0
SET @dblNivel = 0
SET @dblEstado = 0

EXEC @dblInterno = sp_getCorrelativo @strUsuario, 'SM', 1

UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strCodigo = 'SM' AND strBodega = @strBodega

SET @tmp_cursor = CURSOR FOR
SELECT dblNumero FROM Correlativo WHERE strCodigo = 'SM' AND strBodega = @strBodega
OPEN @tmp_cursor
FETCH NEXT FROM @tmp_cursor INTO @dblNumero
IF @@FETCH_STATUS <> 0 SET @dblError = 1
CLOSE @tmp_cursor

IF @dblError = 0
BEGIN
	UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblNumero WHERE dblNumero = @dblInterno AND strUsuario = @strUsuario AND strTipoDoc = 'SM'
	
	SET @tmp_cursor = CURSOR FOR
	SELECT nivel FROM General..Usuarios WHERE usuario = @strUsuario
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblNivel
	IF @@FETCH_STATUS<>0 SET @dblError = 2
	CLOSE @tmp_cursor
	
	IF @dblError = 0
	BEGIN
		IF @dblNivel = 2 SET @dblEstado = 2
		
		INSERT CaratulaSM
		VALUES (@dblInterno, @dblNumero, GETDATE(), @strNota, @strCargo, @strBodega, @dblEstado, @dblNGuia)
		
		INSERT DetalleSM 
		SELECT @dblInterno, strCodigo, dblCantidad, dblCantidad, NULL FROM TMPDetalleSolicitud WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
		
		DELETE FROM TMPDetalleSolicitud WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
		
		INSERT ActividadBodega
		VALUES(@dblInterno, GETDATE(), @strUsuario, 'SM', 'Nueva solicitud de materiales' + CONVERT(VARCHAR, @dblNumero))
	END
	SELECT @dblError AS dblError, @dblInterno AS dblInterno, @dblNumero AS dblNumero
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setSolicitudDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
FECHA: 05/12/2007
VER: 1.1
*/
CREATE   PROCEDURE [dbo].[sp_setSolicitudDevolucion]
@dblModulo NUMERIC,
@strUsuario VARCHAR(100),
@dblNumero NUMERIC,
@dtmFecha VARCHAR(10) = NULL,
@strBodega VARCHAR(100) = NULL,
@strCargo VARCHAR(100) = NULL,
@strObservacion VARCHAR(1000) = NULL
AS
DECLARE @dblError NUMERIC, @tmp_cursor CURSOR, @strCodMat VARCHAR(100), @dblCantMat NUMERIC(18, 2)
SET @dblError = 0
IF @dblModulo = 0
BEGIN
	IF EXISTS(SELECT dblNumero FROM Despacho WHERE dblNumero = @dblNumero)
		SET @dblError = 1
	ELSE
	BEGIN
		INSERT CorrelativoDoc
		VALUES(@strUsuario, 'SD', @dblNumero, GETDATE())
		
		INSERT Despacho 
		VALUES (@dblNumero, CONVERT(DATETIME, @dtmFecha, 101), @strCargo, NULL, NULL, @strBodega, 2)
		
		INSERT DetalleDespacho 
		SELECT @dblNumero, strCodigo, dblCantidad, NULL FROM TMPSolicitudDevolucion WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
		
		IF @strObservacion <> '' EXEC sp_GrabaObservacion @dblNumero, 'SD', @strObservacion, @strUsuario
		
		DELETE FROM TMPSolicitudDevolucion WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
	END
	SELECT @dblError AS dblError
END
ELSE IF @dblModulo = 1
BEGIN
	DELETE FROM DetalleDespacho WHERE dblNumero = @dblNumero
	
	INSERT DetalleDespacho 
	SELECT @dblNumero, strCodigo, dblCantidad, NULL FROM TMPSolicitudDevolucion WHERE dblModulo = 1 AND strUsuario = @strUsuario
	
	DELETE FROM TMPSolicitudDevolucion WHERE dblModulo = 1 AND strUsuario = @strUsuario
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setGuiaCargo]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/11/2007
VER: 2.0
*/
CREATE PROCEDURE [dbo].[sp_setGuiaCargo]
@dblModulo NUMERIC,
@strUsuario VARCHAR(100),
@dblNumero NUMERIC,
@dtmFecha VARCHAR(10),
@strBodega VARCHAR(100),
@strCargo VARCHAR(10),
@strObservacion VARCHAR(1000)
AS
DECLARE @tmp_cursor CURSOR, @strCodMat VARCHAR(100), @dblCantMat NUMERIC(18, 2)
IF @dblModulo = 0
BEGIN
	INSERT CaratulaGuiaCargo 
	VALUES (@dblNumero, CONVERT(DATETIME, @dtmFecha, 101), @strCargo, @strBodega)
	
	INSERT DetalleGuiaCargos 
	SELECT @dblNumero, strCodigo, dblCantidad, @strCargo FROM TMPDetalleGuiaCargo 
	WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
	
	INSERT HistoricoDevolucion 
	SELECT @dblNumero, @strCargo, strCodigo, dblCantidad, 0, GETDATE(), @strBodega FROM TMPDetalleGuiaCargo 
	WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
	
	IF @strObservacion <> '' EXEC sp_GrabaObservacion @dblNumero, 'GC', @strObservacion, @strUsuario
	
	SET @tmp_cursor = CURSOR FOR 
	SELECT strCodigo, dblCantidad * (-1) FROM TMPDetalleGuiaCargo WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @strCodMat, @dblCantMat
	WHILE @@FETCH_STATUS = 0
	BEGIN
		EXEC sp_ActualizaBodega @strBodega, @strCodMat, @dblCantMat
		FETCH NEXT FROM @tmp_cursor INTO @strCodMat, @dblCantMat
	END
	CLOSE @tmp_cursor
	
	DELETE FROM TMPDetalleGuiaCargo WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setTMPSolicitudMateriales]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 25/06/2007
VER: 1.0
*/
CREATE   PROC [dbo].[sp_setTMPSolicitudMateriales]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strCodigo VARCHAR(50) = NULL,
@dblValor NUMERIC(18, 2) = NULL,
@dblNumero NUMERIC = NULL,
@dblEstado NUMERIC = NULL,
@strObservacion VARCHAR(1000) = NULL
AS
IF @dblModulo = 0
	UPDATE TMPSolicitudMateriales SET dblCAutorizada = @dblValor WHERE strUsuario = @strUsuario AND strCodigo = @strCodigo
ELSE IF @dblModulo = 1
BEGIN
	DELETE FROM DetalleSM WHERE dblNumero=@dblNumero
	
	INSERT DetalleSM
	SELECT @dblNumero, strCodigo, dblCantidad, dblCAutorizada, NULL 
	FROM TMPSolicitudMateriales WHERE strUsuario = @strUsuario
	
	EXEC sp_CambiaEstado 'SM', @dblNumero, @dblEstado, @strUsuario
	IF @strObservacion <> '' EXEC sp_GrabaObservacion @dblNumero, 'SM', @strObservacion, @strUsuario
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setGuiaIngreso]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 15/11/2007
VER.: 2.1
*/
CREATE   PROCEDURE [dbo].[sp_setGuiaIngreso]
@dblModulo NUMERIC,
@strUsuario VARCHAR(100),
@strBodega VARCHAR(100),
@dtmFecha VARCHAR(10) = NULL,
@intTipoDoc NUMERIC,
@strReferencia VARCHAR(100),
@dblOCompra NUMERIC,
@strObservacion VARCHAR(8000) = NULL,
@dblGIngreso NUMERIC = NULL
AS
DECLARE @dblError NUMERIC, @dblCorrelativo NUMERIC, @tmp_cursor CURSOR, @dblNumero NUMERIC, @strCodigo VARCHAR(100), @dblCantidad NUMERIC(18, 2), 
@dblValor NUMERIC, @dblCantOC NUMERIC(18, 2), @dblCantGI NUMERIC(18, 2), @dtmFch DATETIME
SET @dblError = 0
SET @dtmFch = CONVERT(DATETIME, @dtmFecha, 101)

IF @dblModulo = 0
BEGIN
	UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodega AND strCodigo = 'ING'
	
	SET @tmp_cursor = CURSOR FOR SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodega AND strCodigo = 'ING'
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblNumero
	IF @@FETCH_STATUS <> 0 SET @dblError = 1  --no se obtiene el numero de usuario
	CLOSE @tmp_cursor
	
	IF @dblError = 0
	BEGIN
		EXEC @dblCorrelativo = sp_getCorrelativo @strUsuario, 'ING', 1
		
		UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblNumero WHERE dblNumero = @dblCorrelativo AND strUsuario = @strUsuario AND strTipoDoc = 'ING'
		
		INSERT Ingreso
		VALUES(@dblCorrelativo, @dblNumero, CONVERT(DATETIME, @dtmFecha, 101), @strReferencia, @dblOCompra, @strBodega, NULL, NULL, @intTipoDoc, 0, 1)
		
		INSERT DetalleIngreso
		SELECT @dblCorrelativo, strCodigo, dblCIngresada, dblValor, @dblOCompra FROM TMPDetalleGuiaIngreso WHERE dblModulo = 0 AND strUsuario = @strUsuario
		
		EXEC sp_getTotalCantidadProducto 'OC', @dblOCompra, 0, @dblCantOC OUTPUT
		EXEC sp_getTotalCantidadProducto 'OC_GI', @dblOCompra, 0, @dblCantGI OUTPUT
		
		IF @dblCantOC = @dblCantGI
			EXEC sp_CambiaEstado 'OCV', @dblOCompra, 12, @strUsuario
		ELSE
			EXEC sp_CambiaEstado 'OCV', @dblOCompra, 11, @strUsuario		

		SET @tmp_cursor = CURSOR FOR
		SELECT strCodigo, dblCIngresada, dblValor FROM TMPDetalleGuiaIngreso WHERE dblModulo = 0 AND strUsuario = @strUsuario
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblCantidad, @dblValor
		WHILE @@FETCH_STATUS = 0
		BEGIN
			EXEC sp_ActualizaBodega @strBodega, @strCodigo, @dblCantidad
			EXEC sp_ActualizaPrecioHistorico @strCodigo, @strBodega, @dtmFch, @dblValor
			FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblCantidad, @dblValor
		END
		CLOSE @tmp_cursor
		
		DELETE FROM TMPDetalleGuiaIngreso WHERE dblModulo = 0 AND strUsuario = @strUsuario
		
		INSERT INTO Autorizaciones VALUES ('GI', @dblCorrelativo, GETDATE(), @strUsuario, '0')
		
		IF @strObservacion <> '' EXEC sp_GrabaObservacion @dblCorrelativo, 'ING', @strObservacion, @strUsuario		
	END
	SELECT @dblError AS dblError, @dblCorrelativo AS dblCorrelativo, @dblNumero AS dblNumero
END
ELSE IF @dblModulo = 1 --'GI'
BEGIN
	UPDATE Ingreso SET intTipoDoc = @intTipoDoc, strReferencia = @strReferencia, dblOrdenC = @dblOCompra WHERE dblNumero = @dblGIngreso
	
	DELETE FROM DetalleIngreso WHERE dblNumero = @dblGIngreso
	
	INSERT DetalleIngreso
	SELECT @dblGIngreso, strCodigo, dblCIngresada, dblValor, @dblOCompra FROM TMPDetalleGuiaIngreso WHERE dblModulo = 1 AND strUsuario = @strUsuario
	
	SET @tmp_cursor = CURSOR FOR
	SELECT strCodigo, dblCIngresada, dblValor FROM TMPDetalleGuiaIngreso WHERE dblModulo = 1 AND strUsuario = @strUsuario
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblCantidad, @dblValor
	WHILE @@FETCH_STATUS = 0
	BEGIN
		EXEC sp_ActualizaBodega @strBodega, @strCodigo, @dblCantidad
		EXEC sp_ActualizaPrecioHistorico @strCodigo, @strBodega, @dtmFch, @dblValor
		FETCH NEXT FROM @tmp_cursor INTO @strCodigo, @dblCantidad, @dblValor
	END
	CLOSE @tmp_cursor
	
	EXEC @dblCantOC = sp_getTotalCantidadProducto 'OC', @dblOCompra
	EXEC @dblCantGI = sp_getTotalCantidadProducto 'OC_GI', @dblOCompra
	IF @dblCantOC = @dblCantGI
		EXEC sp_CambiaEstado 'OCV', @dblOCompra, 12, @strUsuario
	ELSE
		EXEC sp_CambiaEstado 'OCV', @dblOCompra, 11, @strUsuario
	
	DELETE FROM TMPDetalleGuiaIngreso WHERE dblModulo = 1 AND strUsuario = @strUsuario
END
ELSE IF @dblModulo = 2 --'INGCC'
BEGIN
	UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodega AND strCodigo='ING'
	
	SET @tmp_cursor  = CURSOR FOR SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodega AND strCodigo = 'ING'
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblNumero
	IF @@FETCH_STATUS <> 0 SET @dblError = 1
	CLOSE @tmp_cursor
	
	IF @dblError = 0
	BEGIN
		EXEC @dblCorrelativo = sp_getCorrelativo @strUsuario, 'ING', 1
		
		INSERT Ingreso
		VALUES(@dblCorrelativo, @dblNumero, CONVERT(DATETIME, @dtmFecha, 101), @strReferencia, @strReferencia, @strBodega, NULL, 1, @intTipoDoc, 0, 1)
		
		INSERT DetalleIngreso
		SELECT @dblCorrelativo, strCodigo, dblCantidad, dblValor, @strReferencia FROM DetalleCajaC WHERE dblNumero = @strReferencia
		
		UPDATE CaratulaCC SET dblEstado = 6 WHERE dblNumero = @strReferencia
	END
	SELECT @dblError AS dblError, @dblCorrelativo AS dblCorrelativo, @dblNumero AS dblNumero
END
GO
/****** Object:  StoredProcedure [dbo].[sp_setGuiaDevolucion]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 07/11/2007
VER: 1.3
*/
CREATE  PROCEDURE [dbo].[sp_setGuiaDevolucion]
@dblModulo NUMERIC,
@strUsuario VARCHAR(100),
@strBodega VARCHAR(100),
@dtmFecha VARCHAR(10),
@strMovil VARCHAR(50) = NULL,
@strObservacion VARCHAR(1000) = NULL,
@dblGuiaDesp NUMERIC = NULL, 
@strFchDesp VARCHAR(10) = NULL
AS
DECLARE @dblError NUMERIC, @dblCorrelativo NUMERIC, @dblInterno NUMERIC, @tmp_cursor CURSOR
SET @dblError = 0
IF @dblModulo=0
BEGIN
	UPDATE Correlativo SET dblNumero = dblNumero + 1 WHERE strBodega = @strBodega AND strCodigo = 'DEV'
	SET @tmp_cursor = CURSOR FOR 
	SELECT dblNumero FROM Correlativo WHERE strBodega = @strBodega AND strCodigo = 'DEV'
	OPEN @tmp_cursor
	FETCH NEXT FROM @tmp_cursor INTO @dblCorrelativo
	IF @@FETCH_STATUS <> 0 SET @dblError = 1 --Error  al obtener el correlativo
	CLOSE @tmp_cursor
	
	IF @dblError = 0
	BEGIN
		INSERT CorrelativoDoc VALUES (@strUsuario, 'DEV', @dblCorrelativo, GETDATE())
		SET @tmp_cursor = CURSOR FOR
		SELECT MAX(dblNumero) AS dblNumero FROM CorrelativoDoc 
		WHERE strUsuario = @strUsuario AND strTipoDoc = 'DEV' AND dblCorrelativoUsu = @dblCorrelativo
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblInterno
		IF @@FETCH_STATUS<>0 SET @dblError = 2 --Error al obtener el numero interno
		CLOSE @tmp_cursor
		
		IF @dblError = 0
		BEGIN
			INSERT Devolucion
			VALUES(@dblInterno, @dblCorrelativo, CONVERT(DATETIME, @dtmFecha, 101), @strMovil, @strBodega, 1)
			
			INSERT DetalleDevolucion
			SELECT @dblInterno, strCodigo, dblCantidad, NULL
			FROM TMPDetalleGuiaDevolucion WHERE dblModulo =  0 AND strBodega = @strBodega AND strUsuario = @strUsuario
			
			IF @strObservacion <> '' EXEC sp_GrabaObservacion @dblInterno, 'DEV', @strObservacion, @strUsuario
		
			IF @dblGuiaDesp IS NULL
			BEGIN
				DECLARE @strCodMat VARCHAR(50), @dblCantMat NUMERIC(18, 2)
				SET @strCodMat = ''
				SET @dblCantMat = 0
				SET @tmp_cursor = CURSOR FOR
				SELECT strCodigo, dblCantidad FROM TMPDetalleGuiaDevolucion WHERE dblModulo =  0 AND strBodega = @strBodega AND strUsuario = @strUsuario
				OPEN @tmp_cursor
				FETCH NEXT FROM @tmp_cursor INTO @strCodMat, @dblCantMat
				WHILE @@FETCH_STATUS = 0
				BEGIN
					EXEC sp_ActualizaBodega @strBodega, @strCodMat, @dblCantMat
					FETCH NEXT FROM @tmp_cursor INTO @strCodMat, @dblCantMat
				END
				CLOSE @tmp_cursor
			END
			ELSE
			BEGIN
				INSERT Despacho 
				VALUES (@dblGuiaDesp, CONVERT(DATETIME, @strFchDesp, 101), @strMovil, NULL, NULL, @strBodega, 1)
			
				INSERT INTO DetalleDespacho 
				SELECT @dblGuiaDesp, strCodigo, dblCantidad, NULL FROM TMPDetalleGuiaDevolucion
				WHERE dblModulo =  0 AND strBodega = @strBodega AND strUsuario = @strUsuario
			
				IF @strObservacion <> '' 
				BEGIN
					DECLARE @strObsDesp VARCHAR(250)
					SET @strObsDesp = 'Gu&iacute;a de Despacho para Inventario.  Gu&iacute;a de Devoluci&oacute;n N&deg; ' + CONVERT(VARCHAR, @dblCorrelativo)
					EXEC sp_GrabaObservacion @dblGuiaDesp, 'DEV', @strObsDesp, @strUsuario
				END
			END
			DELETE FROM TMPDetalleGuiaDevolucion WHERE dblModulo =  0 AND strBodega = @strBodega AND strUsuario = @strUsuario
			
			EXEC sp_setCargarStockMovil @strMovil
		END
	END
END
ELSE IF @dblModulo = 1
BEGIN
	UPDATE Devolucion SET dtmFecha = CONVERT(DATETIME, @dtmFecha, 101) WHERE dblNumero = @dblGuiaDesp
	
	DELETE FROM DetalleDevolucion WHERE dblNumero = @dblGuiaDesp
	
	INSERT DetalleDevolucion
	SELECT @dblGuiaDesp, strCodigo, dblCantidad, NULL
	FROM TMPDetalleGuiaDevolucion WHERE dblModulo =  1 AND strUsuario = @strUsuario
	
	EXEC sp_getKardex '', @strBodega
END
SELECT @dblError AS dblError, @dblInterno AS dblInterno, @dblCorrelativo AS dblCorrelativo
GO
/****** Object:  StoredProcedure [dbo].[sp_setGuiaDespacho]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 09/11/2007
VER: 2.2
*/
CREATE PROCEDURE [dbo].[sp_setGuiaDespacho]
@dblModulo NUMERIC,
@strUsuario VARCHAR(100),
@dblNumero NUMERIC,
@dtmFecha VARCHAR(10),
@strBodega VARCHAR(100),
@dblNumOC NUMERIC = NULL,
@strProveedor VARCHAR(100) = NULL,
@strObservacion VARCHAR(1000) = NULL
AS
DECLARE @dblError NUMERIC, @tmp_cursor CURSOR, @strCodMat VARCHAR(100), @dblCantMat NUMERIC(18, 2)
SET @dblError = 0
IF @dblModulo = 0
BEGIN
	IF EXISTS(SELECT dblNumero FROM Despacho WHERE dblNumero = @dblNumero)
		SET @dblError = 1
	ELSE
	BEGIN
		INSERT Despacho 
		VALUES (@dblNumero, CONVERT(DATETIME, @dtmFecha, 101), @strProveedor, NULL, NULL, @strBodega, 1)
		
		INSERT DetalleDespacho 
		SELECT @dblNumero, strCodigo, dblCantidad, NULL FROM TMPDetalleGuiaDespacho WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
		
		IF @strObservacion <> '' EXEC sp_GrabaObservacion @dblNumero, 'GD', @strObservacion, @strUsuario
		
		SET @tmp_cursor  = CURSOR FOR
		SELECT strCodigo, dblCantidad * (-1) FROM TMPDetalleGuiaDespacho WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @strCodMat, @dblCantMat
		WHILE @@FETCH_STATUS = 0
		BEGIN
			EXEC sp_ActualizaBodega @strBodega, @strCodMat, @dblCantMat
			FETCH NEXT FROM @tmp_cursor INTO @strCodMat, @dblCantMat
		END
		CLOSE @tmp_cursor
		
		DELETE FROM TMPDetalleGuiaDespacho WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
		
		UPDATE CaratulaOC SET strObservacion = strObservacion + '. Devoluci&oacute;n a proveedor, Gu&iacute;a Despacho N&deg; ' +
		CONVERT(VARCHAR, @dblNumero) WHERE dblUltima = @dblNumOC AND strBodega = @strBodega
		
        Insert Into CorrelativoDoc (strUsuario, strTipoDoc, dblCorrelativoUsu, dtmFecha) Values(@strUsuario, 'DES', @dblNumero,  convert(varchar, getdate(), 103))
		EXEC sp_setCargarStockMovil @strProveedor
	END
END
ELSE IF @dblModulo = 1
BEGIN
	UPDATE Despacho SET dblNumero = @dblNumero, dtmDespacho = CONVERT(DATETIME, @dtmFecha, 101) WHERE dblNumero = @dblNumOC
	
	DELETE FROM DetalleDespacho WHERE dblNumero = @dblNumOC
	
	INSERT DetalleDespacho
	SELECT @dblNumero, strCodigo, dblCantidad, NULL FROM TMPDetalleGuiaDespacho WHERE dblModulo =  1 AND strUsuario = @strUsuario
	
	EXEC sp_getKardex '', @strBodega
	
	DELETE FROM TMPDetalleGuiaDespacho WHERE dblModulo =  1 AND strUsuario = @strUsuario
END
SELECT @dblError AS dblError
GO
/****** Object:  StoredProcedure [dbo].[sp_setAgregaCajaChica]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AUTOR: RFGP
FECHA: 28/09/2007
VER.: 1.2
*/
CREATE          PROC [dbo].[sp_setAgregaCajaChica]
@dblModulo NUMERIC,
@strUsuario VARCHAR(50),
@strBodega VARCHAR(50),
@strFecha VARCHAR(10),
@strResponsable VARCHAR(10),
@strNota VARCHAR(1000),
@dblFactor NUMERIC(18, 2),
@dblNumero NUMERIC = NULL
AS
DECLARE @strSQL VARCHAR(3000), @dblError NUMERIC, @tmp_cursor CURSOR
IF @dblModulo = 0
BEGIN
	DECLARE @dblNumInt NUMERIC, @dblNumCC NUMERIC
	
	EXEC @dblNumInt = sp_getCorrelativo @strUsuario, 'CC' , 1
	IF @dblNumInt <> 0
	BEGIN
		-- CORRELATIVO DE USUARIO --
		UPDATE General..EncargadoFondoFijo SET dblCorrelativo = ISNULL(dblCorrelativo, 0) + 1 WHERE strUsuario = @strResponsable
		SET @tmp_cursor = CURSOR FOR
		SELECT dblCorrelativo FROM General..EncargadoFondoFijo WHERE strUsuario = @strResponsable
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblNumCC
		IF @@FETCH_STATUS <> 0 SET @dblNumCC = 0
		CLOSE @tmp_cursor
		
		UPDATE CorrelativoDoc SET dblCorrelativoUsu = @dblNumCC WHERE dblNumero = @dblNumInt
		
		INSERT CaratulaCC
		VALUES (@dblNumInt, @dblNumCC, CONVERT(DATETIME, @strFecha, 101), @strResponsable, @strBodega, @strNota, 0, @dblFactor)
		
		INSERT DetalleCajaC
		SELECT @dblNumInt, strCodigo, dblCantidad, dblPrecio, dblTipoDoc, dblNumDoc, dblNumOC, dblRechazo 
		FROM TMPDetalleCajaChica WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
		
		DELETE FROM TMPDetalleCajaChica WHERE dblModulo = 0 AND strBodega = @strBodega AND strUsuario = @strUsuario
		
		SELECT @dblNumInt AS dblNumInt, @dblNumCC AS dblNumCC
	END
END
ELSE IF @dblModulo = 1 OR @dblModulo = 2 OR @dblModulo = 3
BEGIN
	SET @strSQL = 'UPDATE CaratulaCC SET strNota = ''' + @strNota + ''''
	IF @dblModulo = 1
	BEGIN
		SET @strSQL = @strSQL + ', dblEstado = 1'
		EXEC sp_CambiaEstado 'CC', @dblNumero, 1, @strResponsable
	END
	ELSE
	BEGIN
		DECLARE @dblTotFil NUMERIC, @dblTotRech NUMERIC
		SET @dblError = 0
		SET @tmp_cursor = CURSOR FOR
		SELECT ISNULL(COUNT(dblModulo), 0) AS dblTotFil FROM TMPDetalleCajaChica 
		WHERE dblModulo =  1 AND strBodega = @strBodega AND strUsuario = @strUsuario
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblTotFil
		IF @@FETCH_STATUS <> 0 SET @dblError = 1
		CLOSE @tmp_cursor
	
		SET @tmp_cursor = CURSOR FOR
		SELECT ISNULL(COUNT(dblModulo), 0) AS dblTotRech FROM TMPDetalleCajaChica 
		WHERE dblModulo =  1 AND strBodega = @strBodega AND strUsuario = @strUsuario AND NOT dblRechazo IS NULL
		OPEN @tmp_cursor
		FETCH NEXT FROM @tmp_cursor INTO @dblTotRech
		IF @@FETCH_STATUS <> 0 SET @dblError = 1
		CLOSE @tmp_cursor
	
		IF @dblError = 0
		BEGIN
			IF @dblTotRech = 0
			BEGIN
				SET @strSQL = @strSQL + ', dblEstado = 2'
				EXEC sp_CambiaEstado 'CC', @dblNumero, 2, @strResponsable
			END
			ELSE IF @dblTotRech < @dblTotFil
			BEGIN
				SET @strSQL = @strSQL + ', dblEstado = 3'
				EXEC sp_CambiaEstado 'CC', @dblNumero, 3, @strResponsable
			END
			ELSE IF @dblTotRech = @dblTotFil
			BEGIN
				SET @strSQL = @strSQL + ', dblEstado = 4'
				EXEC sp_CambiaEstado 'CC', @dblNumero, 4, @strResponsable
			END
		END
	END
	SET @strSQL = @strSQL + ' WHERE dblNumero = ' + CONVERT(VARCHAR, @dblNumero)
	EXEC(@strSQL)
	
	DELETE FROM DetalleCajaC WHERE dblNumero = @dblNumero
	
	INSERT DetalleCajaC
	SELECT @dblNumero, strCodigo, dblCantidad, dblPrecio, dblTipoDoc, dblNumDoc, dblNumOC, dblRechazo 
	FROM TMPDetalleCajaChica WHERE dblModulo = 1 AND strBodega = @strBodega AND strUsuario = @strUsuario
	
	DELETE FROM TMPDetalleCajaChica WHERE dblModulo = 1 AND strBodega = @strBodega AND strUsuario = @strUsuario
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getConsumoMaterialN2]    Script Date: 07/26/2012 16:15:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE     PROCEDURE [dbo].[sp_getConsumoMaterialN2]
/*RFGP*/
@strUsuario CHAR(100), 
@strBodega CHAR(100), 
@strPartida VARCHAR(20)
AS
DECLARE @strTabla VARCHAR(100), @strCodigo CHAR(10), @strDescripcion VARCHAR(100), 
@strUnidad CHAR(10), @dblCantidad NUMERIC(18,2), @dblPrecio NUMERIC, @dblTotal NUMERIC
SET @dblTotal = 0
SET @strTabla='CM_N2_'+ RTRIM(@strUsuario) + '_TMP'
EXEC('CREATE TABLE '+@strTabla+' (strCodigo VARCHAR(50), strDescripcion VARCHAR(100), strUnidad CHAR(10), dblCantidad NUMERIC(18, 2), dblTotal NUMERIC)')

DECLARE material_cursor CURSOR FOR
SELECT MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad, SUM(DetalleVC.dblCantidad) As dblCantidad
FROM MaterialCasa INNER JOIN DetalleVC ON (MaterialCasa.strCodigo = DetalleVC.strCodigo)
INNER JOIN CaratulaVC ON (DetalleVC.dblInterno=CaratulaVC.dblInterno)
WHERE DetalleVC.strPartida=@strPartida AND CaratulaVC.strBodega=@strBodega
GROUP BY MaterialCasa.strCodigo, MaterialCasa.strDescripcion, MaterialCasa.strUnidad
ORDER BY MaterialCasa.strCodigo
OPEN material_cursor
FETCH NEXT FROM material_cursor INTO @strCodigo, @strDescripcion, @strUnidad, @dblCantidad
WHILE @@FETCH_STATUS=0
BEGIN
   EXEC @dblTotal = sp_getTotalMaterial @strPartida, @strBodega, @strCodigo
   EXEC('INSERT '+@strTabla+' VALUES ('''+@strCodigo+''','''+@strDescripcion+''','''+@strUnidad+''','+@dblCantidad+','+@dblTotal+')')
   FETCH NEXT FROM material_cursor INTO @strCodigo, @strDescripcion, @strUnidad, @dblCantidad
END
CLOSE material_cursor
DEALLOCATE material_cursor

EXEC('SELECT * FROM '+@strTabla+' ORDER BY dblTotal DESC')

EXEC('DROP TABLE '+@strTabla)
GO
/****** Object:  Default [DF__CaratulaF__dblEs__16A772C0]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[CaratulaFacturaInterna] ADD  DEFAULT (0) FOR [dblEstado]
GO
/****** Object:  Default [DF__DetalleFa__dblCa__27D1FEC2]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[DetalleFacturaInterna] ADD  DEFAULT (0.00) FOR [dblCantidad]
GO
/****** Object:  Default [DF__DetalleFa__dblPr__28C622FB]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[DetalleFacturaInterna] ADD  DEFAULT (0) FOR [dblPrecio]
GO
/****** Object:  Default [DF__Ingreso__intCC__3808668B]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[Ingreso] ADD  DEFAULT (0) FOR [intCC]
GO
/****** Object:  Default [DF__Ingreso__dblEsta__38FC8AC4]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[Ingreso] ADD  DEFAULT (0) FOR [dblEstado]
GO
/****** Object:  Default [DF__TMPDetall__dblCa__4191D0C5]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[TMPDetalleCajaChica] ADD  DEFAULT (0.00) FOR [dblCantidad]
GO
/****** Object:  Default [DF__TMPDetall__dblPr__4285F4FE]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[TMPDetalleCajaChica] ADD  DEFAULT (0) FOR [dblPrecio]
GO
/****** Object:  Default [DF__TMPDetall__dblTo__437A1937]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[TMPDetalleCajaChica] ADD  DEFAULT (0) FOR [dblTotal]
GO
/****** Object:  Default [DF__TMPDetall__dblRe__446E3D70]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[TMPDetalleCajaChica] ADD  DEFAULT (0) FOR [dblRechazo]
GO
/****** Object:  Default [DF__TMPFactur__dblCa__4DF7A7AA]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[TMPFacturaInterna] ADD  DEFAULT (0.00) FOR [dblCantidad]
GO
/****** Object:  Default [DF__TMPFactur__dblPr__4EEBCBE3]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[TMPFacturaInterna] ADD  DEFAULT (0) FOR [dblPrecio]
GO
/****** Object:  Default [DF__TMPFactur__dblSe__4FDFF01C]    Script Date: 07/26/2012 16:15:53 ******/
ALTER TABLE [dbo].[TMPFacturaInterna] ADD  DEFAULT (0) FOR [dblSeleccion]
GO
